2020-02-15/17:34:20		Start of Validation on files for prediction!!
2020-02-15/17:34:20		Raw Data Validation Complete!!
2020-02-15/17:34:20		Starting Data Transforamtion!!
2020-02-15/17:34:21		DataTransformation Completed!!!
2020-02-15/17:34:21		Creating Prediction_Database and tables on the basis of given schema!!!
2020-02-15/17:34:25		Table creation Completed!!
2020-02-15/17:34:25		Insertion of Data into Table started!!!!
2020-02-15/17:35:36		Insertion in Table completed!!!
2020-02-15/17:35:36		Deleting Good Data Folder!!!
2020-02-15/17:35:36		Good_Data folder deleted!!!
2020-02-15/17:35:36		Moving bad files to Archive and deleting Bad_Data folder!!!
2020-02-15/17:35:36		Bad files moved to archive!! Bad folder Deleted!!
2020-02-15/17:35:36		Validation Operation completed!!
2020-02-15/17:35:36		Extracting csv file from table
2020-02-15/17:37:04		Start of Prediction
2020-02-15/17:37:04		Entered the get_data method of the Data_Getter class
2020-02-15/17:37:04		Data Load Successful.Exited the get_data method of the Data_Getter class
2020-02-15/17:37:04		Entered the remove_columns method of the Preprocessor class
2020-02-15/17:37:04		Column removal Successful.Exited the remove_columns method of the Preprocessor class
2020-02-15/17:37:04		Entered the is_null_present method of the Preprocessor class
2020-02-15/17:37:04		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2020-02-15/17:37:04		Entered the impute_missing_values method of the Preprocessor class
2020-02-15/17:37:04		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2020-02-15/17:37:07		Entered the encode_categorical_columns method of the Preprocessor class
2020-02-15/17:37:07		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2020-02-15/17:37:10		Entered the scale_numerical_columns method of the Preprocessor class
2020-02-15/17:37:20		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2020-02-15/17:37:24		Entered the load_model method of the File_Operation class
2020-02-15/17:37:24		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2020-02-15/17:37:29		Entered the find_correct_model_file method of the File_Operation class
2020-02-15/17:37:29		Exited the find_correct_model_file method of the Model_Finder class.
2020-02-15/17:37:30		Entered the load_model method of the File_Operation class
2020-02-15/17:37:30		Model File XGBoost0 loaded. Exited the load_model method of the Model_Finder class
2020-02-15/17:37:41		End of Prediction
2020-04-13/15:26:22		Start of Prediction
2020-04-13/15:26:22		Entered the get_data method of the Data_Getter class
2020-04-13/15:26:22		Data Load Successful.Exited the get_data method of the Data_Getter class
2020-04-13/15:26:22		Entered the remove_columns method of the Preprocessor class
2020-04-13/15:26:22		Column removal Successful.Exited the remove_columns method of the Preprocessor class
2020-04-13/15:26:22		Entered the is_null_present method of the Preprocessor class
2020-04-13/15:26:22		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2020-04-13/15:26:22		Entered the impute_missing_values method of the Preprocessor class
2020-04-13/15:26:22		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2020-04-13/15:26:22		Entered the encode_categorical_columns method of the Preprocessor class
2020-04-13/15:26:22		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2020-04-13/15:26:22		Entered the scale_numerical_columns method of the Preprocessor class
2020-04-13/15:26:22		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2020-04-13/15:26:22		Entered the load_model method of the File_Operation class
2020-04-13/15:26:22		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2020-04-13/15:26:22		Entered the find_correct_model_file method of the File_Operation class
2020-04-13/15:26:22		Exited the find_correct_model_file method of the Model_Finder class.
2020-04-13/15:26:22		Entered the load_model method of the File_Operation class
2020-04-13/15:26:22		Model File XGBoost0 loaded. Exited the load_model method of the Model_Finder class
2020-04-13/15:26:22		End of Prediction
2025-01-25/13:08:14		Start of Validation on files for prediction!!
2025-01-25/13:08:14		Raw Data Validation Complete!!
2025-01-25/13:08:14		Starting Data Transforamtion!!
2025-01-25/13:08:14		DataTransformation Completed!!!
2025-01-25/13:08:14		Creating Prediction_Database and tables on the basis of given schema!!!
2025-01-25/13:08:14		Table creation Completed!!
2025-01-25/13:08:14		Insertion of Data into Table started!!!!
2025-01-25/13:08:15		Insertion in Table completed!!!
2025-01-25/13:08:15		Deleting Good Data Folder!!!
2025-01-25/13:08:15		Good_Data folder deleted!!!
2025-01-25/13:08:15		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-01-25/13:08:15		Bad files moved to archive!! Bad folder Deleted!!
2025-01-25/13:08:15		Validation Operation completed!!
2025-01-25/13:08:15		Extracting csv file from table
2025-01-25/13:08:15		Start of Prediction
2025-01-25/13:08:15		Entered the get_data method of the Data_Getter class
2025-01-25/13:08:15		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-01-25/13:08:15		Entered the remove_columns method of the Preprocessor class
2025-01-25/13:08:15		Column removal Successful.Exited the remove_columns method of the Preprocessor class
2025-01-25/13:08:15		Entered the is_null_present method of the Preprocessor class
2025-01-25/13:08:15		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-01-25/13:08:15		Entered the impute_missing_values method of the Preprocessor class
2025-01-25/13:08:15		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-01-25/13:08:15		Entered the encode_categorical_columns method of the Preprocessor class
2025-01-25/13:08:15		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-01-25/13:08:15		Entered the scale_numerical_columns method of the Preprocessor class
2025-01-25/13:08:15		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-01-25/13:08:15		Entered the load_model method of the File_Operation class
2025-01-25/13:08:15		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-01-25/13:08:15		Error occured while running the prediction!! Error:: 'KMeans' object has no attribute '_n_threads'
2025-01-25/13:08:30		Start of Validation on files for prediction!!
2025-01-25/13:08:30		Raw Data Validation Complete!!
2025-01-25/13:08:30		Starting Data Transforamtion!!
2025-01-25/13:08:30		DataTransformation Completed!!!
2025-01-25/13:08:30		Creating Prediction_Database and tables on the basis of given schema!!!
2025-01-25/13:08:31		Table creation Completed!!
2025-01-25/13:08:31		Insertion of Data into Table started!!!!
2025-01-25/13:08:32		Insertion in Table completed!!!
2025-01-25/13:08:32		Deleting Good Data Folder!!!
2025-01-25/13:08:32		Good_Data folder deleted!!!
2025-01-25/13:08:32		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-01-25/13:08:32		Bad files moved to archive!! Bad folder Deleted!!
2025-01-25/13:08:32		Validation Operation completed!!
2025-01-25/13:08:32		Extracting csv file from table
2025-01-25/13:08:32		Start of Prediction
2025-01-25/13:08:32		Entered the get_data method of the Data_Getter class
2025-01-25/13:08:32		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-01-25/13:08:32		Entered the remove_columns method of the Preprocessor class
2025-01-25/13:08:32		Column removal Successful.Exited the remove_columns method of the Preprocessor class
2025-01-25/13:08:32		Entered the is_null_present method of the Preprocessor class
2025-01-25/13:08:32		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-01-25/13:08:32		Entered the impute_missing_values method of the Preprocessor class
2025-01-25/13:08:32		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-01-25/13:08:32		Entered the encode_categorical_columns method of the Preprocessor class
2025-01-25/13:08:32		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-01-25/13:08:32		Entered the scale_numerical_columns method of the Preprocessor class
2025-01-25/13:08:32		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-01-25/13:08:32		Entered the load_model method of the File_Operation class
2025-01-25/13:08:32		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-01-25/13:08:32		Error occured while running the prediction!! Error:: 'KMeans' object has no attribute '_n_threads'
2025-03-27/11:57:58		Start of Validation on files for prediction!!
2025-03-27/11:57:58		Raw Data Validation Complete!!
2025-03-27/11:57:58		Starting Data Transforamtion!!
2025-03-27/11:57:58		DataTransformation Completed!!!
2025-03-27/11:57:58		Creating Prediction_Database and tables on the basis of given schema!!!
2025-03-27/11:57:58		Table creation Completed!!
2025-03-27/11:57:58		Insertion of Data into Table started!!!!
2025-03-27/11:58:03		Insertion in Table completed!!!
2025-03-27/11:58:03		Deleting Good Data Folder!!!
2025-03-27/11:58:03		Good_Data folder deleted!!!
2025-03-27/11:58:03		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-03-27/11:58:03		Bad files moved to archive!! Bad folder Deleted!!
2025-03-27/11:58:03		Validation Operation completed!!
2025-03-27/11:58:03		Extracting csv file from table
2025-03-27/11:58:03		Start of Prediction
2025-03-27/11:58:03		Entered the get_data method of the Data_Getter class
2025-03-27/11:58:03		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-03-27/11:58:03		Entered the remove_columns method of the Preprocessor class
2025-03-27/11:58:03		Column removal Successful.Exited the remove_columns method of the Preprocessor class
2025-03-27/11:58:03		Entered the is_null_present method of the Preprocessor class
2025-03-27/11:58:03		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-03-27/11:58:03		Entered the impute_missing_values method of the Preprocessor class
2025-03-27/11:58:03		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-03-27/11:58:03		Entered the encode_categorical_columns method of the Preprocessor class
2025-03-27/11:58:03		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-03-27/11:58:03		Entered the scale_numerical_columns method of the Preprocessor class
2025-03-27/11:58:03		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-03-27/11:58:03		Entered the load_model method of the File_Operation class
2025-03-27/11:58:03		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-03-27/11:58:03		Error occured while running the prediction!! Error:: The feature names should match those that were passed during fit.
Feature names must be in the same order as they were in fit.

2025-03-27/17:32:58		Start of Validation on files for prediction!!
2025-03-27/17:32:58		Raw Data Validation Complete!!
2025-03-27/17:32:58		Starting Data Transforamtion!!
2025-03-27/17:32:58		DataTransformation Completed!!!
2025-03-27/17:32:58		Creating Prediction_Database and tables on the basis of given schema!!!
2025-03-27/17:32:59		Table creation Completed!!
2025-03-27/17:32:59		Insertion of Data into Table started!!!!
2025-03-27/17:33:04		Insertion in Table completed!!!
2025-03-27/17:33:04		Deleting Good Data Folder!!!
2025-03-27/17:33:04		Good_Data folder deleted!!!
2025-03-27/17:33:04		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-03-27/17:33:04		Bad files moved to archive!! Bad folder Deleted!!
2025-03-27/17:33:04		Validation Operation completed!!
2025-03-27/17:33:04		Extracting csv file from table
2025-03-27/17:33:04		Start of Prediction
2025-03-27/17:33:04		Entered the get_data method of the Data_Getter class
2025-03-27/17:33:04		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-03-27/17:33:04		Entered the remove_columns method of the Preprocessor class
2025-03-27/17:33:04		Column removal Successful.Exited the remove_columns method of the Preprocessor class
2025-03-27/17:33:04		Entered the is_null_present method of the Preprocessor class
2025-03-27/17:33:04		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-03-27/17:33:04		Entered the impute_missing_values method of the Preprocessor class
2025-03-27/17:33:04		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-03-27/17:33:04		Entered the encode_categorical_columns method of the Preprocessor class
2025-03-27/17:33:04		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-03-27/17:33:04		Entered the scale_numerical_columns method of the Preprocessor class
2025-03-27/17:33:04		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-03-27/17:33:04		Entered the load_model method of the File_Operation class
2025-03-27/17:33:04		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-03-27/17:33:04		Error occured while running the prediction!! Error:: The feature names should match those that were passed during fit.
Feature names must be in the same order as they were in fit.

2025-03-27/17:47:33		Start of Validation on files for prediction!!
2025-03-27/17:47:33		Raw Data Validation Complete!!
2025-03-27/17:47:33		Starting Data Transforamtion!!
2025-03-27/17:47:33		DataTransformation Completed!!!
2025-03-27/17:47:33		Creating Prediction_Database and tables on the basis of given schema!!!
2025-03-27/17:47:34		Table creation Completed!!
2025-03-27/17:47:34		Insertion of Data into Table started!!!!
2025-03-27/17:47:39		Insertion in Table completed!!!
2025-03-27/17:47:39		Deleting Good Data Folder!!!
2025-03-27/17:47:39		Good_Data folder deleted!!!
2025-03-27/17:47:39		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-03-27/17:47:39		Bad files moved to archive!! Bad folder Deleted!!
2025-03-27/17:47:39		Validation Operation completed!!
2025-03-27/17:47:39		Extracting csv file from table
2025-03-27/17:47:39		Start of Prediction
2025-03-27/17:47:39		Entered the get_data method of the Data_Getter class
2025-03-27/17:47:39		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-03-27/17:47:39		Entered the remove_columns method of the Preprocessor class
2025-03-27/17:47:39		Column removal Successful.Exited the remove_columns method of the Preprocessor class
2025-03-27/17:47:39		Entered the is_null_present method of the Preprocessor class
2025-03-27/17:47:39		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-03-27/17:47:39		Entered the impute_missing_values method of the Preprocessor class
2025-03-27/17:47:39		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-03-27/17:47:39		Entered the encode_categorical_columns method of the Preprocessor class
2025-03-27/17:47:39		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-03-27/17:47:39		Entered the scale_numerical_columns method of the Preprocessor class
2025-03-27/17:47:39		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-03-27/17:47:39		Entered the load_model method of the File_Operation class
2025-03-27/17:47:39		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-03-27/17:47:39		Error occured while running the prediction!! Error:: The feature names should match those that were passed during fit.
Feature names must be in the same order as they were in fit.

2025-03-29/09:17:35		Start of Validation on files for prediction!!
2025-03-29/09:17:35		Raw Data Validation Complete!!
2025-03-29/09:17:35		Starting Data Transforamtion!!
2025-03-29/09:17:35		DataTransformation Completed!!!
2025-03-29/09:17:35		Creating Prediction_Database and tables on the basis of given schema!!!
2025-03-29/09:17:35		Table creation Completed!!
2025-03-29/09:17:35		Insertion of Data into Table started!!!!
2025-03-29/09:17:38		Insertion in Table completed!!!
2025-03-29/09:17:38		Deleting Good Data Folder!!!
2025-03-29/09:17:38		Good_Data folder deleted!!!
2025-03-29/09:17:38		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-03-29/09:17:38		Bad files moved to archive!! Bad folder Deleted!!
2025-03-29/09:17:38		Validation Operation completed!!
2025-03-29/09:17:38		Extracting csv file from table
2025-03-29/09:17:38		Start of Prediction
2025-03-29/09:17:38		Entered the get_data method of the Data_Getter class
2025-03-29/09:17:38		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-03-29/09:17:38		Entered the is_null_present method of the Preprocessor class
2025-03-29/09:17:38		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-03-29/09:17:38		Entered the impute_missing_values method of the Preprocessor class
2025-03-29/09:17:38		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-03-29/09:17:38		Entered the encode_categorical_columns method of the Preprocessor class
2025-03-29/09:17:38		Exception occured in encode_categorical_columns method of the Preprocessor class. Exception message:  'policy_csl'
2025-03-29/09:17:38		encoding for categorical columns Failed. Exited the encode_categorical_columns method of the Preprocessor class
2025-03-29/09:17:38		Error occurred while running prediction: 
2025-03-29/09:21:32		Start of Validation on files for prediction!!
2025-03-29/09:21:32		Raw Data Validation Complete!!
2025-03-29/09:21:32		Starting Data Transforamtion!!
2025-03-29/09:21:32		DataTransformation Completed!!!
2025-03-29/09:21:32		Creating Prediction_Database and tables on the basis of given schema!!!
2025-03-29/09:21:32		Table creation Completed!!
2025-03-29/09:21:32		Insertion of Data into Table started!!!!
2025-03-29/09:21:35		Insertion in Table completed!!!
2025-03-29/09:21:35		Deleting Good Data Folder!!!
2025-03-29/09:21:35		Good_Data folder deleted!!!
2025-03-29/09:21:35		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-03-29/09:21:35		Bad files moved to archive!! Bad folder Deleted!!
2025-03-29/09:21:35		Validation Operation completed!!
2025-03-29/09:21:35		Extracting csv file from table
2025-03-29/09:21:35		Starting prediction process
2025-03-29/09:21:35		Entered the get_data method of the Data_Getter class
2025-03-29/09:21:35		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-03-29/09:21:35		Raw data shape: (500, 38)
2025-03-29/09:21:35		Columns before drop: ['months_as_customer', 'age', 'policy_number', 'policy_bind_date', 'policy_state', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex', 'insured_education_level', 'insured_occupation', 'insured_hobbies', 'insured_relationship', 'capital-gains', 'capital-loss', 'incident_date', 'incident_type', 'collision_type', 'incident_severity', 'authorities_contacted', 'incident_state', 'incident_city', 'incident_location', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'property_damage', 'bodily_injuries', 'witnesses', 'police_report_available', 'total_claim_amount', 'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make', 'auto_model', 'auto_year']
2025-03-29/09:21:35		Columns after drop: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'umbrella_limit', 'insured_sex', 'insured_education_level', 'insured_occupation', 'insured_relationship', 'capital-gains', 'capital-loss', 'incident_type', 'collision_type', 'incident_severity', 'authorities_contacted', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'property_damage', 'bodily_injuries', 'witnesses', 'police_report_available', 'injury_claim', 'property_claim', 'vehicle_claim']
2025-03-29/09:21:35		Columns ordered correctly
2025-03-29/09:21:35		Entered the is_null_present method of the Preprocessor class
2025-03-29/09:21:35		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-03-29/09:21:35		Imputing missing values in: ['property_damage', 'police_report_available']
2025-03-29/09:21:35		Entered the impute_missing_values method of the Preprocessor class
2025-03-29/09:21:35		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-03-29/09:21:35		Entered the encode_categorical_columns method of the Preprocessor class
2025-03-29/09:21:35		Exception occured in encode_categorical_columns method of the Preprocessor class. Exception message:  'policy_csl'
2025-03-29/09:21:35		encoding for categorical columns Failed. Exited the encode_categorical_columns method of the Preprocessor class
2025-03-29/09:25:58		Start of Validation on files for prediction!!
2025-03-29/09:25:58		Raw Data Validation Complete!!
2025-03-29/09:25:58		Starting Data Transforamtion!!
2025-03-29/09:25:58		DataTransformation Completed!!!
2025-03-29/09:25:58		Creating Prediction_Database and tables on the basis of given schema!!!
2025-03-29/09:25:58		Table creation Completed!!
2025-03-29/09:25:58		Insertion of Data into Table started!!!!
2025-03-29/09:26:02		Insertion in Table completed!!!
2025-03-29/09:26:02		Deleting Good Data Folder!!!
2025-03-29/09:26:02		Good_Data folder deleted!!!
2025-03-29/09:26:02		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-03-29/09:26:02		Bad files moved to archive!! Bad folder Deleted!!
2025-03-29/09:26:02		Validation Operation completed!!
2025-03-29/09:26:02		Extracting csv file from table
2025-03-29/09:26:02		Starting prediction process
2025-03-29/09:26:02		Entered the get_data method of the Data_Getter class
2025-03-29/09:26:02		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-03-29/09:26:02		Raw data shape: (500, 38)
2025-03-29/09:26:02		Columns before drop: ['months_as_customer', 'age', 'policy_number', 'policy_bind_date', 'policy_state', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex', 'insured_education_level', 'insured_occupation', 'insured_hobbies', 'insured_relationship', 'capital-gains', 'capital-loss', 'incident_date', 'incident_type', 'collision_type', 'incident_severity', 'authorities_contacted', 'incident_state', 'incident_city', 'incident_location', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'property_damage', 'bodily_injuries', 'witnesses', 'police_report_available', 'total_claim_amount', 'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make', 'auto_model', 'auto_year']
2025-03-29/09:26:02		Columns after drop: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'umbrella_limit', 'insured_sex', 'insured_education_level', 'insured_occupation', 'insured_relationship', 'capital-gains', 'capital-loss', 'incident_type', 'collision_type', 'incident_severity', 'authorities_contacted', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'property_damage', 'bodily_injuries', 'witnesses', 'police_report_available', 'injury_claim', 'property_claim', 'vehicle_claim']
2025-03-29/09:26:02		Columns ordered correctly
2025-03-29/09:26:02		Entered the is_null_present method of the Preprocessor class
2025-03-29/09:26:02		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-03-29/09:26:02		Imputing missing values in: ['property_damage', 'police_report_available']
2025-03-29/09:26:02		Entered the impute_missing_values method of the Preprocessor class
2025-03-29/09:26:02		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-03-29/09:26:02		Entered the encode_categorical_columns method of the Preprocessor class
2025-03-29/09:26:02		Exception occured in encode_categorical_columns method of the Preprocessor class. Exception message:  'policy_csl'
2025-03-29/09:26:02		encoding for categorical columns Failed. Exited the encode_categorical_columns method of the Preprocessor class
2025-03-29/09:26:02		Error in predictionFromModel: 
2025-03-29/09:26:02		Traceback (most recent call last):
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3653, in get_loc
    return self._engine.get_loc(casted_key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "pandas\_libs\index.pyx", line 147, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 176, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'policy_csl'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 259, in encode_categorical_columns
    self.cat_df['policy_csl'] = self.cat_df['policy_csl'].map({'100/300': 1, '250/500': 2.5, '500/1000': 5})
                                ~~~~~~~~~~~^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\frame.py", line 3761, in __getitem__
    indexer = self.columns.get_loc(key)
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3655, in get_loc
    raise KeyError(key) from err
KeyError: 'policy_csl'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\predictFromModel.py", line 68, in predictionFromModel
    data = preprocessor.encode_categorical_columns(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 289, in encode_categorical_columns
    raise Exception()
Exception

2025-03-29/09:29:22		Start of Validation on files for prediction!!
2025-03-29/09:29:22		Raw Data Validation Complete!!
2025-03-29/09:29:22		Starting Data Transforamtion!!
2025-03-29/09:29:22		DataTransformation Completed!!!
2025-03-29/09:29:22		Creating Prediction_Database and tables on the basis of given schema!!!
2025-03-29/09:29:22		Table creation Completed!!
2025-03-29/09:29:22		Insertion of Data into Table started!!!!
2025-03-29/09:29:24		Insertion in Table completed!!!
2025-03-29/09:29:24		Deleting Good Data Folder!!!
2025-03-29/09:29:24		Good_Data folder deleted!!!
2025-03-29/09:29:24		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-03-29/09:29:24		Bad files moved to archive!! Bad folder Deleted!!
2025-03-29/09:29:24		Validation Operation completed!!
2025-03-29/09:29:24		Extracting csv file from table
2025-03-29/09:29:24		=== Starting Prediction Process ===
2025-03-29/09:29:24		Loading data...
2025-03-29/09:29:24		Entered the get_data method of the Data_Getter class
2025-03-29/09:29:24		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-03-29/09:29:24		Initial data shape: (500, 38)
2025-03-29/09:29:24		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-03-29/09:29:24		Final data columns: ['months_as_customer', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available']
2025-03-29/09:29:24		Entered the is_null_present method of the Preprocessor class
2025-03-29/09:29:24		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-03-29/09:29:24		Imputing missing values in: ['property_damage', 'police_report_available']
2025-03-29/09:29:24		Entered the impute_missing_values method of the Preprocessor class
2025-03-29/09:29:24		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-03-29/09:29:24		Encoding categorical columns...
2025-03-29/09:29:24		Entered the encode_categorical_columns method of the Preprocessor class
2025-03-29/09:29:24		Exception occured in encode_categorical_columns method of the Preprocessor class. Exception message:  'policy_csl'
2025-03-29/09:29:24		encoding for categorical columns Failed. Exited the encode_categorical_columns method of the Preprocessor class
2025-03-29/09:29:24		Prediction failed at step: Exception - 
2025-03-29/09:29:24		Traceback (most recent call last):
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3653, in get_loc
    return self._engine.get_loc(casted_key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "pandas\_libs\index.pyx", line 147, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 176, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'policy_csl'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 259, in encode_categorical_columns
    self.cat_df['policy_csl'] = self.cat_df['policy_csl'].map({'100/300': 1, '250/500': 2.5, '500/1000': 5})
                                ~~~~~~~~~~~^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\frame.py", line 3761, in __getitem__
    indexer = self.columns.get_loc(key)
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3655, in get_loc
    raise KeyError(key) from err
KeyError: 'policy_csl'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\predictFromModel.py", line 68, in predictionFromModel
    data = preprocessor.encode_categorical_columns(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 289, in encode_categorical_columns
    raise Exception()
Exception

2025-03-29/09:33:52		Start of Validation on files for prediction!!
2025-03-29/09:33:52		Raw Data Validation Complete!!
2025-03-29/09:33:52		Starting Data Transforamtion!!
2025-03-29/09:33:52		DataTransformation Completed!!!
2025-03-29/09:33:52		Creating Prediction_Database and tables on the basis of given schema!!!
2025-03-29/09:33:52		Table creation Completed!!
2025-03-29/09:33:52		Insertion of Data into Table started!!!!
2025-03-29/09:33:54		Insertion in Table completed!!!
2025-03-29/09:33:54		Deleting Good Data Folder!!!
2025-03-29/09:33:54		Good_Data folder deleted!!!
2025-03-29/09:33:54		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-03-29/09:33:54		Bad files moved to archive!! Bad folder Deleted!!
2025-03-29/09:33:54		Validation Operation completed!!
2025-03-29/09:33:54		Extracting csv file from table
2025-03-29/09:33:54		=== Starting Prediction Process ===
2025-03-29/09:33:54		Loading data...
2025-03-29/09:33:54		Entered the get_data method of the Data_Getter class
2025-03-29/09:33:54		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-03-29/09:33:54		Initial data shape: (500, 38)
2025-03-29/09:33:54		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-03-29/09:33:54		Final data columns: ['months_as_customer', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available']
2025-03-29/09:33:54		Entered the is_null_present method of the Preprocessor class
2025-03-29/09:33:54		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-03-29/09:33:54		Imputing missing values in: ['property_damage', 'police_report_available']
2025-03-29/09:33:54		Entered the impute_missing_values method of the Preprocessor class
2025-03-29/09:33:54		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-03-29/09:33:54		Encoding categorical columns...
2025-03-29/09:33:54		Entered the encode_categorical_columns method of the Preprocessor class
2025-03-29/09:33:54		Exception occured in encode_categorical_columns method of the Preprocessor class. Exception message:  'policy_csl'
2025-03-29/09:33:54		encoding for categorical columns Failed. Exited the encode_categorical_columns method of the Preprocessor class
2025-03-29/09:33:54		Prediction failed: 
2025-03-29/09:33:54		Full error traceback:
Traceback (most recent call last):
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3653, in get_loc
    return self._engine.get_loc(casted_key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "pandas\_libs\index.pyx", line 147, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 176, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'policy_csl'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 259, in encode_categorical_columns
    self.cat_df['policy_csl'] = self.cat_df['policy_csl'].map({'100/300': 1, '250/500': 2.5, '500/1000': 5})
                                ~~~~~~~~~~~^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\frame.py", line 3761, in __getitem__
    indexer = self.columns.get_loc(key)
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3655, in get_loc
    raise KeyError(key) from err
KeyError: 'policy_csl'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\predictFromModel.py", line 68, in predictionFromModel
    data = preprocessor.encode_categorical_columns(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 289, in encode_categorical_columns
    raise Exception()
Exception

2025-03-29/09:55:46		Start of Validation on files for prediction!!
2025-03-29/09:55:46		Raw Data Validation Complete!!
2025-03-29/09:55:46		Starting Data Transforamtion!!
2025-03-29/09:55:46		DataTransformation Completed!!!
2025-03-29/09:55:46		Creating Prediction_Database and tables on the basis of given schema!!!
2025-03-29/09:55:46		Table creation Completed!!
2025-03-29/09:55:46		Insertion of Data into Table started!!!!
2025-03-29/09:55:48		Insertion in Table completed!!!
2025-03-29/09:55:48		Deleting Good Data Folder!!!
2025-03-29/09:55:48		Good_Data folder deleted!!!
2025-03-29/09:55:48		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-03-29/09:55:48		Bad files moved to archive!! Bad folder Deleted!!
2025-03-29/09:55:48		Validation Operation completed!!
2025-03-29/09:55:48		Extracting csv file from table
2025-03-29/09:55:48		=== Starting Prediction Process ===
2025-03-29/09:55:48		Loading data...
2025-03-29/09:55:48		Entered the get_data method of the Data_Getter class
2025-03-29/09:55:48		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-03-29/09:55:48		Initial data shape: (500, 38)
2025-03-29/09:55:48		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-03-29/09:55:48		Final data columns: ['months_as_customer', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available']
2025-03-29/09:55:48		Entered the is_null_present method of the Preprocessor class
2025-03-29/09:55:48		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-03-29/09:55:48		Imputing missing values in: ['property_damage', 'police_report_available']
2025-03-29/09:55:48		Entered the impute_missing_values method of the Preprocessor class
2025-03-29/09:55:48		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-03-29/09:55:48		Encoding categorical columns...
2025-03-29/09:55:48		Entered the encode_categorical_columns method of the Preprocessor class
2025-03-29/09:55:48		Exception occured in encode_categorical_columns method of the Preprocessor class. Exception message:  'policy_csl'
2025-03-29/09:55:48		encoding for categorical columns Failed. Exited the encode_categorical_columns method of the Preprocessor class
2025-03-29/09:55:48		Prediction failed: 
2025-03-29/09:55:48		Full error traceback:
Traceback (most recent call last):
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3653, in get_loc
    return self._engine.get_loc(casted_key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "pandas\_libs\index.pyx", line 147, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 176, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'policy_csl'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 259, in encode_categorical_columns
    self.cat_df['policy_csl'] = self.cat_df['policy_csl'].map({'100/300': 1, '250/500': 2.5, '500/1000': 5})
                                ~~~~~~~~~~~^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\frame.py", line 3761, in __getitem__
    indexer = self.columns.get_loc(key)
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3655, in get_loc
    raise KeyError(key) from err
KeyError: 'policy_csl'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\predictFromModel.py", line 68, in predictionFromModel
    data = preprocessor.encode_categorical_columns(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 289, in encode_categorical_columns
    raise Exception()
Exception

2025-03-29/10:04:14		Start of Validation on files for prediction!!
2025-03-29/10:04:14		Raw Data Validation Complete!!
2025-03-29/10:04:14		Starting Data Transforamtion!!
2025-03-29/10:04:14		DataTransformation Completed!!!
2025-03-29/10:04:14		Creating Prediction_Database and tables on the basis of given schema!!!
2025-03-29/10:04:14		Table creation Completed!!
2025-03-29/10:04:14		Insertion of Data into Table started!!!!
2025-03-29/10:04:18		Insertion in Table completed!!!
2025-03-29/10:04:18		Deleting Good Data Folder!!!
2025-03-29/10:04:18		Good_Data folder deleted!!!
2025-03-29/10:04:18		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-03-29/10:04:18		Bad files moved to archive!! Bad folder Deleted!!
2025-03-29/10:04:18		Validation Operation completed!!
2025-03-29/10:04:18		Extracting csv file from table
2025-03-29/10:04:18		=== Starting Prediction Process ===
2025-03-29/10:04:18		Loading data...
2025-03-29/10:04:18		Entered the get_data method of the Data_Getter class
2025-03-29/10:04:18		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-03-29/10:04:18		Initial data shape: (500, 38)
2025-03-29/10:04:18		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-03-29/10:04:18		Final data columns: ['months_as_customer', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available']
2025-03-29/10:04:18		Entered the is_null_present method of the Preprocessor class
2025-03-29/10:04:18		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-03-29/10:04:18		Imputing missing values in: ['property_damage', 'police_report_available']
2025-03-29/10:04:18		Entered the impute_missing_values method of the Preprocessor class
2025-03-29/10:04:18		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-03-29/10:04:18		Encoding categorical columns...
2025-03-29/10:04:18		Entered the encode_categorical_columns method of the Preprocessor class
2025-03-29/10:04:18		Exception occured in encode_categorical_columns method of the Preprocessor class. Exception message:  'policy_csl'
2025-03-29/10:04:18		encoding for categorical columns Failed. Exited the encode_categorical_columns method of the Preprocessor class
2025-03-29/10:04:18		Prediction failed: 
2025-03-29/10:04:18		Full error traceback:
Traceback (most recent call last):
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3653, in get_loc
    return self._engine.get_loc(casted_key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "pandas\_libs\index.pyx", line 147, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 176, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'policy_csl'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 259, in encode_categorical_columns
    self.cat_df['policy_csl'] = self.cat_df['policy_csl'].map({'100/300': 1, '250/500': 2.5, '500/1000': 5})
                                ~~~~~~~~~~~^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\frame.py", line 3761, in __getitem__
    indexer = self.columns.get_loc(key)
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3655, in get_loc
    raise KeyError(key) from err
KeyError: 'policy_csl'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\predictFromModel.py", line 68, in predictionFromModel
    data = preprocessor.encode_categorical_columns(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 289, in encode_categorical_columns
    raise Exception()
Exception

2025-03-29/10:06:11		Start of Validation on files for prediction!!
2025-03-29/10:06:11		Raw Data Validation Complete!!
2025-03-29/10:06:11		Starting Data Transforamtion!!
2025-03-29/10:06:11		DataTransformation Completed!!!
2025-03-29/10:06:11		Creating Prediction_Database and tables on the basis of given schema!!!
2025-03-29/10:06:11		Table creation Completed!!
2025-03-29/10:06:11		Insertion of Data into Table started!!!!
2025-03-29/10:06:14		Insertion in Table completed!!!
2025-03-29/10:06:14		Deleting Good Data Folder!!!
2025-03-29/10:06:14		Good_Data folder deleted!!!
2025-03-29/10:06:14		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-03-29/10:06:14		Bad files moved to archive!! Bad folder Deleted!!
2025-03-29/10:06:14		Validation Operation completed!!
2025-03-29/10:06:14		Extracting csv file from table
2025-03-29/10:06:14		=== Starting Prediction Process ===
2025-03-29/10:06:14		Loading data...
2025-03-29/10:06:14		Entered the get_data method of the Data_Getter class
2025-03-29/10:06:14		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-03-29/10:06:14		Initial data shape: (500, 38)
2025-03-29/10:06:14		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-03-29/10:06:14		Final data columns: ['months_as_customer', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available']
2025-03-29/10:06:14		Entered the is_null_present method of the Preprocessor class
2025-03-29/10:06:14		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-03-29/10:06:14		Imputing missing values in: ['property_damage', 'police_report_available']
2025-03-29/10:06:14		Entered the impute_missing_values method of the Preprocessor class
2025-03-29/10:06:14		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-03-29/10:06:14		Encoding categorical columns...
2025-03-29/10:06:14		Entered the encode_categorical_columns method of the Preprocessor class
2025-03-29/10:06:14		Exception occured in encode_categorical_columns method of the Preprocessor class. Exception message:  'policy_csl'
2025-03-29/10:06:14		encoding for categorical columns Failed. Exited the encode_categorical_columns method of the Preprocessor class
2025-03-29/10:06:14		Prediction failed: 
2025-03-29/10:06:14		Full error traceback:
Traceback (most recent call last):
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3653, in get_loc
    return self._engine.get_loc(casted_key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "pandas\_libs\index.pyx", line 147, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 176, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'policy_csl'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 259, in encode_categorical_columns
    self.cat_df['policy_csl'] = self.cat_df['policy_csl'].map({'100/300': 1, '250/500': 2.5, '500/1000': 5})
                                ~~~~~~~~~~~^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\frame.py", line 3761, in __getitem__
    indexer = self.columns.get_loc(key)
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3655, in get_loc
    raise KeyError(key) from err
KeyError: 'policy_csl'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\predictFromModel.py", line 68, in predictionFromModel
    data = preprocessor.encode_categorical_columns(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 289, in encode_categorical_columns
    raise Exception()
Exception

2025-03-29/10:06:18		Start of Validation on files for prediction!!
2025-03-29/10:06:18		Raw Data Validation Complete!!
2025-03-29/10:06:18		Starting Data Transforamtion!!
2025-03-29/10:06:18		DataTransformation Completed!!!
2025-03-29/10:06:18		Creating Prediction_Database and tables on the basis of given schema!!!
2025-03-29/10:06:18		Table creation Completed!!
2025-03-29/10:06:18		Insertion of Data into Table started!!!!
2025-03-29/10:06:22		Insertion in Table completed!!!
2025-03-29/10:06:22		Deleting Good Data Folder!!!
2025-03-29/10:06:22		Good_Data folder deleted!!!
2025-03-29/10:06:22		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-03-29/10:06:22		Bad files moved to archive!! Bad folder Deleted!!
2025-03-29/10:06:22		Validation Operation completed!!
2025-03-29/10:06:22		Extracting csv file from table
2025-03-29/10:06:22		=== Starting Prediction Process ===
2025-03-29/10:06:22		Loading data...
2025-03-29/10:06:22		Entered the get_data method of the Data_Getter class
2025-03-29/10:06:22		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-03-29/10:06:22		Initial data shape: (500, 38)
2025-03-29/10:06:22		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-03-29/10:06:22		Final data columns: ['months_as_customer', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available']
2025-03-29/10:06:22		Entered the is_null_present method of the Preprocessor class
2025-03-29/10:06:22		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-03-29/10:06:22		Imputing missing values in: ['property_damage', 'police_report_available']
2025-03-29/10:06:22		Entered the impute_missing_values method of the Preprocessor class
2025-03-29/10:06:22		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-03-29/10:06:22		Encoding categorical columns...
2025-03-29/10:06:22		Entered the encode_categorical_columns method of the Preprocessor class
2025-03-29/10:06:22		Exception occured in encode_categorical_columns method of the Preprocessor class. Exception message:  'policy_csl'
2025-03-29/10:06:22		encoding for categorical columns Failed. Exited the encode_categorical_columns method of the Preprocessor class
2025-03-29/10:06:22		Prediction failed: 
2025-03-29/10:06:22		Full error traceback:
Traceback (most recent call last):
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3653, in get_loc
    return self._engine.get_loc(casted_key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "pandas\_libs\index.pyx", line 147, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 176, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'policy_csl'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 259, in encode_categorical_columns
    self.cat_df['policy_csl'] = self.cat_df['policy_csl'].map({'100/300': 1, '250/500': 2.5, '500/1000': 5})
                                ~~~~~~~~~~~^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\frame.py", line 3761, in __getitem__
    indexer = self.columns.get_loc(key)
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3655, in get_loc
    raise KeyError(key) from err
KeyError: 'policy_csl'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\predictFromModel.py", line 68, in predictionFromModel
    data = preprocessor.encode_categorical_columns(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 289, in encode_categorical_columns
    raise Exception()
Exception

2025-03-29/10:06:23		Start of Validation on files for prediction!!
2025-03-29/10:06:23		Raw Data Validation Complete!!
2025-03-29/10:06:23		Starting Data Transforamtion!!
2025-03-29/10:06:23		DataTransformation Completed!!!
2025-03-29/10:06:23		Creating Prediction_Database and tables on the basis of given schema!!!
2025-03-29/10:06:23		Table creation Completed!!
2025-03-29/10:06:23		Insertion of Data into Table started!!!!
2025-03-29/10:06:29		Insertion in Table completed!!!
2025-03-29/10:06:29		Deleting Good Data Folder!!!
2025-03-29/10:06:29		Good_Data folder deleted!!!
2025-03-29/10:06:29		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-03-29/10:06:29		Bad files moved to archive!! Bad folder Deleted!!
2025-03-29/10:06:29		Validation Operation completed!!
2025-03-29/10:06:29		Extracting csv file from table
2025-03-29/10:06:29		=== Starting Prediction Process ===
2025-03-29/10:06:29		Loading data...
2025-03-29/10:06:29		Entered the get_data method of the Data_Getter class
2025-03-29/10:06:29		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-03-29/10:06:29		Initial data shape: (500, 38)
2025-03-29/10:06:29		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-03-29/10:06:29		Final data columns: ['months_as_customer', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available']
2025-03-29/10:06:29		Entered the is_null_present method of the Preprocessor class
2025-03-29/10:06:29		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-03-29/10:06:29		Imputing missing values in: ['property_damage', 'police_report_available']
2025-03-29/10:06:29		Entered the impute_missing_values method of the Preprocessor class
2025-03-29/10:06:29		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-03-29/10:06:29		Encoding categorical columns...
2025-03-29/10:06:29		Entered the encode_categorical_columns method of the Preprocessor class
2025-03-29/10:06:29		Exception occured in encode_categorical_columns method of the Preprocessor class. Exception message:  'policy_csl'
2025-03-29/10:06:29		encoding for categorical columns Failed. Exited the encode_categorical_columns method of the Preprocessor class
2025-03-29/10:06:29		Prediction failed: 
2025-03-29/10:06:29		Full error traceback:
Traceback (most recent call last):
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3653, in get_loc
    return self._engine.get_loc(casted_key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "pandas\_libs\index.pyx", line 147, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 176, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'policy_csl'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 259, in encode_categorical_columns
    self.cat_df['policy_csl'] = self.cat_df['policy_csl'].map({'100/300': 1, '250/500': 2.5, '500/1000': 5})
                                ~~~~~~~~~~~^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\frame.py", line 3761, in __getitem__
    indexer = self.columns.get_loc(key)
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3655, in get_loc
    raise KeyError(key) from err
KeyError: 'policy_csl'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\predictFromModel.py", line 68, in predictionFromModel
    data = preprocessor.encode_categorical_columns(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 289, in encode_categorical_columns
    raise Exception()
Exception

2025-03-29/10:06:31		Start of Validation on files for prediction!!
2025-03-29/10:06:31		Raw Data Validation Complete!!
2025-03-29/10:06:31		Starting Data Transforamtion!!
2025-03-29/10:06:31		DataTransformation Completed!!!
2025-03-29/10:06:31		Creating Prediction_Database and tables on the basis of given schema!!!
2025-03-29/10:06:32		Table creation Completed!!
2025-03-29/10:06:32		Insertion of Data into Table started!!!!
2025-03-29/10:06:37		Insertion in Table completed!!!
2025-03-29/10:06:37		Deleting Good Data Folder!!!
2025-03-29/10:06:37		Good_Data folder deleted!!!
2025-03-29/10:06:37		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-03-29/10:06:37		Bad files moved to archive!! Bad folder Deleted!!
2025-03-29/10:06:37		Validation Operation completed!!
2025-03-29/10:06:37		Extracting csv file from table
2025-03-29/10:06:37		=== Starting Prediction Process ===
2025-03-29/10:06:37		Loading data...
2025-03-29/10:06:37		Entered the get_data method of the Data_Getter class
2025-03-29/10:06:37		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-03-29/10:06:37		Initial data shape: (500, 38)
2025-03-29/10:06:37		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-03-29/10:06:37		Final data columns: ['months_as_customer', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available']
2025-03-29/10:06:37		Entered the is_null_present method of the Preprocessor class
2025-03-29/10:06:37		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-03-29/10:06:37		Imputing missing values in: ['property_damage', 'police_report_available']
2025-03-29/10:06:37		Entered the impute_missing_values method of the Preprocessor class
2025-03-29/10:06:37		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-03-29/10:06:37		Encoding categorical columns...
2025-03-29/10:06:37		Entered the encode_categorical_columns method of the Preprocessor class
2025-03-29/10:06:37		Exception occured in encode_categorical_columns method of the Preprocessor class. Exception message:  'policy_csl'
2025-03-29/10:06:37		encoding for categorical columns Failed. Exited the encode_categorical_columns method of the Preprocessor class
2025-03-29/10:06:37		Prediction failed: 
2025-03-29/10:06:37		Full error traceback:
Traceback (most recent call last):
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3653, in get_loc
    return self._engine.get_loc(casted_key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "pandas\_libs\index.pyx", line 147, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 176, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'policy_csl'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 259, in encode_categorical_columns
    self.cat_df['policy_csl'] = self.cat_df['policy_csl'].map({'100/300': 1, '250/500': 2.5, '500/1000': 5})
                                ~~~~~~~~~~~^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\frame.py", line 3761, in __getitem__
    indexer = self.columns.get_loc(key)
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3655, in get_loc
    raise KeyError(key) from err
KeyError: 'policy_csl'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\predictFromModel.py", line 68, in predictionFromModel
    data = preprocessor.encode_categorical_columns(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 289, in encode_categorical_columns
    raise Exception()
Exception

2025-03-31/23:37:38		Start of Validation on files for prediction!!
2025-03-31/23:37:39		Raw Data Validation Complete!!
2025-03-31/23:37:39		Starting Data Transforamtion!!
2025-03-31/23:37:39		DataTransformation Completed!!!
2025-03-31/23:37:39		Creating Prediction_Database and tables on the basis of given schema!!!
2025-03-31/23:37:39		Table creation Completed!!
2025-03-31/23:37:39		Insertion of Data into Table started!!!!
2025-03-31/23:37:41		Insertion in Table completed!!!
2025-03-31/23:37:41		Deleting Good Data Folder!!!
2025-03-31/23:37:41		Good_Data folder deleted!!!
2025-03-31/23:37:41		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-03-31/23:37:41		Bad files moved to archive!! Bad folder Deleted!!
2025-03-31/23:37:41		Validation Operation completed!!
2025-03-31/23:37:41		Extracting csv file from table
2025-03-31/23:37:41		=== Starting Prediction Process ===
2025-03-31/23:37:41		Loading data...
2025-03-31/23:37:41		Entered the get_data method of the Data_Getter class
2025-03-31/23:37:41		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-03-31/23:37:41		Initial data shape: (500, 38)
2025-03-31/23:37:41		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-03-31/23:37:41		Final data columns: ['months_as_customer', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available']
2025-03-31/23:37:41		Entered the is_null_present method of the Preprocessor class
2025-03-31/23:37:41		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-03-31/23:37:41		Imputing missing values in: ['property_damage', 'police_report_available']
2025-03-31/23:37:41		Entered the impute_missing_values method of the Preprocessor class
2025-03-31/23:37:41		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-03-31/23:37:41		Encoding categorical columns...
2025-03-31/23:37:41		Entered the encode_categorical_columns method of the Preprocessor class
2025-03-31/23:37:41		Exception occured in encode_categorical_columns method of the Preprocessor class. Exception message:  'policy_csl'
2025-03-31/23:37:41		encoding for categorical columns Failed. Exited the encode_categorical_columns method of the Preprocessor class
2025-03-31/23:37:41		Prediction failed: 
2025-03-31/23:37:41		Full error traceback:
Traceback (most recent call last):
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3653, in get_loc
    return self._engine.get_loc(casted_key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "pandas\_libs\index.pyx", line 147, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 176, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'policy_csl'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 259, in encode_categorical_columns
    self.cat_df['policy_csl'] = self.cat_df['policy_csl'].map({'100/300': 1, '250/500': 2.5, '500/1000': 5})
                                ~~~~~~~~~~~^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\frame.py", line 3761, in __getitem__
    indexer = self.columns.get_loc(key)
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3655, in get_loc
    raise KeyError(key) from err
KeyError: 'policy_csl'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\predictFromModel.py", line 68, in predictionFromModel
    data = preprocessor.encode_categorical_columns(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 289, in encode_categorical_columns
    raise Exception()
Exception

2025-03-31/23:52:01		Start of Validation on files for prediction!!
2025-03-31/23:52:01		Raw Data Validation Complete!!
2025-03-31/23:52:01		Starting Data Transforamtion!!
2025-03-31/23:52:01		DataTransformation Completed!!!
2025-03-31/23:52:01		Creating Prediction_Database and tables on the basis of given schema!!!
2025-03-31/23:52:01		Table creation Completed!!
2025-03-31/23:52:01		Insertion of Data into Table started!!!!
2025-03-31/23:52:04		Insertion in Table completed!!!
2025-03-31/23:52:04		Deleting Good Data Folder!!!
2025-03-31/23:52:04		Good_Data folder deleted!!!
2025-03-31/23:52:04		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-03-31/23:52:04		Bad files moved to archive!! Bad folder Deleted!!
2025-03-31/23:52:04		Validation Operation completed!!
2025-03-31/23:52:04		Extracting csv file from table
2025-03-31/23:52:04		=== Starting Prediction Process ===
2025-03-31/23:52:04		Current working directory: C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection
2025-03-31/23:52:04		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-03-31/23:52:04		Loading data...
2025-03-31/23:52:04		Entered the get_data method of the Data_Getter class
2025-03-31/23:52:04		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-03-31/23:52:04		Initial data shape: (500, 38)
2025-03-31/23:52:04		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-03-31/23:52:04		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-03-31/23:52:04		Final data columns: ['months_as_customer', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available']
2025-03-31/23:52:04		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES"
}
2025-03-31/23:52:04		Entered the is_null_present method of the Preprocessor class
2025-03-31/23:52:04		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-03-31/23:52:04		Imputing missing values in: ['property_damage', 'police_report_available']
2025-03-31/23:52:04		Entered the impute_missing_values method of the Preprocessor class
2025-03-31/23:52:04		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-03-31/23:52:04		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES"
}
2025-03-31/23:52:04		Encoding categorical columns...
2025-03-31/23:52:04		Entered the encode_categorical_columns method of the Preprocessor class
2025-03-31/23:52:04		Exception occured in encode_categorical_columns method of the Preprocessor class. Exception message:  'policy_csl'
2025-03-31/23:52:04		encoding for categorical columns Failed. Exited the encode_categorical_columns method of the Preprocessor class
2025-03-31/23:52:04		ERROR TYPE: Exception
2025-03-31/23:52:04		ERROR MESSAGE: 
2025-03-31/23:52:04		TRACEBACK:
Traceback (most recent call last):
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3653, in get_loc
    return self._engine.get_loc(casted_key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "pandas\_libs\index.pyx", line 147, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 176, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'policy_csl'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 259, in encode_categorical_columns
    self.cat_df['policy_csl'] = self.cat_df['policy_csl'].map({'100/300': 1, '250/500': 2.5, '500/1000': 5})
                                ~~~~~~~~~~~^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\frame.py", line 3761, in __getitem__
    indexer = self.columns.get_loc(key)
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3655, in get_loc
    raise KeyError(key) from err
KeyError: 'policy_csl'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\predictFromModel.py", line 88, in predictionFromModel
    data = preprocessor.encode_categorical_columns(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 289, in encode_categorical_columns
    raise Exception()
Exception

2025-03-31/23:56:22		Start of Validation on files for prediction!!
2025-03-31/23:56:22		Raw Data Validation Complete!!
2025-03-31/23:56:22		Starting Data Transforamtion!!
2025-03-31/23:56:22		DataTransformation Completed!!!
2025-03-31/23:56:22		Creating Prediction_Database and tables on the basis of given schema!!!
2025-03-31/23:56:23		Table creation Completed!!
2025-03-31/23:56:23		Insertion of Data into Table started!!!!
2025-03-31/23:56:24		Insertion in Table completed!!!
2025-03-31/23:56:24		Deleting Good Data Folder!!!
2025-03-31/23:56:24		Good_Data folder deleted!!!
2025-03-31/23:56:24		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-03-31/23:56:24		Bad files moved to archive!! Bad folder Deleted!!
2025-03-31/23:56:24		Validation Operation completed!!
2025-03-31/23:56:24		Extracting csv file from table
2025-03-31/23:56:24		=== Starting Prediction Process ===
2025-03-31/23:56:24		Current working directory: C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection
2025-03-31/23:56:24		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-03-31/23:56:24		Loading data...
2025-03-31/23:56:24		Entered the get_data method of the Data_Getter class
2025-03-31/23:56:24		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-03-31/23:56:24		Initial data shape: (500, 38)
2025-03-31/23:56:24		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-03-31/23:56:24		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-03-31/23:56:24		Final data columns: ['months_as_customer', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available']
2025-03-31/23:56:24		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES"
}
2025-03-31/23:56:24		Entered the is_null_present method of the Preprocessor class
2025-03-31/23:56:24		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-03-31/23:56:24		Imputing missing values in: ['property_damage', 'police_report_available']
2025-03-31/23:56:24		Entered the impute_missing_values method of the Preprocessor class
2025-03-31/23:56:24		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-03-31/23:56:24		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES"
}
2025-03-31/23:56:24		Encoding categorical columns...
2025-03-31/23:56:24		Entered the encode_categorical_columns method of the Preprocessor class
2025-03-31/23:56:24		Exception occured in encode_categorical_columns method of the Preprocessor class. Exception message:  'policy_csl'
2025-03-31/23:56:24		encoding for categorical columns Failed. Exited the encode_categorical_columns method of the Preprocessor class
2025-03-31/23:56:24		ERROR TYPE: Exception
2025-03-31/23:56:24		ERROR MESSAGE: 
2025-03-31/23:56:24		TRACEBACK:
Traceback (most recent call last):
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3653, in get_loc
    return self._engine.get_loc(casted_key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "pandas\_libs\index.pyx", line 147, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\index.pyx", line 176, in pandas._libs.index.IndexEngine.get_loc
  File "pandas\_libs\hashtable_class_helper.pxi", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas\_libs\hashtable_class_helper.pxi", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'policy_csl'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 259, in encode_categorical_columns
    self.cat_df['policy_csl'] = self.cat_df['policy_csl'].map({'100/300': 1, '250/500': 2.5, '500/1000': 5})
                                ~~~~~~~~~~~^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\frame.py", line 3761, in __getitem__
    indexer = self.columns.get_loc(key)
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\PycharmProjects\pythonProject\.venv\Lib\site-packages\pandas\core\indexes\base.py", line 3655, in get_loc
    raise KeyError(key) from err
KeyError: 'policy_csl'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\predictFromModel.py", line 88, in predictionFromModel
    data = preprocessor.encode_categorical_columns(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jerem\OneDrive\Desktop\insuranceFraudDetection\code\fraudDetection\data_preprocessing\preprocessing.py", line 289, in encode_categorical_columns
    raise Exception()
Exception

2025-04-01/00:03:34		Start of Validation on files for prediction!!
2025-04-01/00:07:35		Start of Validation on files for prediction!!
2025-04-01/00:07:38		Start of Validation on files for prediction!!
2025-04-01/00:10:20		Start of Validation on files for prediction!!
2025-04-01/00:10:42		Start of Validation on files for prediction!!
2025-04-01/00:10:44		Start of Validation on files for prediction!!
2025-04-01/00:14:45		Start of Validation on files for prediction!!
2025-04-08/07:19:13		Start of Validation on files for prediction!!
2025-04-08/07:21:16		Start of Validation on files for prediction!!
2025-04-08/07:21:16		Raw Data Validation Complete!!
2025-04-08/07:21:16		Starting Data Transforamtion!!
2025-04-08/07:21:16		DataTransformation Completed!!!
2025-04-08/07:21:16		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/07:21:17		Table creation Completed!!
2025-04-08/07:21:17		Insertion of Data into Table started!!!!
2025-04-08/07:21:17		Insertion in Table completed!!!
2025-04-08/07:21:17		Deleting Good Data Folder!!!
2025-04-08/07:21:17		Good_Data folder deleted!!!
2025-04-08/07:21:17		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/07:21:17		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/07:21:17		Validation Operation completed!!
2025-04-08/07:21:17		Extracting csv file from table
2025-04-08/07:21:17		=== Starting Prediction Process ===
2025-04-08/07:21:17		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/07:21:17		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/07:21:17		Loading data...
2025-04-08/07:21:17		Entered the get_data method of the Data_Getter class
2025-04-08/07:21:17		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/07:21:17		Initial data shape: (0, 38)
2025-04-08/07:21:17		ERROR TYPE: IndexError
2025-04-08/07:21:17		ERROR MESSAGE: list index out of range
2025-04-08/07:21:17		TRACEBACK:
Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 52, in predictionFromModel
    self._log_data_sample(data, "Raw input")
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 37, in _log_data_sample
    sample = data.head(1).to_dict(orient='records')[0]
             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^
IndexError: list index out of range

2025-04-08/11:11:20		Start of Validation on files for prediction!!
2025-04-08/11:51:30		Start of Validation on files for prediction!!
2025-04-08/11:58:11		Start of Validation on files for prediction!!
2025-04-08/11:59:05		Start of Validation on files for prediction!!
2025-04-08/11:59:06		Raw Data Validation Complete!!
2025-04-08/11:59:06		Starting Data Transforamtion!!
2025-04-08/11:59:06		DataTransformation Completed!!!
2025-04-08/11:59:06		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/11:59:07		Table creation Completed!!
2025-04-08/11:59:07		Insertion of Data into Table started!!!!
2025-04-08/11:59:07		Insertion in Table completed!!!
2025-04-08/11:59:07		Deleting Good Data Folder!!!
2025-04-08/11:59:07		Good_Data folder deleted!!!
2025-04-08/11:59:07		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/11:59:07		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/11:59:07		Validation Operation completed!!
2025-04-08/11:59:07		Extracting csv file from table
2025-04-08/11:59:07		=== Starting Prediction Process ===
2025-04-08/11:59:07		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/11:59:07		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/11:59:07		Loading data...
2025-04-08/11:59:07		Entered the get_data method of the Data_Getter class
2025-04-08/11:59:07		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/11:59:07		Initial data shape: (6, 38)
2025-04-08/11:59:07		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/11:59:07		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/11:59:07		Final data columns: ['months_as_customer', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available']
2025-04-08/11:59:07		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES"
}
2025-04-08/11:59:07		Entered the is_null_present method of the Preprocessor class
2025-04-08/11:59:07		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/11:59:07		Imputing missing values in: ['property_damage', 'police_report_available']
2025-04-08/11:59:07		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/11:59:07		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/11:59:07		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES"
}
2025-04-08/11:59:07		Encoding categorical columns...
2025-04-08/11:59:07		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/11:59:07		Exception occured in encode_categorical_columns method of the Preprocessor class. Exception message:  'policy_csl'
2025-04-08/11:59:07		encoding for categorical columns Failed. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/11:59:07		ERROR TYPE: Exception
2025-04-08/11:59:07		ERROR MESSAGE: 
2025-04-08/11:59:07		TRACEBACK:
Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/indexes/base.py", line 3653, in get_loc
    return self._engine.get_loc(casted_key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "pandas/_libs/index.pyx", line 147, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 176, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'policy_csl'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/data_preprocessing/preprocessing.py", line 259, in encode_categorical_columns
    self.cat_df['policy_csl'] = self.cat_df['policy_csl'].map({'100/300': 1, '250/500': 2.5, '500/1000': 5})
                                ~~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/frame.py", line 3761, in __getitem__
    indexer = self.columns.get_loc(key)
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/indexes/base.py", line 3655, in get_loc
    raise KeyError(key) from err
KeyError: 'policy_csl'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 88, in predictionFromModel
    data = preprocessor.encode_categorical_columns(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/data_preprocessing/preprocessing.py", line 289, in encode_categorical_columns
    raise Exception()
Exception

2025-04-08/11:59:30		Start of Validation on files for prediction!!
2025-04-08/11:59:30		Raw Data Validation Complete!!
2025-04-08/11:59:30		Starting Data Transforamtion!!
2025-04-08/11:59:30		DataTransformation Completed!!!
2025-04-08/11:59:30		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/11:59:32		Table creation Completed!!
2025-04-08/11:59:32		Insertion of Data into Table started!!!!
2025-04-08/11:59:32		Insertion in Table completed!!!
2025-04-08/11:59:32		Deleting Good Data Folder!!!
2025-04-08/11:59:32		Good_Data folder deleted!!!
2025-04-08/11:59:32		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/11:59:32		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/11:59:32		Validation Operation completed!!
2025-04-08/11:59:32		Extracting csv file from table
2025-04-08/11:59:32		=== Starting Prediction Process ===
2025-04-08/11:59:32		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/11:59:32		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/11:59:32		Loading data...
2025-04-08/11:59:32		Entered the get_data method of the Data_Getter class
2025-04-08/11:59:32		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/11:59:32		Initial data shape: (6, 38)
2025-04-08/11:59:32		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/11:59:32		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/11:59:32		Final data columns: ['months_as_customer', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available']
2025-04-08/11:59:32		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES"
}
2025-04-08/11:59:32		Entered the is_null_present method of the Preprocessor class
2025-04-08/11:59:32		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/11:59:32		Imputing missing values in: ['property_damage', 'police_report_available']
2025-04-08/11:59:32		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/11:59:32		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/11:59:32		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES"
}
2025-04-08/11:59:32		Encoding categorical columns...
2025-04-08/11:59:32		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/11:59:32		Exception occured in encode_categorical_columns method of the Preprocessor class. Exception message:  'policy_csl'
2025-04-08/11:59:32		encoding for categorical columns Failed. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/11:59:32		ERROR TYPE: Exception
2025-04-08/11:59:32		ERROR MESSAGE: 
2025-04-08/11:59:32		TRACEBACK:
Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/indexes/base.py", line 3653, in get_loc
    return self._engine.get_loc(casted_key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "pandas/_libs/index.pyx", line 147, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 176, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'policy_csl'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/data_preprocessing/preprocessing.py", line 259, in encode_categorical_columns
    self.cat_df['policy_csl'] = self.cat_df['policy_csl'].map({'100/300': 1, '250/500': 2.5, '500/1000': 5})
                                ~~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/frame.py", line 3761, in __getitem__
    indexer = self.columns.get_loc(key)
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/indexes/base.py", line 3655, in get_loc
    raise KeyError(key) from err
KeyError: 'policy_csl'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 88, in predictionFromModel
    data = preprocessor.encode_categorical_columns(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/data_preprocessing/preprocessing.py", line 289, in encode_categorical_columns
    raise Exception()
Exception

2025-04-08/12:03:36		Start of Validation on files for prediction!!
2025-04-08/12:21:04		Start of Validation on files for prediction!!
2025-04-08/12:41:45		Start of Validation on files for prediction!!
2025-04-08/12:45:55		Start of Validation on files for prediction!!
2025-04-08/12:49:26		Start of Validation on files for prediction!!
2025-04-08/12:49:26		Raw Data Validation Complete!!
2025-04-08/12:49:26		Starting Data Transforamtion!!
2025-04-08/12:49:26		DataTransformation Completed!!!
2025-04-08/12:49:26		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/12:49:28		Table creation Completed!!
2025-04-08/12:49:28		Insertion of Data into Table started!!!!
2025-04-08/12:49:49		Insertion in Table completed!!!
2025-04-08/12:49:49		Deleting Good Data Folder!!!
2025-04-08/12:49:49		Good_Data folder deleted!!!
2025-04-08/12:49:49		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/12:49:49		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/12:49:49		Validation Operation completed!!
2025-04-08/12:49:49		Extracting csv file from table
2025-04-08/12:49:49		=== Starting Prediction Process ===
2025-04-08/12:49:49		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/12:49:49		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/12:49:49		Loading data...
2025-04-08/12:49:49		Entered the get_data method of the Data_Getter class
2025-04-08/12:49:49		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/12:49:49		Initial data shape: (500, 38)
2025-04-08/12:49:50		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/12:49:50		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/12:49:50		Final data columns: ['months_as_customer', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available']
2025-04-08/12:49:50		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES"
}
2025-04-08/12:49:50		Entered the is_null_present method of the Preprocessor class
2025-04-08/12:49:50		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/12:49:50		Imputing missing values in: ['property_damage', 'police_report_available']
2025-04-08/12:49:50		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/12:49:50		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/12:49:50		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES"
}
2025-04-08/12:49:50		Encoding categorical columns...
2025-04-08/12:49:50		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/12:49:50		Exception occured in encode_categorical_columns method of the Preprocessor class. Exception message:  'policy_csl'
2025-04-08/12:49:50		encoding for categorical columns Failed. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/12:49:50		ERROR TYPE: Exception
2025-04-08/12:49:50		ERROR MESSAGE: 
2025-04-08/12:49:50		TRACEBACK:
Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/indexes/base.py", line 3653, in get_loc
    return self._engine.get_loc(casted_key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "pandas/_libs/index.pyx", line 147, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 176, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'policy_csl'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/data_preprocessing/preprocessing.py", line 259, in encode_categorical_columns
    self.cat_df['policy_csl'] = self.cat_df['policy_csl'].map({'100/300': 1, '250/500': 2.5, '500/1000': 5})
                                ~~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/frame.py", line 3761, in __getitem__
    indexer = self.columns.get_loc(key)
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/indexes/base.py", line 3655, in get_loc
    raise KeyError(key) from err
KeyError: 'policy_csl'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 88, in predictionFromModel
    data = preprocessor.encode_categorical_columns(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/data_preprocessing/preprocessing.py", line 289, in encode_categorical_columns
    raise Exception()
Exception

2025-04-08/13:02:41		Start of Validation on files for prediction!!
2025-04-08/13:02:41		Raw Data Validation Complete!!
2025-04-08/13:02:41		Starting Data Transforamtion!!
2025-04-08/13:02:41		DataTransformation Completed!!!
2025-04-08/13:02:41		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/13:02:42		Table creation Completed!!
2025-04-08/13:02:42		Insertion of Data into Table started!!!!
2025-04-08/13:03:04		Insertion in Table completed!!!
2025-04-08/13:03:04		Deleting Good Data Folder!!!
2025-04-08/13:03:04		Good_Data folder deleted!!!
2025-04-08/13:03:04		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/13:03:04		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/13:03:04		Validation Operation completed!!
2025-04-08/13:03:04		Extracting csv file from table
2025-04-08/13:03:04		=== Starting Prediction Process ===
2025-04-08/13:03:04		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/13:03:04		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/13:03:04		Loading data...
2025-04-08/13:03:04		Entered the get_data method of the Data_Getter class
2025-04-08/13:03:04		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/13:03:04		Initial data shape: (500, 38)
2025-04-08/13:03:04		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/13:03:04		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/13:03:04		Final data columns: ['months_as_customer', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available']
2025-04-08/13:03:04		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES"
}
2025-04-08/13:03:04		Entered the is_null_present method of the Preprocessor class
2025-04-08/13:03:04		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/13:03:04		Imputing missing values in: ['property_damage', 'police_report_available']
2025-04-08/13:03:04		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/13:03:04		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/13:03:04		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES"
}
2025-04-08/13:03:04		Encoding categorical columns...
2025-04-08/13:03:04		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/13:03:04		Exception occured in encode_categorical_columns method of the Preprocessor class. Exception message:  'policy_csl'
2025-04-08/13:03:04		encoding for categorical columns Failed. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/13:03:04		ERROR TYPE: Exception
2025-04-08/13:03:04		ERROR MESSAGE: 
2025-04-08/13:03:04		TRACEBACK:
Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/indexes/base.py", line 3653, in get_loc
    return self._engine.get_loc(casted_key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "pandas/_libs/index.pyx", line 147, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 176, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'policy_csl'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/data_preprocessing/preprocessing.py", line 261, in encode_categorical_columns
    self.cat_df['policy_csl'] = self.cat_df['policy_csl'].map({'100/300': 1, '250/500': 2.5, '500/1000': 5})
                                ~~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/frame.py", line 3761, in __getitem__
    indexer = self.columns.get_loc(key)
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/indexes/base.py", line 3655, in get_loc
    raise KeyError(key) from err
KeyError: 'policy_csl'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 88, in predictionFromModel
    data = preprocessor.encode_categorical_columns(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/data_preprocessing/preprocessing.py", line 291, in encode_categorical_columns
    raise Exception()
Exception

2025-04-08/13:14:46		Start of Validation on files for prediction!!
2025-04-08/13:14:46		Raw Data Validation Complete!!
2025-04-08/13:14:46		Starting Data Transforamtion!!
2025-04-08/13:14:46		DataTransformation Completed!!!
2025-04-08/13:14:46		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/13:14:48		Table creation Completed!!
2025-04-08/13:14:48		Insertion of Data into Table started!!!!
2025-04-08/13:15:09		Insertion in Table completed!!!
2025-04-08/13:15:09		Deleting Good Data Folder!!!
2025-04-08/13:15:09		Good_Data folder deleted!!!
2025-04-08/13:15:09		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/13:15:09		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/13:15:09		Validation Operation completed!!
2025-04-08/13:15:09		Extracting csv file from table
2025-04-08/13:15:09		=== Starting Prediction Process ===
2025-04-08/13:15:09		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/13:15:09		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/13:15:09		Loading data...
2025-04-08/13:15:09		Entered the get_data method of the Data_Getter class
2025-04-08/13:15:09		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/13:15:09		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/13:15:09		Data shape: (500, 38)
2025-04-08/13:15:09		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/13:15:10		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/13:15:10		Initial data shape: (500, 38)
2025-04-08/13:15:10		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/13:15:10		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/13:15:10		Final data columns: ['months_as_customer', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available']
2025-04-08/13:15:10		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES"
}
2025-04-08/13:15:10		Entered the is_null_present method of the Preprocessor class
2025-04-08/13:15:10		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/13:15:10		Imputing missing values in: ['property_damage', 'police_report_available']
2025-04-08/13:15:10		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/13:15:10		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/13:15:10		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES"
}
2025-04-08/13:15:10		Encoding categorical columns...
2025-04-08/13:15:10		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/13:15:10		Exception occured in encode_categorical_columns method of the Preprocessor class. Exception message:  'policy_csl'
2025-04-08/13:15:10		encoding for categorical columns Failed. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/13:15:10		ERROR TYPE: Exception
2025-04-08/13:15:10		ERROR MESSAGE: 
2025-04-08/13:15:10		TRACEBACK:
Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/indexes/base.py", line 3653, in get_loc
    return self._engine.get_loc(casted_key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "pandas/_libs/index.pyx", line 147, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 176, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'policy_csl'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/data_preprocessing/preprocessing.py", line 261, in encode_categorical_columns
    self.cat_df['policy_csl'] = self.cat_df['policy_csl'].map({'100/300': 1, '250/500': 2.5, '500/1000': 5})
                                ~~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/frame.py", line 3761, in __getitem__
    indexer = self.columns.get_loc(key)
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/indexes/base.py", line 3655, in get_loc
    raise KeyError(key) from err
KeyError: 'policy_csl'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 92, in predictionFromModel
    data = preprocessor.encode_categorical_columns(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/data_preprocessing/preprocessing.py", line 291, in encode_categorical_columns
    raise Exception()
Exception

2025-04-08/13:16:50		Start of Validation on files for prediction!!
2025-04-08/13:16:51		Raw Data Validation Complete!!
2025-04-08/13:16:51		Starting Data Transforamtion!!
2025-04-08/13:16:51		DataTransformation Completed!!!
2025-04-08/13:16:51		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/13:16:52		Table creation Completed!!
2025-04-08/13:16:52		Insertion of Data into Table started!!!!
2025-04-08/13:17:13		Insertion in Table completed!!!
2025-04-08/13:17:13		Deleting Good Data Folder!!!
2025-04-08/13:17:13		Good_Data folder deleted!!!
2025-04-08/13:17:13		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/13:17:13		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/13:17:13		Validation Operation completed!!
2025-04-08/13:17:13		Extracting csv file from table
2025-04-08/13:17:13		=== Starting Prediction Process ===
2025-04-08/13:17:13		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/13:17:13		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/13:17:13		Loading data...
2025-04-08/13:17:13		Entered the get_data method of the Data_Getter class
2025-04-08/13:17:13		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/13:17:13		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/13:17:13		Data shape: (500, 38)
2025-04-08/13:17:13		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/13:17:14		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/13:17:14		Initial data shape: (500, 38)
2025-04-08/13:17:14		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/13:17:14		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/13:17:14		Data shape after dropping columns: (500, 24)
2025-04-08/13:17:14		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/13:17:14		Final data columns: ['months_as_customer', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available']
2025-04-08/13:17:14		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES"
}
2025-04-08/13:17:14		Entered the is_null_present method of the Preprocessor class
2025-04-08/13:17:14		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/13:17:14		Imputing missing values in: ['property_damage', 'police_report_available']
2025-04-08/13:17:14		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/13:17:14		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/13:17:14		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES"
}
2025-04-08/13:17:14		Encoding categorical columns...
2025-04-08/13:17:14		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/13:17:14		Exception occured in encode_categorical_columns method of the Preprocessor class. Exception message:  'policy_csl'
2025-04-08/13:17:14		encoding for categorical columns Failed. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/13:17:14		ERROR TYPE: Exception
2025-04-08/13:17:14		ERROR MESSAGE: 
2025-04-08/13:17:14		TRACEBACK:
Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/indexes/base.py", line 3653, in get_loc
    return self._engine.get_loc(casted_key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "pandas/_libs/index.pyx", line 147, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 176, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'policy_csl'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/data_preprocessing/preprocessing.py", line 261, in encode_categorical_columns
    self.cat_df['policy_csl'] = self.cat_df['policy_csl'].map({'100/300': 1, '250/500': 2.5, '500/1000': 5})
                                ~~~~~~~~~~~^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/frame.py", line 3761, in __getitem__
    indexer = self.columns.get_loc(key)
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/indexes/base.py", line 3655, in get_loc
    raise KeyError(key) from err
KeyError: 'policy_csl'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 95, in predictionFromModel
    data = preprocessor.encode_categorical_columns(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/data_preprocessing/preprocessing.py", line 291, in encode_categorical_columns
    raise Exception()
Exception

2025-04-08/13:22:43		Start of Validation on files for prediction!!
2025-04-08/13:22:43		Raw Data Validation Complete!!
2025-04-08/13:22:43		Starting Data Transforamtion!!
2025-04-08/13:22:43		DataTransformation Completed!!!
2025-04-08/13:22:43		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/13:22:44		Table creation Completed!!
2025-04-08/13:22:44		Insertion of Data into Table started!!!!
2025-04-08/13:23:06		Insertion in Table completed!!!
2025-04-08/13:23:06		Deleting Good Data Folder!!!
2025-04-08/13:23:06		Good_Data folder deleted!!!
2025-04-08/13:23:06		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/13:23:06		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/13:23:06		Validation Operation completed!!
2025-04-08/13:23:06		Extracting csv file from table
2025-04-08/13:23:06		=== Starting Prediction Process ===
2025-04-08/13:23:06		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/13:23:06		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/13:23:06		Loading data...
2025-04-08/13:23:06		Entered the get_data method of the Data_Getter class
2025-04-08/13:23:06		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/13:23:06		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/13:23:06		Data shape: (500, 38)
2025-04-08/13:23:06		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/13:23:06		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  policy_deductable  ...  total_claim_amount  injury_claim  property_claim vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500               1000  ...               71610          6510           13020         52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500               2000  ...                5070           780             780          3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300               2000  ...               34650          7700            3850         23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500               2000  ...               63400          6340            6340         50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000               1000  ...                6500          1300             650          4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/13:23:06		Initial data shape: (500, 38)
2025-04-08/13:23:06		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/13:23:06		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/13:23:06		Data shape after dropping columns: (500, 24)
2025-04-08/13:23:06		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/13:23:06		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available']
2025-04-08/13:23:06		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES"
}
2025-04-08/13:23:06		Entered the is_null_present method of the Preprocessor class
2025-04-08/13:23:06		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/13:23:06		Imputing missing values in: ['property_damage', 'police_report_available']
2025-04-08/13:23:06		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/13:23:06		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/13:23:06		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES"
}
2025-04-08/13:23:06		Encoding categorical columns...
2025-04-08/13:23:06		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/13:23:06		Exception occured in encode_categorical_columns method of the Preprocessor class. Exception message:  'insured_education_level'
2025-04-08/13:23:06		encoding for categorical columns Failed. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/13:23:06		ERROR TYPE: Exception
2025-04-08/13:23:06		ERROR MESSAGE: 
2025-04-08/13:23:06		TRACEBACK:
Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/indexes/base.py", line 3653, in get_loc
    return self._engine.get_loc(casted_key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "pandas/_libs/index.pyx", line 147, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 176, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'insured_education_level'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/data_preprocessing/preprocessing.py", line 262, in encode_categorical_columns
    self.cat_df['insured_education_level'] = self.cat_df['insured_education_level'].map(
                                             ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/frame.py", line 3761, in __getitem__
    indexer = self.columns.get_loc(key)
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/indexes/base.py", line 3655, in get_loc
    raise KeyError(key) from err
KeyError: 'insured_education_level'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 95, in predictionFromModel
    data = preprocessor.encode_categorical_columns(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/data_preprocessing/preprocessing.py", line 291, in encode_categorical_columns
    raise Exception()
Exception

2025-04-08/13:26:26		Start of Validation on files for prediction!!
2025-04-08/13:26:26		Raw Data Validation Complete!!
2025-04-08/13:26:26		Starting Data Transforamtion!!
2025-04-08/13:26:27		DataTransformation Completed!!!
2025-04-08/13:26:27		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/13:26:28		Table creation Completed!!
2025-04-08/13:26:28		Insertion of Data into Table started!!!!
2025-04-08/13:26:50		Insertion in Table completed!!!
2025-04-08/13:26:50		Deleting Good Data Folder!!!
2025-04-08/13:26:50		Good_Data folder deleted!!!
2025-04-08/13:26:50		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/13:26:50		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/13:26:50		Validation Operation completed!!
2025-04-08/13:26:50		Extracting csv file from table
2025-04-08/13:26:50		=== Starting Prediction Process ===
2025-04-08/13:26:50		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/13:26:50		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/13:26:50		Loading data...
2025-04-08/13:26:50		Entered the get_data method of the Data_Getter class
2025-04-08/13:26:50		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/13:26:50		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/13:26:50		Data shape: (500, 38)
2025-04-08/13:26:50		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/13:26:50		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  policy_deductable  ...  total_claim_amount  injury_claim  property_claim vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500               1000  ...               71610          6510           13020         52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500               2000  ...                5070           780             780          3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300               2000  ...               34650          7700            3850         23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500               2000  ...               63400          6340            6340         50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000               1000  ...                6500          1300             650          4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/13:26:50		Initial data shape: (500, 38)
2025-04-08/13:26:50		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/13:26:50		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/13:26:50		Data shape after dropping columns: (500, 24)
2025-04-08/13:26:50		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/13:26:50		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level']
2025-04-08/13:26:50		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD"
}
2025-04-08/13:26:50		Entered the is_null_present method of the Preprocessor class
2025-04-08/13:26:50		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/13:26:50		Imputing missing values in: ['property_damage', 'police_report_available']
2025-04-08/13:26:50		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/13:26:50		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/13:26:50		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD"
}
2025-04-08/13:26:50		Encoding categorical columns...
2025-04-08/13:26:50		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/13:26:50		Exception occured in encode_categorical_columns method of the Preprocessor class. Exception message:  'insured_sex'
2025-04-08/13:26:50		encoding for categorical columns Failed. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/13:26:50		ERROR TYPE: Exception
2025-04-08/13:26:50		ERROR MESSAGE: 
2025-04-08/13:26:50		TRACEBACK:
Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/indexes/base.py", line 3653, in get_loc
    return self._engine.get_loc(casted_key)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "pandas/_libs/index.pyx", line 147, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/index.pyx", line 176, in pandas._libs.index.IndexEngine.get_loc
  File "pandas/_libs/hashtable_class_helper.pxi", line 7080, in pandas._libs.hashtable.PyObjectHashTable.get_item
  File "pandas/_libs/hashtable_class_helper.pxi", line 7088, in pandas._libs.hashtable.PyObjectHashTable.get_item
KeyError: 'insured_sex'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/data_preprocessing/preprocessing.py", line 266, in encode_categorical_columns
    self.cat_df['insured_sex'] = self.cat_df['insured_sex'].map({'FEMALE': 0, 'MALE': 1})
                                 ~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/frame.py", line 3761, in __getitem__
    indexer = self.columns.get_loc(key)
              ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/indexes/base.py", line 3655, in get_loc
    raise KeyError(key) from err
KeyError: 'insured_sex'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 95, in predictionFromModel
    data = preprocessor.encode_categorical_columns(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/data_preprocessing/preprocessing.py", line 291, in encode_categorical_columns
    raise Exception()
Exception

2025-04-08/13:28:21		Start of Validation on files for prediction!!
2025-04-08/13:28:21		Raw Data Validation Complete!!
2025-04-08/13:28:21		Starting Data Transforamtion!!
2025-04-08/13:28:22		DataTransformation Completed!!!
2025-04-08/13:28:22		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/13:28:23		Table creation Completed!!
2025-04-08/13:28:23		Insertion of Data into Table started!!!!
2025-04-08/13:28:45		Insertion in Table completed!!!
2025-04-08/13:28:45		Deleting Good Data Folder!!!
2025-04-08/13:28:45		Good_Data folder deleted!!!
2025-04-08/13:28:45		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/13:28:45		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/13:28:45		Validation Operation completed!!
2025-04-08/13:28:45		Extracting csv file from table
2025-04-08/13:28:45		=== Starting Prediction Process ===
2025-04-08/13:28:45		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/13:28:45		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/13:28:45		Loading data...
2025-04-08/13:28:45		Entered the get_data method of the Data_Getter class
2025-04-08/13:28:45		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/13:28:45		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/13:28:45		Data shape: (500, 38)
2025-04-08/13:28:45		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/13:28:45		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  policy_deductable  ...  total_claim_amount  injury_claim  property_claim vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500               1000  ...               71610          6510           13020         52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500               2000  ...                5070           780             780          3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300               2000  ...               34650          7700            3850         23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500               2000  ...               63400          6340            6340         50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000               1000  ...                6500          1300             650          4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/13:28:45		Initial data shape: (500, 38)
2025-04-08/13:28:45		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/13:28:45		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/13:28:45		Data shape after dropping columns: (500, 24)
2025-04-08/13:28:45		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/13:28:45		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex']
2025-04-08/13:28:45		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE"
}
2025-04-08/13:28:45		Entered the is_null_present method of the Preprocessor class
2025-04-08/13:28:45		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/13:28:45		Imputing missing values in: ['property_damage', 'police_report_available']
2025-04-08/13:28:45		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/13:28:45		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/13:28:45		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE"
}
2025-04-08/13:28:45		Encoding categorical columns...
2025-04-08/13:28:45		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/13:28:45		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/13:28:45		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1
}
2025-04-08/13:28:45		Scaling numerical columns...
2025-04-08/13:28:45		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/13:28:45		ERROR TYPE: KeyError
2025-04-08/13:28:45		ERROR MESSAGE: "['umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim'] not in index"
2025-04-08/13:28:45		TRACEBACK:
Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 101, in predictionFromModel
    data = preprocessor.scale_numerical_columns(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/data_preprocessing/preprocessing.py", line 222, in scale_numerical_columns
    self.num_df = self.data[['months_as_customer', 'policy_deductable', 'umbrella_limit',
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/frame.py", line 3767, in __getitem__
    indexer = self.columns._get_indexer_strict(key, "columns")[1]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/indexes/base.py", line 5877, in _get_indexer_strict
    self._raise_if_missing(keyarr, indexer, axis_name)
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/indexes/base.py", line 5941, in _raise_if_missing
    raise KeyError(f"{not_found} not in index")
KeyError: "['umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim'] not in index"

2025-04-08/13:32:06		Start of Validation on files for prediction!!
2025-04-08/13:32:07		Raw Data Validation Complete!!
2025-04-08/13:32:07		Starting Data Transforamtion!!
2025-04-08/13:32:07		DataTransformation Completed!!!
2025-04-08/13:32:07		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/13:32:08		Table creation Completed!!
2025-04-08/13:32:08		Insertion of Data into Table started!!!!
2025-04-08/13:32:30		Insertion in Table completed!!!
2025-04-08/13:32:30		Deleting Good Data Folder!!!
2025-04-08/13:32:30		Good_Data folder deleted!!!
2025-04-08/13:32:30		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/13:32:30		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/13:32:30		Validation Operation completed!!
2025-04-08/13:32:30		Extracting csv file from table
2025-04-08/13:32:30		=== Starting Prediction Process ===
2025-04-08/13:32:30		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/13:32:30		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/13:32:30		Loading data...
2025-04-08/13:32:30		Entered the get_data method of the Data_Getter class
2025-04-08/13:32:30		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/13:32:30		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/13:32:30		Data shape: (500, 38)
2025-04-08/13:32:30		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/13:32:30		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  policy_deductable  ...  total_claim_amount  injury_claim  property_claim vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500               1000  ...               71610          6510           13020         52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500               2000  ...                5070           780             780          3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300               2000  ...               34650          7700            3850         23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500               2000  ...               63400          6340            6340         50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000               1000  ...                6500          1300             650          4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/13:32:30		Initial data shape: (500, 38)
2025-04-08/13:32:30		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/13:32:30		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/13:32:30		Data shape after dropping columns: (500, 24)
2025-04-08/13:32:30		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/13:32:30		Entered the is_null_present method of the Preprocessor class
2025-04-08/13:32:30		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/13:32:30		Imputing missing values in: ['collision_type', 'authorities_contacted', 'property_damage', 'police_report_available']
2025-04-08/13:32:30		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/13:32:30		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/13:32:30		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/13:32:30		Encoding categorical columns...
2025-04-08/13:32:30		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/13:32:30		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/13:32:30		After encoding data sample:
{
  "policy_csl": 2.5,
  "insured_sex": 1,
  "insured_education_level": 6,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/13:32:30		Scaling numerical columns...
2025-04-08/13:32:30		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/13:32:30		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/13:32:30		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "insured_sex": 1,
  "insured_education_level": 6,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "policy_annual_premium": 1406.91
}
2025-04-08/13:32:30		Loading KMeans model...
2025-04-08/13:32:30		Entered the load_model method of the File_Operation class
2025-04-08/13:32:30		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/13:32:30		KMeans model loaded successfully
2025-04-08/13:32:30		Predicting clusters...
2025-04-08/13:32:30		Cluster prediction failed. Data shape: (500, 45). Error: The feature names should match those that were passed during fit.
Feature names must be in the same order as they were in fit.

2025-04-08/13:32:30		ERROR TYPE: Exception
2025-04-08/13:32:30		ERROR MESSAGE: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names must be in the same order as they were in fit.

2025-04-08/13:32:30		TRACEBACK:
Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 121, in predictionFromModel
    clusters = kmeans.predict(data)
               ^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 1085, in predict
    X = self._check_test_data(X)
        ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 944, in _check_test_data
    X = validate_data(
        ^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2919, in validate_data
    _check_feature_names(_estimator, X, reset=reset)
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2777, in _check_feature_names
    raise ValueError(message)
ValueError: The feature names should match those that were passed during fit.
Feature names must be in the same order as they were in fit.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 130, in predictionFromModel
    raise Exception(f"Cluster prediction failed: {str(e)}")
Exception: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names must be in the same order as they were in fit.


2025-04-08/13:36:16		Start of Validation on files for prediction!!
2025-04-08/13:36:16		Raw Data Validation Complete!!
2025-04-08/13:36:16		Starting Data Transforamtion!!
2025-04-08/13:36:16		DataTransformation Completed!!!
2025-04-08/13:36:16		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/13:36:18		Table creation Completed!!
2025-04-08/13:36:18		Insertion of Data into Table started!!!!
2025-04-08/13:36:39		Insertion in Table completed!!!
2025-04-08/13:36:39		Deleting Good Data Folder!!!
2025-04-08/13:36:39		Good_Data folder deleted!!!
2025-04-08/13:36:39		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/13:36:39		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/13:36:39		Validation Operation completed!!
2025-04-08/13:36:39		Extracting csv file from table
2025-04-08/13:36:39		=== Starting Prediction Process ===
2025-04-08/13:36:39		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/13:36:39		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/13:36:39		Loading data...
2025-04-08/13:36:39		Entered the get_data method of the Data_Getter class
2025-04-08/13:36:39		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/13:36:39		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/13:36:39		Data shape: (500, 38)
2025-04-08/13:36:39		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/13:36:40		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  policy_deductable  ...  total_claim_amount  injury_claim  property_claim vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500               1000  ...               71610          6510           13020         52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500               2000  ...                5070           780             780          3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300               2000  ...               34650          7700            3850         23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500               2000  ...               63400          6340            6340         50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000               1000  ...                6500          1300             650          4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/13:36:40		Initial data shape: (500, 38)
2025-04-08/13:36:40		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/13:36:40		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim']
2025-04-08/13:36:40		Data shape after dropping columns: (500, 17)
2025-04-08/13:36:40		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'insured_sex', 'insured_education_level',
       'insured_occupation', 'insured_relationship', 'incident_type',
       'collision_type', 'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'police_report_available'],
      dtype='object')
2025-04-08/13:36:40		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex']
2025-04-08/13:36:40		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE"
}
2025-04-08/13:36:40		Entered the is_null_present method of the Preprocessor class
2025-04-08/13:36:40		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/13:36:40		Imputing missing values in: ['property_damage', 'police_report_available']
2025-04-08/13:36:40		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/13:36:40		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/13:36:40		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE"
}
2025-04-08/13:36:40		Encoding categorical columns...
2025-04-08/13:36:40		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/13:36:40		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/13:36:40		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1
}
2025-04-08/13:36:40		Scaling numerical columns...
2025-04-08/13:36:40		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/13:36:40		ERROR TYPE: KeyError
2025-04-08/13:36:40		ERROR MESSAGE: "['umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim'] not in index"
2025-04-08/13:36:40		TRACEBACK:
Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 102, in predictionFromModel
    data = preprocessor.scale_numerical_columns(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/data_preprocessing/preprocessing.py", line 222, in scale_numerical_columns
    self.num_df = self.data[['months_as_customer', 'policy_deductable', 'umbrella_limit',
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/frame.py", line 3767, in __getitem__
    indexer = self.columns._get_indexer_strict(key, "columns")[1]
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/indexes/base.py", line 5877, in _get_indexer_strict
    self._raise_if_missing(keyarr, indexer, axis_name)
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/pandas/core/indexes/base.py", line 5941, in _raise_if_missing
    raise KeyError(f"{not_found} not in index")
KeyError: "['umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim'] not in index"

2025-04-08/13:40:57		Start of Validation on files for prediction!!
2025-04-08/13:40:57		Raw Data Validation Complete!!
2025-04-08/13:40:57		Starting Data Transforamtion!!
2025-04-08/13:40:57		DataTransformation Completed!!!
2025-04-08/13:40:57		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/13:40:59		Table creation Completed!!
2025-04-08/13:40:59		Insertion of Data into Table started!!!!
2025-04-08/13:41:20		Insertion in Table completed!!!
2025-04-08/13:41:20		Deleting Good Data Folder!!!
2025-04-08/13:41:20		Good_Data folder deleted!!!
2025-04-08/13:41:20		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/13:41:20		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/13:41:20		Validation Operation completed!!
2025-04-08/13:41:20		Extracting csv file from table
2025-04-08/13:41:20		=== Starting Prediction Process ===
2025-04-08/13:41:20		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/13:41:20		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/13:41:20		Loading data...
2025-04-08/13:41:20		Entered the get_data method of the Data_Getter class
2025-04-08/13:41:20		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/13:41:20		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/13:41:20		Data shape: (500, 38)
2025-04-08/13:41:20		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/13:41:20		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  policy_deductable  ...  total_claim_amount  injury_claim  property_claim vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500               1000  ...               71610          6510           13020         52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500               2000  ...                5070           780             780          3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300               2000  ...               34650          7700            3850         23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500               2000  ...               63400          6340            6340         50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000               1000  ...                6500          1300             650          4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/13:41:20		Initial data shape: (500, 38)
2025-04-08/13:41:20		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/13:41:20		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/13:41:20		Data shape after dropping columns: (500, 24)
2025-04-08/13:41:20		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/13:41:20		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim']
2025-04-08/13:41:20		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/13:41:20		Entered the is_null_present method of the Preprocessor class
2025-04-08/13:41:20		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/13:41:20		Imputing missing values in: ['property_damage', 'police_report_available']
2025-04-08/13:41:20		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/13:41:20		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/13:41:20		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/13:41:20		Encoding categorical columns...
2025-04-08/13:41:20		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/13:41:20		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/13:41:20		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/13:41:20		Scaling numerical columns...
2025-04-08/13:41:20		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/13:41:20		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/13:41:20		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "policy_annual_premium": 1406.91
}
2025-04-08/13:41:20		Loading KMeans model...
2025-04-08/13:41:20		Entered the load_model method of the File_Operation class
2025-04-08/13:41:20		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/13:41:20		KMeans model loaded successfully
2025-04-08/13:41:20		Predicting clusters...
2025-04-08/13:41:20		Cluster prediction failed. Data shape: (500, 19). Error: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...

2025-04-08/13:41:20		ERROR TYPE: Exception
2025-04-08/13:41:20		ERROR MESSAGE: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...

2025-04-08/13:41:20		TRACEBACK:
Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 122, in predictionFromModel
    clusters = kmeans.predict(data)
               ^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 1085, in predict
    X = self._check_test_data(X)
        ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 944, in _check_test_data
    X = validate_data(
        ^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2919, in validate_data
    _check_feature_names(_estimator, X, reset=reset)
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2777, in _check_feature_names
    raise ValueError(message)
ValueError: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 131, in predictionFromModel
    raise Exception(f"Cluster prediction failed: {str(e)}")
Exception: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...


2025-04-08/13:48:10		Start of Validation on files for prediction!!
2025-04-08/13:48:10		Raw Data Validation Complete!!
2025-04-08/13:48:10		Starting Data Transforamtion!!
2025-04-08/13:48:10		DataTransformation Completed!!!
2025-04-08/13:48:10		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/13:48:11		Table creation Completed!!
2025-04-08/13:48:11		Insertion of Data into Table started!!!!
2025-04-08/13:48:33		Insertion in Table completed!!!
2025-04-08/13:48:33		Deleting Good Data Folder!!!
2025-04-08/13:48:33		Good_Data folder deleted!!!
2025-04-08/13:48:33		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/13:48:33		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/13:48:33		Validation Operation completed!!
2025-04-08/13:48:33		Extracting csv file from table
2025-04-08/13:48:33		=== Starting Prediction Process ===
2025-04-08/13:48:33		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/13:48:33		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/13:48:33		Loading data...
2025-04-08/13:48:33		Entered the get_data method of the Data_Getter class
2025-04-08/13:48:33		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/13:48:33		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/13:48:33		Data shape: (500, 38)
2025-04-08/13:48:33		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/13:48:33		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/13:48:33		Initial data shape: (500, 38)
2025-04-08/13:48:33		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/13:48:33		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/13:48:33		Data shape after dropping columns: (500, 24)
2025-04-08/13:48:33		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/13:48:33		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim']
2025-04-08/13:48:33		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/13:48:33		Entered the is_null_present method of the Preprocessor class
2025-04-08/13:48:33		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/13:48:33		Imputing missing values in: ['property_damage', 'police_report_available']
2025-04-08/13:48:33		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/13:48:33		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/13:48:33		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/13:48:33		Encoding categorical columns...
2025-04-08/13:48:33		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/13:48:33		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/13:48:33		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/13:48:33		Scaling numerical columns...
2025-04-08/13:48:33		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/13:48:33		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/13:48:33		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "policy_annual_premium": 1406.91
}
2025-04-08/13:48:33		Loading KMeans model...
2025-04-08/13:48:33		Entered the load_model method of the File_Operation class
2025-04-08/13:48:33		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/13:48:33		KMeans model loaded successfully
2025-04-08/13:48:33		Predicting clusters...
2025-04-08/13:48:33		Cluster prediction failed. Data shape: (500, 19). Error: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...

2025-04-08/13:48:33		ERROR TYPE: Exception
2025-04-08/13:48:33		ERROR MESSAGE: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...

2025-04-08/13:48:33		TRACEBACK:
Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 122, in predictionFromModel
    clusters = kmeans.predict(data)
               ^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 1085, in predict
    X = self._check_test_data(X)
        ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 944, in _check_test_data
    X = validate_data(
        ^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2919, in validate_data
    _check_feature_names(_estimator, X, reset=reset)
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2777, in _check_feature_names
    raise ValueError(message)
ValueError: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 131, in predictionFromModel
    raise Exception(f"Cluster prediction failed: {str(e)}")
Exception: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...


2025-04-08/14:34:17		Start of Validation on files for prediction!!
2025-04-08/14:34:17		Raw Data Validation Complete!!
2025-04-08/14:34:17		Starting Data Transforamtion!!
2025-04-08/14:34:17		DataTransformation Completed!!!
2025-04-08/14:34:17		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/14:34:19		Table creation Completed!!
2025-04-08/14:34:19		Insertion of Data into Table started!!!!
2025-04-08/14:34:40		Insertion in Table completed!!!
2025-04-08/14:34:40		Deleting Good Data Folder!!!
2025-04-08/14:34:40		Good_Data folder deleted!!!
2025-04-08/14:34:40		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/14:34:40		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/14:34:40		Validation Operation completed!!
2025-04-08/14:34:40		Extracting csv file from table
2025-04-08/14:34:40		=== Starting Prediction Process ===
2025-04-08/14:34:40		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/14:34:40		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/14:34:40		Loading data...
2025-04-08/14:34:40		Entered the get_data method of the Data_Getter class
2025-04-08/14:34:40		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/14:34:40		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/14:34:40		Data shape: (500, 38)
2025-04-08/14:34:40		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/14:34:40		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/14:34:40		Initial data shape: (500, 38)
2025-04-08/14:34:40		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/14:34:40		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/14:34:40		Data shape after dropping columns: (500, 24)
2025-04-08/14:34:40		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/14:34:40		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim']
2025-04-08/14:34:40		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/14:34:40		Entered the is_null_present method of the Preprocessor class
2025-04-08/14:34:40		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/14:34:40		Imputing missing values in: ['property_damage', 'police_report_available']
2025-04-08/14:34:40		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/14:34:40		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/14:34:40		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/14:34:40		Encoding categorical columns...
2025-04-08/14:34:40		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/14:34:40		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/14:34:40		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/14:34:40		Scaling numerical columns...
2025-04-08/14:34:40		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/14:34:40		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/14:34:40		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "policy_annual_premium": 1406.91
}
2025-04-08/14:34:40		Loading KMeans model...
2025-04-08/14:34:40		Entered the load_model method of the File_Operation class
2025-04-08/14:34:40		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/14:34:40		KMeans model loaded successfully
2025-04-08/14:34:40		Predicting clusters...
2025-04-08/14:34:40		Cluster prediction failed. Data shape: (500, 19). Error: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...

2025-04-08/14:34:40		ERROR TYPE: Exception
2025-04-08/14:34:40		ERROR MESSAGE: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...

2025-04-08/14:34:40		TRACEBACK:
Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 122, in predictionFromModel
    clusters = kmeans.predict(data)
               ^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 1085, in predict
    X = self._check_test_data(X)
        ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 944, in _check_test_data
    X = validate_data(
        ^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2919, in validate_data
    _check_feature_names(_estimator, X, reset=reset)
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2777, in _check_feature_names
    raise ValueError(message)
ValueError: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 131, in predictionFromModel
    raise Exception(f"Cluster prediction failed: {str(e)}")
Exception: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...


2025-04-08/14:41:49		Start of Validation on files for prediction!!
2025-04-08/14:41:50		Raw Data Validation Complete!!
2025-04-08/14:41:50		Starting Data Transforamtion!!
2025-04-08/14:41:50		DataTransformation Completed!!!
2025-04-08/14:41:50		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/14:41:51		Table creation Completed!!
2025-04-08/14:41:51		Insertion of Data into Table started!!!!
2025-04-08/14:42:13		Insertion in Table completed!!!
2025-04-08/14:42:13		Deleting Good Data Folder!!!
2025-04-08/14:42:13		Good_Data folder deleted!!!
2025-04-08/14:42:13		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/14:42:13		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/14:42:13		Validation Operation completed!!
2025-04-08/14:42:13		Extracting csv file from table
2025-04-08/14:42:13		=== Starting Prediction Process ===
2025-04-08/14:42:13		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/14:42:13		Model directory contents: ['KMeans', 'XGBoost0', 'SVM1']
2025-04-08/14:42:13		Loading data...
2025-04-08/14:42:13		Entered the get_data method of the Data_Getter class
2025-04-08/14:42:13		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/14:42:13		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/14:42:13		Data shape: (500, 38)
2025-04-08/14:42:13		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/14:42:13		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/14:42:13		Initial data shape: (500, 38)
2025-04-08/14:42:13		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/14:42:13		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/14:42:13		Data shape after dropping columns: (500, 24)
2025-04-08/14:42:13		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/14:42:13		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim']
2025-04-08/14:42:13		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/14:42:13		Entered the is_null_present method of the Preprocessor class
2025-04-08/14:42:13		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/14:42:13		Imputing missing values in: ['property_damage', 'police_report_available']
2025-04-08/14:42:13		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/14:42:13		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/14:42:13		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/14:42:13		Encoding categorical columns...
2025-04-08/14:42:13		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/14:42:13		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/14:42:13		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/14:42:13		Scaling numerical columns...
2025-04-08/14:42:13		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/14:42:13		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/14:42:13		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "policy_annual_premium": 1406.91
}
2025-04-08/14:42:13		Loading KMeans model...
2025-04-08/14:42:13		Entered the load_model method of the File_Operation class
2025-04-08/14:42:13		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/14:42:13		KMeans model loaded successfully
2025-04-08/14:42:13		Predicting clusters...
2025-04-08/14:42:13		Cluster prediction failed. Data shape: (500, 19). Error: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...

2025-04-08/14:42:13		ERROR TYPE: Exception
2025-04-08/14:42:13		ERROR MESSAGE: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...

2025-04-08/14:42:13		TRACEBACK:
Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 122, in predictionFromModel
    clusters = kmeans.predict(data)
               ^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 1085, in predict
    X = self._check_test_data(X)
        ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 944, in _check_test_data
    X = validate_data(
        ^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2919, in validate_data
    _check_feature_names(_estimator, X, reset=reset)
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2777, in _check_feature_names
    raise ValueError(message)
ValueError: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 131, in predictionFromModel
    raise Exception(f"Cluster prediction failed: {str(e)}")
Exception: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...


2025-04-08/15:02:05		Start of Validation on files for prediction!!
2025-04-08/15:02:05		Raw Data Validation Complete!!
2025-04-08/15:02:05		Starting Data Transforamtion!!
2025-04-08/15:02:05		DataTransformation Completed!!!
2025-04-08/15:02:05		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/15:02:07		Table creation Completed!!
2025-04-08/15:02:07		Insertion of Data into Table started!!!!
2025-04-08/15:02:29		Insertion in Table completed!!!
2025-04-08/15:02:29		Deleting Good Data Folder!!!
2025-04-08/15:02:29		Good_Data folder deleted!!!
2025-04-08/15:02:29		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/15:02:29		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/15:02:29		Validation Operation completed!!
2025-04-08/15:02:29		Extracting csv file from table
2025-04-08/15:02:29		=== Starting Prediction Process ===
2025-04-08/15:02:29		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/15:02:29		Model directory contents: ['KMeans', 'XGBoost0', 'SVM1']
2025-04-08/15:02:29		Loading data...
2025-04-08/15:02:29		Entered the get_data method of the Data_Getter class
2025-04-08/15:02:29		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/15:02:29		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/15:02:29		Data shape: (500, 38)
2025-04-08/15:02:29		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/15:02:29		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/15:02:29		Initial data shape: (500, 38)
2025-04-08/15:02:29		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/15:02:29		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/15:02:29		Data shape after dropping columns: (500, 24)
2025-04-08/15:02:29		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/15:02:29		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim']
2025-04-08/15:02:29		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/15:02:29		Entered the is_null_present method of the Preprocessor class
2025-04-08/15:02:29		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/15:02:29		Imputing missing values in: ['property_damage', 'police_report_available']
2025-04-08/15:02:29		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/15:02:29		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/15:02:29		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/15:02:29		Encoding categorical columns...
2025-04-08/15:02:29		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/15:02:29		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/15:02:29		Entered the oneHotEncoding method of the Preprocessor class
2025-04-08/15:02:29		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-08/15:02:29		After encoding data sample:
{
  "policy_csl": 2,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/15:02:29		Scaling numerical columns...
2025-04-08/15:02:29		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/15:02:29		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/15:02:29		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "policy_annual_premium": 1406
}
2025-04-08/15:02:29		Loading KMeans model...
2025-04-08/15:02:29		Entered the load_model method of the File_Operation class
2025-04-08/15:02:29		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/15:02:29		KMeans model loaded successfully
2025-04-08/15:02:29		Columns being fed to the model Index(['months_as_customer', 'policy_deductable', 'umbrella_limit',
       'capital-gains', 'capital-loss', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'bodily_injuries', 'witnesses',
       'injury_claim', 'property_claim', 'vehicle_claim', 'policy_csl',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_education_level', 'insured_sex', 'policy_annual_premium'],
      dtype='object')
2025-04-08/15:02:29		Predicting clusters...
2025-04-08/15:02:29		Cluster prediction failed. Data shape: (500, 19). Error: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...

2025-04-08/15:02:29		ERROR TYPE: Exception
2025-04-08/15:02:29		ERROR MESSAGE: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...

2025-04-08/15:02:29		TRACEBACK:
Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 125, in predictionFromModel
    clusters = kmeans.predict(data)
               ^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 1085, in predict
    X = self._check_test_data(X)
        ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 944, in _check_test_data
    X = validate_data(
        ^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2919, in validate_data
    _check_feature_names(_estimator, X, reset=reset)
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2777, in _check_feature_names
    raise ValueError(message)
ValueError: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 134, in predictionFromModel
    raise Exception(f"Cluster prediction failed: {str(e)}")
Exception: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...


2025-04-08/15:05:37		Start of Validation on files for prediction!!
2025-04-08/15:05:38		Raw Data Validation Complete!!
2025-04-08/15:05:38		Starting Data Transforamtion!!
2025-04-08/15:05:38		DataTransformation Completed!!!
2025-04-08/15:05:38		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/15:05:39		Table creation Completed!!
2025-04-08/15:05:39		Insertion of Data into Table started!!!!
2025-04-08/15:06:02		Insertion in Table completed!!!
2025-04-08/15:06:02		Deleting Good Data Folder!!!
2025-04-08/15:06:02		Good_Data folder deleted!!!
2025-04-08/15:06:02		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/15:06:02		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/15:06:02		Validation Operation completed!!
2025-04-08/15:06:02		Extracting csv file from table
2025-04-08/15:06:02		=== Starting Prediction Process ===
2025-04-08/15:06:02		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/15:06:02		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/15:06:02		Loading data...
2025-04-08/15:06:02		Entered the get_data method of the Data_Getter class
2025-04-08/15:06:02		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/15:06:02		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/15:06:02		Data shape: (500, 38)
2025-04-08/15:06:02		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/15:06:02		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  policy_deductable  ...  total_claim_amount  injury_claim  property_claim vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500               1000  ...               71610          6510           13020         52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500               2000  ...                5070           780             780          3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300               2000  ...               34650          7700            3850         23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500               2000  ...               63400          6340            6340         50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000               1000  ...                6500          1300             650          4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/15:06:02		Initial data shape: (500, 38)
2025-04-08/15:06:02		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/15:06:02		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/15:06:02		Data shape after dropping columns: (500, 24)
2025-04-08/15:06:02		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/15:06:02		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim']
2025-04-08/15:06:02		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/15:06:02		Entered the is_null_present method of the Preprocessor class
2025-04-08/15:06:02		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/15:06:02		Imputing missing values in: ['property_damage', 'police_report_available']
2025-04-08/15:06:02		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/15:06:02		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/15:06:02		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/15:06:02		Encoding categorical columns...
2025-04-08/15:06:02		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/15:06:02		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/15:06:02		Entered the oneHotEncoding method of the Preprocessor class
2025-04-08/15:06:02		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-08/15:06:02		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/15:06:02		Scaling numerical columns...
2025-04-08/15:06:02		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/15:06:02		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/15:06:02		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "policy_annual_premium": 1406.91
}
2025-04-08/15:06:02		Loading KMeans model...
2025-04-08/15:06:02		Entered the load_model method of the File_Operation class
2025-04-08/15:06:02		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/15:06:02		KMeans model loaded successfully
2025-04-08/15:06:02		Columns being fed to the model Index(['months_as_customer', 'policy_deductable', 'umbrella_limit',
       'capital-gains', 'capital-loss', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'bodily_injuries', 'witnesses',
       'injury_claim', 'property_claim', 'vehicle_claim', 'policy_csl',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_education_level', 'insured_sex', 'policy_annual_premium'],
      dtype='object')
2025-04-08/15:06:02		Predicting clusters...
2025-04-08/15:06:02		Cluster prediction failed. Data shape: (500, 19). Error: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...

2025-04-08/15:06:02		ERROR TYPE: Exception
2025-04-08/15:06:02		ERROR MESSAGE: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...

2025-04-08/15:06:02		TRACEBACK:
Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 125, in predictionFromModel
    clusters = kmeans.predict(data)
               ^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 1085, in predict
    X = self._check_test_data(X)
        ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 944, in _check_test_data
    X = validate_data(
        ^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2919, in validate_data
    _check_feature_names(_estimator, X, reset=reset)
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2777, in _check_feature_names
    raise ValueError(message)
ValueError: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 134, in predictionFromModel
    raise Exception(f"Cluster prediction failed: {str(e)}")
Exception: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...


2025-04-08/15:12:11		Start of Validation on files for prediction!!
2025-04-08/15:12:12		Raw Data Validation Complete!!
2025-04-08/15:12:12		Starting Data Transforamtion!!
2025-04-08/15:12:12		DataTransformation Completed!!!
2025-04-08/15:12:12		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/15:12:13		Table creation Completed!!
2025-04-08/15:12:13		Insertion of Data into Table started!!!!
2025-04-08/15:12:35		Insertion in Table completed!!!
2025-04-08/15:12:35		Deleting Good Data Folder!!!
2025-04-08/15:12:35		Good_Data folder deleted!!!
2025-04-08/15:12:35		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/15:12:35		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/15:12:35		Validation Operation completed!!
2025-04-08/15:12:35		Extracting csv file from table
2025-04-08/15:12:35		=== Starting Prediction Process ===
2025-04-08/15:12:35		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/15:12:35		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/15:12:35		Loading data...
2025-04-08/15:12:35		Entered the get_data method of the Data_Getter class
2025-04-08/15:12:35		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/15:12:35		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/15:12:35		Data shape: (500, 38)
2025-04-08/15:12:35		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/15:12:35		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  policy_deductable  ...  total_claim_amount  injury_claim  property_claim vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500               1000  ...               71610          6510           13020         52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500               2000  ...                5070           780             780          3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300               2000  ...               34650          7700            3850         23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500               2000  ...               63400          6340            6340         50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000               1000  ...                6500          1300             650          4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/15:12:35		Initial data shape: (500, 38)
2025-04-08/15:12:35		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/15:12:35		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/15:12:35		Data shape after dropping columns: (500, 24)
2025-04-08/15:12:35		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/15:12:35		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim']
2025-04-08/15:12:35		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/15:12:35		Entered the is_null_present method of the Preprocessor class
2025-04-08/15:12:35		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/15:12:35		Imputing missing values in: ['property_damage', 'police_report_available']
2025-04-08/15:12:35		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/15:12:35		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/15:12:35		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/15:12:35		Encoding categorical columns...
2025-04-08/15:12:35		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/15:12:35		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/15:12:35		Entered the oneHotEncoding method of the Preprocessor class
2025-04-08/15:12:35		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-08/15:12:35		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/15:12:35		Scaling numerical columns...
2025-04-08/15:12:35		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/15:12:35		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/15:12:35		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "policy_annual_premium": 1406.91
}
2025-04-08/15:12:35		Loading KMeans model...
2025-04-08/15:12:35		Entered the load_model method of the File_Operation class
2025-04-08/15:12:35		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/15:12:35		KMeans model loaded successfully
2025-04-08/15:12:35		Columns being fed to the model Index(['months_as_customer', 'policy_deductable', 'umbrella_limit',
       'capital-gains', 'capital-loss', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'bodily_injuries', 'witnesses',
       'injury_claim', 'property_claim', 'vehicle_claim', 'policy_csl',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_education_level', 'insured_sex', 'policy_annual_premium'],
      dtype='object')
2025-04-08/15:12:35		Predicting clusters...
2025-04-08/15:12:35		Cluster prediction failed. Data shape: (500, 19). Error: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...

2025-04-08/15:12:35		ERROR TYPE: Exception
2025-04-08/15:12:35		ERROR MESSAGE: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...

2025-04-08/15:12:35		TRACEBACK:
Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 125, in predictionFromModel
    clusters = kmeans.predict(data)
               ^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 1085, in predict
    X = self._check_test_data(X)
        ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 944, in _check_test_data
    X = validate_data(
        ^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2919, in validate_data
    _check_feature_names(_estimator, X, reset=reset)
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2777, in _check_feature_names
    raise ValueError(message)
ValueError: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 134, in predictionFromModel
    raise Exception(f"Cluster prediction failed: {str(e)}")
Exception: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- authorities_contacted_Fire
- authorities_contacted_Other
- authorities_contacted_Police
- collision_type_Rear Collision
- collision_type_Side Collision
- ...


2025-04-08/15:22:14		Start of Validation on files for prediction!!
2025-04-08/15:22:14		Raw Data Validation Complete!!
2025-04-08/15:22:14		Starting Data Transforamtion!!
2025-04-08/15:22:14		DataTransformation Completed!!!
2025-04-08/15:22:14		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/15:22:16		Table creation Completed!!
2025-04-08/15:22:16		Insertion of Data into Table started!!!!
2025-04-08/15:22:38		Insertion in Table completed!!!
2025-04-08/15:22:38		Deleting Good Data Folder!!!
2025-04-08/15:22:38		Good_Data folder deleted!!!
2025-04-08/15:22:38		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/15:22:38		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/15:22:38		Validation Operation completed!!
2025-04-08/15:22:38		Extracting csv file from table
2025-04-08/15:22:38		=== Starting Prediction Process ===
2025-04-08/15:22:38		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/15:22:38		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/15:22:38		Loading data...
2025-04-08/15:22:38		Entered the get_data method of the Data_Getter class
2025-04-08/15:22:38		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/15:22:38		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/15:22:38		Data shape: (500, 38)
2025-04-08/15:22:38		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/15:22:38		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  policy_deductable  ...  total_claim_amount  injury_claim  property_claim vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500               1000  ...               71610          6510           13020         52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500               2000  ...                5070           780             780          3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300               2000  ...               34650          7700            3850         23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500               2000  ...               63400          6340            6340         50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000               1000  ...                6500          1300             650          4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/15:22:38		Initial data shape: (500, 38)
2025-04-08/15:22:38		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/15:22:38		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/15:22:38		Data shape after dropping columns: (500, 24)
2025-04-08/15:22:38		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/15:22:38		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type']
2025-04-08/15:22:38		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision"
}
2025-04-08/15:22:38		Entered the is_null_present method of the Preprocessor class
2025-04-08/15:22:38		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/15:22:38		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-08/15:22:38		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/15:22:38		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/15:22:38		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision"
}
2025-04-08/15:22:38		Encoding categorical columns...
2025-04-08/15:22:38		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/15:22:38		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/15:22:38		Entered the oneHotEncoding method of the Preprocessor class
2025-04-08/15:22:38		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-08/15:22:38		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/15:22:38		Scaling numerical columns...
2025-04-08/15:22:38		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/15:22:38		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/15:22:38		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "policy_annual_premium": 1406.91
}
2025-04-08/15:22:38		Loading KMeans model...
2025-04-08/15:22:38		Entered the load_model method of the File_Operation class
2025-04-08/15:22:38		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/15:22:38		KMeans model loaded successfully
2025-04-08/15:22:38		Columns being fed to the model Index(['months_as_customer', 'policy_deductable', 'umbrella_limit',
       'capital-gains', 'capital-loss', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'bodily_injuries', 'witnesses',
       'injury_claim', 'property_claim', 'vehicle_claim', 'policy_csl',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_education_level', 'insured_sex', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'collision_type_Rear Collision', 'collision_type_Side Collision',
       'policy_annual_premium'],
      dtype='object')
2025-04-08/15:22:38		Predicting clusters...
2025-04-08/15:22:38		Cluster prediction failed. Data shape: (500, 24). Error: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- incident_type_Parked Car
- incident_type_Single Vehicle Collision
- incident_type_Vehicle Theft
- insured_occupation_armed-forces
- insured_occupation_craft-repair
- ...

2025-04-08/15:22:38		ERROR TYPE: Exception
2025-04-08/15:22:38		ERROR MESSAGE: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- incident_type_Parked Car
- incident_type_Single Vehicle Collision
- incident_type_Vehicle Theft
- insured_occupation_armed-forces
- insured_occupation_craft-repair
- ...

2025-04-08/15:22:38		TRACEBACK:
Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 125, in predictionFromModel
    clusters = kmeans.predict(data)
               ^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 1085, in predict
    X = self._check_test_data(X)
        ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 944, in _check_test_data
    X = validate_data(
        ^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2919, in validate_data
    _check_feature_names(_estimator, X, reset=reset)
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2777, in _check_feature_names
    raise ValueError(message)
ValueError: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- incident_type_Parked Car
- incident_type_Single Vehicle Collision
- incident_type_Vehicle Theft
- insured_occupation_armed-forces
- insured_occupation_craft-repair
- ...


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 134, in predictionFromModel
    raise Exception(f"Cluster prediction failed: {str(e)}")
Exception: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- incident_type_Parked Car
- incident_type_Single Vehicle Collision
- incident_type_Vehicle Theft
- insured_occupation_armed-forces
- insured_occupation_craft-repair
- ...


2025-04-08/15:24:29		Start of Validation on files for prediction!!
2025-04-08/15:24:29		Raw Data Validation Complete!!
2025-04-08/15:24:29		Starting Data Transforamtion!!
2025-04-08/15:24:29		DataTransformation Completed!!!
2025-04-08/15:24:29		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/15:24:30		Table creation Completed!!
2025-04-08/15:24:30		Insertion of Data into Table started!!!!
2025-04-08/15:24:53		Insertion in Table completed!!!
2025-04-08/15:24:53		Deleting Good Data Folder!!!
2025-04-08/15:24:53		Good_Data folder deleted!!!
2025-04-08/15:24:53		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/15:24:53		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/15:24:53		Validation Operation completed!!
2025-04-08/15:24:53		Extracting csv file from table
2025-04-08/15:24:53		=== Starting Prediction Process ===
2025-04-08/15:24:53		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/15:24:53		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/15:24:53		Loading data...
2025-04-08/15:24:53		Entered the get_data method of the Data_Getter class
2025-04-08/15:24:53		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/15:24:53		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/15:24:53		Data shape: (500, 38)
2025-04-08/15:24:53		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/15:24:53		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  policy_deductable  ...  total_claim_amount  injury_claim  property_claim vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500               1000  ...               71610          6510           13020         52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500               2000  ...                5070           780             780          3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300               2000  ...               34650          7700            3850         23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500               2000  ...               63400          6340            6340         50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000               1000  ...                6500          1300             650          4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/15:24:53		Initial data shape: (500, 38)
2025-04-08/15:24:53		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/15:24:53		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/15:24:53		Data shape after dropping columns: (500, 24)
2025-04-08/15:24:53		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/15:24:53		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation']
2025-04-08/15:24:53		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair"
}
2025-04-08/15:24:53		Entered the is_null_present method of the Preprocessor class
2025-04-08/15:24:53		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/15:24:53		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-08/15:24:53		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/15:24:53		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/15:24:53		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair"
}
2025-04-08/15:24:53		Encoding categorical columns...
2025-04-08/15:24:53		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/15:24:53		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/15:24:53		Entered the oneHotEncoding method of the Preprocessor class
2025-04-08/15:24:53		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-08/15:24:53		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/15:24:53		Scaling numerical columns...
2025-04-08/15:24:53		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/15:24:53		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/15:24:53		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "policy_annual_premium": 1406.91
}
2025-04-08/15:24:53		Loading KMeans model...
2025-04-08/15:24:53		Entered the load_model method of the File_Operation class
2025-04-08/15:24:53		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/15:24:53		KMeans model loaded successfully
2025-04-08/15:24:53		Columns being fed to the model Index(['months_as_customer', 'policy_deductable', 'umbrella_limit',
       'capital-gains', 'capital-loss', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'bodily_injuries', 'witnesses',
       'injury_claim', 'property_claim', 'vehicle_claim', 'policy_csl',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_education_level', 'insured_sex', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'collision_type_Rear Collision', 'collision_type_Side Collision',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'insured_occupation_armed-forces',
       'insured_occupation_craft-repair', 'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving', 'policy_annual_premium'],
      dtype='object')
2025-04-08/15:24:53		Predicting clusters...
2025-04-08/15:24:53		Cluster prediction failed. Data shape: (500, 40). Error: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- insured_relationship_not-in-family
- insured_relationship_other-relative
- insured_relationship_own-child
- insured_relationship_unmarried
- insured_relationship_wife

2025-04-08/15:24:53		ERROR TYPE: Exception
2025-04-08/15:24:53		ERROR MESSAGE: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- insured_relationship_not-in-family
- insured_relationship_other-relative
- insured_relationship_own-child
- insured_relationship_unmarried
- insured_relationship_wife

2025-04-08/15:24:53		TRACEBACK:
Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 126, in predictionFromModel
    clusters = kmeans.predict(data)
               ^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 1085, in predict
    X = self._check_test_data(X)
        ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 944, in _check_test_data
    X = validate_data(
        ^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2919, in validate_data
    _check_feature_names(_estimator, X, reset=reset)
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2777, in _check_feature_names
    raise ValueError(message)
ValueError: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- insured_relationship_not-in-family
- insured_relationship_other-relative
- insured_relationship_own-child
- insured_relationship_unmarried
- insured_relationship_wife


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 135, in predictionFromModel
    raise Exception(f"Cluster prediction failed: {str(e)}")
Exception: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names seen at fit time, yet now missing:
- insured_relationship_not-in-family
- insured_relationship_other-relative
- insured_relationship_own-child
- insured_relationship_unmarried
- insured_relationship_wife


2025-04-08/15:25:45		Start of Validation on files for prediction!!
2025-04-08/15:25:45		Raw Data Validation Complete!!
2025-04-08/15:25:45		Starting Data Transforamtion!!
2025-04-08/15:25:45		DataTransformation Completed!!!
2025-04-08/15:25:45		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/15:25:47		Table creation Completed!!
2025-04-08/15:25:47		Insertion of Data into Table started!!!!
2025-04-08/15:26:09		Insertion in Table completed!!!
2025-04-08/15:26:09		Deleting Good Data Folder!!!
2025-04-08/15:26:09		Good_Data folder deleted!!!
2025-04-08/15:26:09		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/15:26:09		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/15:26:09		Validation Operation completed!!
2025-04-08/15:26:09		Extracting csv file from table
2025-04-08/15:26:09		=== Starting Prediction Process ===
2025-04-08/15:26:09		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/15:26:09		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/15:26:09		Loading data...
2025-04-08/15:26:09		Entered the get_data method of the Data_Getter class
2025-04-08/15:26:09		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/15:26:09		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/15:26:09		Data shape: (500, 38)
2025-04-08/15:26:09		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/15:26:09		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  policy_deductable  ...  total_claim_amount  injury_claim  property_claim vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500               1000  ...               71610          6510           13020         52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500               2000  ...                5070           780             780          3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300               2000  ...               34650          7700            3850         23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500               2000  ...               63400          6340            6340         50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000               1000  ...                6500          1300             650          4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/15:26:09		Initial data shape: (500, 38)
2025-04-08/15:26:09		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/15:26:09		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/15:26:09		Data shape after dropping columns: (500, 24)
2025-04-08/15:26:09		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/15:26:09		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation', 'insured_relationship']
2025-04-08/15:26:09		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/15:26:09		Entered the is_null_present method of the Preprocessor class
2025-04-08/15:26:09		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/15:26:09		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-08/15:26:09		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/15:26:09		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/15:26:09		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/15:26:09		Encoding categorical columns...
2025-04-08/15:26:09		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/15:26:09		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/15:26:09		Entered the oneHotEncoding method of the Preprocessor class
2025-04-08/15:26:09		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-08/15:26:09		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/15:26:09		Scaling numerical columns...
2025-04-08/15:26:09		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/15:26:09		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/15:26:09		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-08/15:26:09		Loading KMeans model...
2025-04-08/15:26:09		Entered the load_model method of the File_Operation class
2025-04-08/15:26:09		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/15:26:09		KMeans model loaded successfully
2025-04-08/15:26:09		Columns being fed to the model Index(['months_as_customer', 'policy_deductable', 'umbrella_limit',
       'capital-gains', 'capital-loss', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'bodily_injuries', 'witnesses',
       'injury_claim', 'property_claim', 'vehicle_claim', 'policy_csl',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_education_level', 'insured_sex', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'collision_type_Rear Collision', 'collision_type_Side Collision',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'insured_occupation_armed-forces',
       'insured_occupation_craft-repair', 'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving',
       'insured_relationship_not-in-family',
       'insured_relationship_other-relative', 'insured_relationship_own-child',
       'insured_relationship_unmarried', 'insured_relationship_wife',
       'policy_annual_premium'],
      dtype='object')
2025-04-08/15:26:09		Predicting clusters...
2025-04-08/15:26:09		Cluster prediction failed. Data shape: (500, 45). Error: The feature names should match those that were passed during fit.
Feature names must be in the same order as they were in fit.

2025-04-08/15:26:09		ERROR TYPE: Exception
2025-04-08/15:26:09		ERROR MESSAGE: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names must be in the same order as they were in fit.

2025-04-08/15:26:09		TRACEBACK:
Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 126, in predictionFromModel
    clusters = kmeans.predict(data)
               ^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 1085, in predict
    X = self._check_test_data(X)
        ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 944, in _check_test_data
    X = validate_data(
        ^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2919, in validate_data
    _check_feature_names(_estimator, X, reset=reset)
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2777, in _check_feature_names
    raise ValueError(message)
ValueError: The feature names should match those that were passed during fit.
Feature names must be in the same order as they were in fit.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 135, in predictionFromModel
    raise Exception(f"Cluster prediction failed: {str(e)}")
Exception: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names must be in the same order as they were in fit.


2025-04-08/15:31:20		Start of Validation on files for prediction!!
2025-04-08/15:31:20		Raw Data Validation Complete!!
2025-04-08/15:31:20		Starting Data Transforamtion!!
2025-04-08/15:31:20		DataTransformation Completed!!!
2025-04-08/15:31:20		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/15:31:21		Table creation Completed!!
2025-04-08/15:31:21		Insertion of Data into Table started!!!!
2025-04-08/15:31:43		Insertion in Table completed!!!
2025-04-08/15:31:43		Deleting Good Data Folder!!!
2025-04-08/15:31:43		Good_Data folder deleted!!!
2025-04-08/15:31:43		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/15:31:43		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/15:31:43		Validation Operation completed!!
2025-04-08/15:31:43		Extracting csv file from table
2025-04-08/15:31:44		=== Starting Prediction Process ===
2025-04-08/15:31:44		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/15:31:44		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/15:31:44		Loading data...
2025-04-08/15:31:44		Entered the get_data method of the Data_Getter class
2025-04-08/15:31:44		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/15:31:44		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/15:31:44		Data shape: (500, 38)
2025-04-08/15:31:44		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/15:31:44		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/15:31:44		Initial data shape: (500, 38)
2025-04-08/15:31:44		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/15:31:44		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/15:31:44		Data shape after dropping columns: (500, 24)
2025-04-08/15:31:44		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/15:31:44		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation', 'insured_relationship']
2025-04-08/15:31:44		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/15:31:44		Entered the is_null_present method of the Preprocessor class
2025-04-08/15:31:44		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/15:31:44		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-08/15:31:44		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/15:31:44		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/15:31:44		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/15:31:44		Encoding categorical columns...
2025-04-08/15:31:44		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/15:31:44		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/15:31:44		Entered the oneHotEncoding method of the Preprocessor class
2025-04-08/15:31:44		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-08/15:31:44		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/15:31:44		Scaling numerical columns...
2025-04-08/15:31:44		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/15:31:44		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/15:31:44		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-08/15:31:44		Loading KMeans model...
2025-04-08/15:31:44		Entered the load_model method of the File_Operation class
2025-04-08/15:31:44		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/15:31:44		KMeans model loaded successfully
2025-04-08/15:31:44		Columns being fed to the model Index(['months_as_customer', 'policy_deductable', 'umbrella_limit',
       'capital-gains', 'capital-loss', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'bodily_injuries', 'witnesses',
       'injury_claim', 'property_claim', 'vehicle_claim', 'policy_csl',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_education_level', 'insured_sex', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'collision_type_Rear Collision', 'collision_type_Side Collision',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'insured_occupation_armed-forces',
       'insured_occupation_craft-repair', 'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving',
       'insured_relationship_not-in-family',
       'insured_relationship_other-relative', 'insured_relationship_own-child',
       'insured_relationship_unmarried', 'insured_relationship_wife',
       'policy_annual_premium'],
      dtype='object')
2025-04-08/15:31:44		Predicting clusters...
2025-04-08/15:31:44		Cluster prediction failed. Data shape: (500, 45). Error: The feature names should match those that were passed during fit.
Feature names must be in the same order as they were in fit.

2025-04-08/15:31:44		ERROR TYPE: Exception
2025-04-08/15:31:44		ERROR MESSAGE: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names must be in the same order as they were in fit.

2025-04-08/15:31:44		TRACEBACK:
Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 126, in predictionFromModel
    clusters = kmeans.predict(data)
               ^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 1085, in predict
    X = self._check_test_data(X)
        ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/cluster/_kmeans.py", line 944, in _check_test_data
    X = validate_data(
        ^^^^^^^^^^^^^^
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2919, in validate_data
    _check_feature_names(_estimator, X, reset=reset)
  File "/home/ephym/Desktop/InsurancefraudDetection/myenv/lib/python3.11/site-packages/sklearn/utils/validation.py", line 2777, in _check_feature_names
    raise ValueError(message)
ValueError: The feature names should match those that were passed during fit.
Feature names must be in the same order as they were in fit.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ephym/Desktop/InsurancefraudDetection/predictFromModel.py", line 135, in predictionFromModel
    raise Exception(f"Cluster prediction failed: {str(e)}")
Exception: Cluster prediction failed: The feature names should match those that were passed during fit.
Feature names must be in the same order as they were in fit.


2025-04-08/15:51:30		Start of Validation on files for prediction!!
2025-04-08/15:51:30		Raw Data Validation Complete!!
2025-04-08/15:51:30		Starting Data Transforamtion!!
2025-04-08/15:51:30		DataTransformation Completed!!!
2025-04-08/15:51:30		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/15:51:32		Table creation Completed!!
2025-04-08/15:51:32		Insertion of Data into Table started!!!!
2025-04-08/15:51:54		Insertion in Table completed!!!
2025-04-08/15:51:54		Deleting Good Data Folder!!!
2025-04-08/15:51:54		Good_Data folder deleted!!!
2025-04-08/15:51:54		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/15:51:54		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/15:51:54		Validation Operation completed!!
2025-04-08/15:51:54		Extracting csv file from table
2025-04-08/15:51:54		=== Starting Prediction Process ===
2025-04-08/15:51:54		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/15:51:54		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/15:51:54		Loading data...
2025-04-08/15:51:54		Entered the get_data method of the Data_Getter class
2025-04-08/15:51:54		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/15:51:54		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/15:51:54		Data shape: (500, 38)
2025-04-08/15:51:54		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/15:51:54		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/15:51:54		Initial data shape: (500, 38)
2025-04-08/15:51:54		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/15:51:54		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/15:51:54		Data shape after dropping columns: (500, 24)
2025-04-08/15:51:54		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/15:51:54		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation', 'insured_relationship']
2025-04-08/15:51:54		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/15:51:54		Entered the is_null_present method of the Preprocessor class
2025-04-08/15:51:55		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/15:51:55		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-08/15:51:55		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/15:51:55		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/15:51:55		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/15:51:55		Encoding categorical columns...
2025-04-08/15:51:55		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/15:51:55		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/15:51:55		Entered the oneHotEncoding method of the Preprocessor class
2025-04-08/15:51:55		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-08/15:51:55		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/15:51:55		Scaling numerical columns...
2025-04-08/15:51:55		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/15:51:55		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/15:51:55		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-08/15:51:55		Loading KMeans model...
2025-04-08/15:51:55		Entered the load_model method of the File_Operation class
2025-04-08/15:51:55		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/15:51:55		KMeans model loaded successfully
2025-04-08/15:51:55		Columns being fed to the model Index(['policy_csl', 'insured_sex', 'insured_education_level',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_occupation_armed-forces', 'insured_occupation_craft-repair',
       'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving',
       'insured_relationship_not-in-family',
       'insured_relationship_other-relative', 'insured_relationship_own-child',
       'insured_relationship_unmarried', 'insured_relationship_wife',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'collision_type_Rear Collision',
       'collision_type_Side Collision', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'months_as_customer', 'policy_deductable', 'policy_annual_premium',
       'umbrella_limit', 'capital-gains', 'capital-loss',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'bodily_injuries', 'witnesses', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/15:51:55		Predicting clusters...
2025-04-08/15:51:55		Found clusters: [0]
2025-04-08/15:51:55		Processing cluster 0...
2025-04-08/15:51:55		Entered the find_correct_model_file method of the File_Operation class
2025-04-08/15:51:55		Exited the find_correct_model_file method of the Model_Finder class.
2025-04-08/15:51:55		Loading model: XGBoost0
2025-04-08/15:51:55		Entered the load_model method of the File_Operation class
2025-04-08/15:51:55		Model File XGBoost0 loaded. Exited the load_model method of the Model_Finder class
2025-04-08/15:51:55		Cluster 0 predictions: 500 records
2025-04-08/15:51:55		Saving prediction results...
2025-04-08/15:51:55		Predictions saved to Prediction_Output_File/Predictions.csv
2025-04-08/15:51:55		=== Prediction Completed Successfully ===
2025-04-08/15:59:24		Start of Validation on files for prediction!!
2025-04-08/15:59:24		Raw Data Validation Complete!!
2025-04-08/15:59:24		Starting Data Transforamtion!!
2025-04-08/15:59:24		DataTransformation Completed!!!
2025-04-08/15:59:24		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/15:59:26		Table creation Completed!!
2025-04-08/15:59:26		Insertion of Data into Table started!!!!
2025-04-08/15:59:46		Insertion in Table completed!!!
2025-04-08/15:59:46		Deleting Good Data Folder!!!
2025-04-08/15:59:46		Good_Data folder deleted!!!
2025-04-08/15:59:46		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/15:59:46		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/15:59:46		Validation Operation completed!!
2025-04-08/15:59:46		Extracting csv file from table
2025-04-08/15:59:46		=== Starting Prediction Process ===
2025-04-08/15:59:46		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/15:59:46		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/15:59:46		Loading data...
2025-04-08/15:59:46		Entered the get_data method of the Data_Getter class
2025-04-08/15:59:46		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/15:59:46		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/15:59:46		Data shape: (500, 38)
2025-04-08/15:59:46		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/15:59:46		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/15:59:46		Initial data shape: (500, 38)
2025-04-08/15:59:46		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/15:59:46		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/15:59:46		Data shape after dropping columns: (500, 24)
2025-04-08/15:59:46		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/15:59:46		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation', 'insured_relationship']
2025-04-08/15:59:46		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/15:59:46		Entered the is_null_present method of the Preprocessor class
2025-04-08/15:59:46		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/15:59:46		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-08/15:59:46		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/15:59:46		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/15:59:46		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/15:59:46		Encoding categorical columns...
2025-04-08/15:59:46		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/15:59:46		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/15:59:46		Entered the oneHotEncoding method of the Preprocessor class
2025-04-08/15:59:46		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-08/15:59:46		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/15:59:46		Scaling numerical columns...
2025-04-08/15:59:46		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/15:59:46		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/15:59:46		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-08/15:59:46		Loading KMeans model...
2025-04-08/15:59:46		Entered the load_model method of the File_Operation class
2025-04-08/15:59:46		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/15:59:46		KMeans model loaded successfully
2025-04-08/15:59:46		Columns being fed to the model Index(['policy_csl', 'insured_sex', 'insured_education_level',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_occupation_armed-forces', 'insured_occupation_craft-repair',
       'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving',
       'insured_relationship_not-in-family',
       'insured_relationship_other-relative', 'insured_relationship_own-child',
       'insured_relationship_unmarried', 'insured_relationship_wife',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'collision_type_Rear Collision',
       'collision_type_Side Collision', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'months_as_customer', 'policy_deductable', 'policy_annual_premium',
       'umbrella_limit', 'capital-gains', 'capital-loss',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'bodily_injuries', 'witnesses', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/15:59:46		Predicting clusters...
2025-04-08/15:59:47		Found clusters: [0]
2025-04-08/15:59:47		Processing cluster 0...
2025-04-08/15:59:47		Entered the find_correct_model_file method of the File_Operation class
2025-04-08/15:59:47		Exited the find_correct_model_file method of the Model_Finder class.
2025-04-08/15:59:47		Loading model: XGBoost0
2025-04-08/15:59:47		Entered the load_model method of the File_Operation class
2025-04-08/15:59:47		Model File XGBoost0 loaded. Exited the load_model method of the Model_Finder class
2025-04-08/15:59:47		Cluster 0 predictions: 500 records
2025-04-08/15:59:47		Saving prediction results...
2025-04-08/15:59:47		Predictions saved to Prediction_Output_File/Predictions.csv
2025-04-08/15:59:47		=== Prediction Completed Successfully ===
2025-04-08/16:01:56		Start of Validation on files for prediction!!
2025-04-08/16:01:56		Raw Data Validation Complete!!
2025-04-08/16:01:56		Starting Data Transforamtion!!
2025-04-08/16:01:56		DataTransformation Completed!!!
2025-04-08/16:01:56		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/16:01:57		Table creation Completed!!
2025-04-08/16:01:57		Insertion of Data into Table started!!!!
2025-04-08/16:02:19		Insertion in Table completed!!!
2025-04-08/16:02:19		Deleting Good Data Folder!!!
2025-04-08/16:02:19		Good_Data folder deleted!!!
2025-04-08/16:02:19		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/16:02:19		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/16:02:19		Validation Operation completed!!
2025-04-08/16:02:19		Extracting csv file from table
2025-04-08/16:02:19		=== Starting Prediction Process ===
2025-04-08/16:02:19		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/16:02:19		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/16:02:19		Loading data...
2025-04-08/16:02:19		Entered the get_data method of the Data_Getter class
2025-04-08/16:02:19		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/16:02:19		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/16:02:19		Data shape: (500, 38)
2025-04-08/16:02:19		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/16:02:19		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/16:02:19		Initial data shape: (500, 38)
2025-04-08/16:02:19		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/16:02:19		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/16:02:19		Data shape after dropping columns: (500, 24)
2025-04-08/16:02:19		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/16:02:19		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation', 'insured_relationship']
2025-04-08/16:02:19		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/16:02:19		Entered the is_null_present method of the Preprocessor class
2025-04-08/16:02:19		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/16:02:19		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-08/16:02:19		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/16:02:19		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/16:02:19		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/16:02:19		Encoding categorical columns...
2025-04-08/16:02:19		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/16:02:19		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/16:02:19		Entered the oneHotEncoding method of the Preprocessor class
2025-04-08/16:02:19		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-08/16:02:19		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/16:02:19		Scaling numerical columns...
2025-04-08/16:02:19		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/16:02:19		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/16:02:19		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-08/16:02:19		Loading KMeans model...
2025-04-08/16:02:19		Entered the load_model method of the File_Operation class
2025-04-08/16:02:19		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/16:02:19		KMeans model loaded successfully
2025-04-08/16:02:19		Columns being fed to the model Index(['policy_csl', 'insured_sex', 'insured_education_level',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_occupation_armed-forces', 'insured_occupation_craft-repair',
       'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving',
       'insured_relationship_not-in-family',
       'insured_relationship_other-relative', 'insured_relationship_own-child',
       'insured_relationship_unmarried', 'insured_relationship_wife',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'collision_type_Rear Collision',
       'collision_type_Side Collision', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'months_as_customer', 'policy_deductable', 'policy_annual_premium',
       'umbrella_limit', 'capital-gains', 'capital-loss',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'bodily_injuries', 'witnesses', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/16:02:19		Predicting clusters...
2025-04-08/16:02:19		Found clusters: [0]
2025-04-08/16:02:19		Processing cluster 0...
2025-04-08/16:02:19		Entered the find_correct_model_file method of the File_Operation class
2025-04-08/16:02:19		Exited the find_correct_model_file method of the Model_Finder class.
2025-04-08/16:02:19		Loading model: XGBoost0
2025-04-08/16:02:19		Entered the load_model method of the File_Operation class
2025-04-08/16:02:19		Model File XGBoost0 loaded. Exited the load_model method of the Model_Finder class
2025-04-08/16:02:19		Cluster 0 predictions: 500 records
2025-04-08/16:02:19		Saving prediction results...
2025-04-08/16:02:19		Predictions saved to Prediction_Output_File/Predictions.csv
2025-04-08/16:02:19		=== Prediction Completed Successfully ===
2025-04-08/16:50:04		Start of Validation on files for prediction!!
2025-04-08/16:50:04		Raw Data Validation Complete!!
2025-04-08/16:50:04		Starting Data Transforamtion!!
2025-04-08/16:50:04		DataTransformation Completed!!!
2025-04-08/16:50:04		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/16:50:07		Table creation Completed!!
2025-04-08/16:50:07		Insertion of Data into Table started!!!!
2025-04-08/16:50:28		Insertion in Table completed!!!
2025-04-08/16:50:28		Deleting Good Data Folder!!!
2025-04-08/16:50:28		Good_Data folder deleted!!!
2025-04-08/16:50:28		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/16:50:28		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/16:50:28		Validation Operation completed!!
2025-04-08/16:50:28		Extracting csv file from table
2025-04-08/16:50:28		=== Starting Prediction Process ===
2025-04-08/16:50:28		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/16:50:28		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/16:50:28		Loading data...
2025-04-08/16:50:28		Entered the get_data method of the Data_Getter class
2025-04-08/16:50:28		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/16:50:28		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/16:50:28		Data shape: (500, 38)
2025-04-08/16:50:28		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/16:50:28		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/16:50:28		Initial data shape: (500, 38)
2025-04-08/16:50:28		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/16:50:28		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/16:50:28		Data shape after dropping columns: (500, 24)
2025-04-08/16:50:28		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/16:50:28		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation', 'insured_relationship']
2025-04-08/16:50:28		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/16:50:28		Entered the is_null_present method of the Preprocessor class
2025-04-08/16:50:28		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/16:50:28		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-08/16:50:28		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/16:50:28		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/16:50:28		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/16:50:28		Encoding categorical columns...
2025-04-08/16:50:28		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/16:50:28		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/16:50:28		Entered the oneHotEncoding method of the Preprocessor class
2025-04-08/16:50:28		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-08/16:50:28		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/16:50:28		Scaling numerical columns...
2025-04-08/16:50:28		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/16:50:28		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/16:50:28		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-08/16:50:28		Loading KMeans model...
2025-04-08/16:50:28		Entered the load_model method of the File_Operation class
2025-04-08/16:50:28		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/16:50:28		KMeans model loaded successfully
2025-04-08/16:50:28		Columns being fed to the model Index(['policy_csl', 'insured_sex', 'insured_education_level',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_occupation_armed-forces', 'insured_occupation_craft-repair',
       'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving',
       'insured_relationship_not-in-family',
       'insured_relationship_other-relative', 'insured_relationship_own-child',
       'insured_relationship_unmarried', 'insured_relationship_wife',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'collision_type_Rear Collision',
       'collision_type_Side Collision', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'months_as_customer', 'policy_deductable', 'policy_annual_premium',
       'umbrella_limit', 'capital-gains', 'capital-loss',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'bodily_injuries', 'witnesses', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/16:50:28		Predicting clusters...
2025-04-08/16:50:29		Found clusters: [0]
2025-04-08/16:50:29		Processing cluster 0...
2025-04-08/16:50:29		Entered the find_correct_model_file method of the File_Operation class
2025-04-08/16:50:29		Exited the find_correct_model_file method of the Model_Finder class.
2025-04-08/16:50:29		Loading model: XGBoost0
2025-04-08/16:50:29		Entered the load_model method of the File_Operation class
2025-04-08/16:50:29		Model File XGBoost0 loaded. Exited the load_model method of the Model_Finder class
2025-04-08/16:50:29		Cluster 0 predictions: 500 records
2025-04-08/16:50:29		Saving prediction results...
2025-04-08/16:50:29		Predictions saved to Prediction_Output_File/Predictions.csv
2025-04-08/16:50:29		=== Prediction Completed Successfully ===
2025-04-08/16:55:47		Start of Validation on files for prediction!!
2025-04-08/16:55:47		Raw Data Validation Complete!!
2025-04-08/16:55:47		Starting Data Transforamtion!!
2025-04-08/16:55:47		DataTransformation Completed!!!
2025-04-08/16:55:47		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/16:55:49		Table creation Completed!!
2025-04-08/16:55:49		Insertion of Data into Table started!!!!
2025-04-08/16:56:11		Insertion in Table completed!!!
2025-04-08/16:56:11		Deleting Good Data Folder!!!
2025-04-08/16:56:11		Good_Data folder deleted!!!
2025-04-08/16:56:11		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/16:56:11		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/16:56:11		Validation Operation completed!!
2025-04-08/16:56:11		Extracting csv file from table
2025-04-08/16:56:11		=== Starting Prediction Process ===
2025-04-08/16:56:11		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/16:56:11		Model directory contents: ['KMeans', 'XGBoost0', 'XGBoost1']
2025-04-08/16:56:11		Loading data...
2025-04-08/16:56:11		Entered the get_data method of the Data_Getter class
2025-04-08/16:56:11		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/16:56:11		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/16:56:11		Data shape: (500, 38)
2025-04-08/16:56:11		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/16:56:11		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/16:56:11		Initial data shape: (500, 38)
2025-04-08/16:56:11		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/16:56:11		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/16:56:11		Data shape after dropping columns: (500, 24)
2025-04-08/16:56:11		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/16:56:11		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation', 'insured_relationship']
2025-04-08/16:56:11		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/16:56:11		Entered the is_null_present method of the Preprocessor class
2025-04-08/16:56:11		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/16:56:11		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-08/16:56:11		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/16:56:11		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/16:56:11		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/16:56:11		Encoding categorical columns...
2025-04-08/16:56:11		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/16:56:11		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/16:56:11		Entered the oneHotEncoding method of the Preprocessor class
2025-04-08/16:56:11		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-08/16:56:11		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/16:56:11		Scaling numerical columns...
2025-04-08/16:56:11		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/16:56:11		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/16:56:11		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-08/16:56:11		Loading KMeans model...
2025-04-08/16:56:11		Entered the load_model method of the File_Operation class
2025-04-08/16:56:11		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/16:56:11		KMeans model loaded successfully
2025-04-08/16:56:11		Columns being fed to the model Index(['policy_csl', 'insured_sex', 'insured_education_level',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_occupation_armed-forces', 'insured_occupation_craft-repair',
       'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving',
       'insured_relationship_not-in-family',
       'insured_relationship_other-relative', 'insured_relationship_own-child',
       'insured_relationship_unmarried', 'insured_relationship_wife',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'collision_type_Rear Collision',
       'collision_type_Side Collision', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'months_as_customer', 'policy_deductable', 'policy_annual_premium',
       'umbrella_limit', 'capital-gains', 'capital-loss',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'bodily_injuries', 'witnesses', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/16:56:11		Predicting clusters...
2025-04-08/16:56:11		Found clusters: [0]
2025-04-08/16:56:11		Processing cluster 0...
2025-04-08/16:56:11		Entered the find_correct_model_file method of the File_Operation class
2025-04-08/16:56:11		Exited the find_correct_model_file method of the Model_Finder class.
2025-04-08/16:56:11		Loading model: XGBoost0
2025-04-08/16:56:11		Entered the load_model method of the File_Operation class
2025-04-08/16:56:11		Model File XGBoost0 loaded. Exited the load_model method of the Model_Finder class
2025-04-08/16:56:12		Cluster 0 predictions: 500 records
2025-04-08/16:56:12		Saving prediction results...
2025-04-08/16:56:12		Predictions saved to Prediction_Output_File/Predictions.csv
2025-04-08/16:56:12		=== Prediction Completed Successfully ===
2025-04-08/18:03:11		Start of Validation on files for prediction!!
2025-04-08/18:03:12		Raw Data Validation Complete!!
2025-04-08/18:03:12		Starting Data Transforamtion!!
2025-04-08/18:03:12		DataTransformation Completed!!!
2025-04-08/18:03:12		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/18:03:13		Table creation Completed!!
2025-04-08/18:03:13		Insertion of Data into Table started!!!!
2025-04-08/18:03:35		Insertion in Table completed!!!
2025-04-08/18:03:35		Deleting Good Data Folder!!!
2025-04-08/18:03:35		Good_Data folder deleted!!!
2025-04-08/18:03:35		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/18:03:35		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/18:03:35		Validation Operation completed!!
2025-04-08/18:03:35		Extracting csv file from table
2025-04-08/18:03:35		=== Starting Prediction Process ===
2025-04-08/18:03:35		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/18:03:35		Model directory contents: ['KMeans', 'XGBoost1', 'XGBoost0']
2025-04-08/18:03:35		Loading data...
2025-04-08/18:03:35		Entered the get_data method of the Data_Getter class
2025-04-08/18:03:35		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/18:03:35		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/18:03:35		Data shape: (500, 38)
2025-04-08/18:03:35		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/18:03:35		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/18:03:35		Initial data shape: (500, 38)
2025-04-08/18:03:35		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/18:03:35		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/18:03:35		Data shape after dropping columns: (500, 24)
2025-04-08/18:03:35		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/18:03:35		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation', 'insured_relationship']
2025-04-08/18:03:35		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/18:03:35		Entered the is_null_present method of the Preprocessor class
2025-04-08/18:03:35		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/18:03:35		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-08/18:03:35		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/18:03:35		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/18:03:35		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/18:03:35		Encoding categorical columns...
2025-04-08/18:03:35		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/18:03:35		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/18:03:35		Entered the oneHotEncoding method of the Preprocessor class
2025-04-08/18:03:35		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-08/18:03:35		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/18:03:35		Scaling numerical columns...
2025-04-08/18:03:35		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/18:03:35		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/18:03:35		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-08/18:03:35		Loading KMeans model...
2025-04-08/18:03:35		Entered the load_model method of the File_Operation class
2025-04-08/18:03:35		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/18:03:35		KMeans model loaded successfully
2025-04-08/18:03:35		Columns being fed to the model Index(['policy_csl', 'insured_sex', 'insured_education_level',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_occupation_armed-forces', 'insured_occupation_craft-repair',
       'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving',
       'insured_relationship_not-in-family',
       'insured_relationship_other-relative', 'insured_relationship_own-child',
       'insured_relationship_unmarried', 'insured_relationship_wife',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'collision_type_Rear Collision',
       'collision_type_Side Collision', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'months_as_customer', 'policy_deductable', 'policy_annual_premium',
       'umbrella_limit', 'capital-gains', 'capital-loss',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'bodily_injuries', 'witnesses', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/18:03:35		Predicting clusters...
2025-04-08/18:03:35		Found clusters: [1]
2025-04-08/18:03:35		Processing cluster 1...
2025-04-08/18:03:35		Entered the find_correct_model_file method of the File_Operation class
2025-04-08/18:03:35		Exited the find_correct_model_file method of the Model_Finder class.
2025-04-08/18:03:35		Loading model: XGBoost1
2025-04-08/18:03:35		Entered the load_model method of the File_Operation class
2025-04-08/18:03:35		Model File XGBoost1 loaded. Exited the load_model method of the Model_Finder class
2025-04-08/18:03:35		Cluster 1 predictions: 500 records
2025-04-08/18:03:35		Saving prediction results...
2025-04-08/18:03:35		Predictions saved to Prediction_Output_File/Predictions.csv
2025-04-08/18:03:35		=== Prediction Completed Successfully ===
2025-04-08/18:12:24		Start of Validation on files for prediction!!
2025-04-08/18:12:24		Raw Data Validation Complete!!
2025-04-08/18:12:24		Starting Data Transforamtion!!
2025-04-08/18:12:24		DataTransformation Completed!!!
2025-04-08/18:12:24		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/18:12:26		Table creation Completed!!
2025-04-08/18:12:26		Insertion of Data into Table started!!!!
2025-04-08/18:12:48		Insertion in Table completed!!!
2025-04-08/18:12:48		Deleting Good Data Folder!!!
2025-04-08/18:12:48		Good_Data folder deleted!!!
2025-04-08/18:12:48		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/18:12:48		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/18:12:48		Validation Operation completed!!
2025-04-08/18:12:48		Extracting csv file from table
2025-04-08/18:12:48		=== Starting Prediction Process ===
2025-04-08/18:12:48		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/18:12:48		Model directory contents: ['KMeans', 'XGBoost1', 'XGBoost0']
2025-04-08/18:12:48		Loading data...
2025-04-08/18:12:48		Entered the get_data method of the Data_Getter class
2025-04-08/18:12:48		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/18:12:48		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/18:12:48		Data shape: (500, 38)
2025-04-08/18:12:48		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/18:12:48		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/18:12:48		Initial data shape: (500, 38)
2025-04-08/18:12:48		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/18:12:48		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/18:12:48		Data shape after dropping columns: (500, 24)
2025-04-08/18:12:48		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/18:12:48		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation', 'insured_relationship']
2025-04-08/18:12:48		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/18:12:48		Entered the is_null_present method of the Preprocessor class
2025-04-08/18:12:48		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/18:12:48		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-08/18:12:48		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/18:12:48		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/18:12:48		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/18:12:48		Encoding categorical columns...
2025-04-08/18:12:48		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/18:12:48		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/18:12:48		Entered the oneHotEncoding method of the Preprocessor class
2025-04-08/18:12:48		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-08/18:12:48		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/18:12:48		Scaling numerical columns...
2025-04-08/18:12:48		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/18:12:48		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/18:12:48		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-08/18:12:48		Loading KMeans model...
2025-04-08/18:12:48		Entered the load_model method of the File_Operation class
2025-04-08/18:12:48		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/18:12:48		KMeans model loaded successfully
2025-04-08/18:12:48		Columns being fed to the model Index(['policy_csl', 'insured_sex', 'insured_education_level',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_occupation_armed-forces', 'insured_occupation_craft-repair',
       'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving',
       'insured_relationship_not-in-family',
       'insured_relationship_other-relative', 'insured_relationship_own-child',
       'insured_relationship_unmarried', 'insured_relationship_wife',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'collision_type_Rear Collision',
       'collision_type_Side Collision', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'months_as_customer', 'policy_deductable', 'policy_annual_premium',
       'umbrella_limit', 'capital-gains', 'capital-loss',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'bodily_injuries', 'witnesses', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/18:12:48		Predicting clusters...
2025-04-08/18:12:48		Found clusters: [1]
2025-04-08/18:12:48		Processing cluster 1...
2025-04-08/18:12:48		Entered the find_correct_model_file method of the File_Operation class
2025-04-08/18:12:48		Exited the find_correct_model_file method of the Model_Finder class.
2025-04-08/18:12:48		Loading model: XGBoost1
2025-04-08/18:12:48		Entered the load_model method of the File_Operation class
2025-04-08/18:12:48		Model File XGBoost1 loaded. Exited the load_model method of the Model_Finder class
2025-04-08/18:12:48		Cluster 1 predictions: 500 records
2025-04-08/18:12:48		Saving prediction results...
2025-04-08/18:12:48		Predictions saved to Prediction_Output_File/Predictions.csv
2025-04-08/18:12:48		=== Prediction Completed Successfully ===
2025-04-08/18:14:14		Start of Validation on files for prediction!!
2025-04-08/18:14:14		Raw Data Validation Complete!!
2025-04-08/18:14:14		Starting Data Transforamtion!!
2025-04-08/18:14:14		DataTransformation Completed!!!
2025-04-08/18:14:14		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/18:14:16		Table creation Completed!!
2025-04-08/18:14:16		Insertion of Data into Table started!!!!
2025-04-08/18:14:38		Insertion in Table completed!!!
2025-04-08/18:14:38		Deleting Good Data Folder!!!
2025-04-08/18:14:38		Good_Data folder deleted!!!
2025-04-08/18:14:38		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/18:14:38		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/18:14:38		Validation Operation completed!!
2025-04-08/18:14:38		Extracting csv file from table
2025-04-08/18:14:38		=== Starting Prediction Process ===
2025-04-08/18:14:38		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/18:14:38		Model directory contents: ['KMeans', 'XGBoost1', 'XGBoost0']
2025-04-08/18:14:38		Loading data...
2025-04-08/18:14:38		Entered the get_data method of the Data_Getter class
2025-04-08/18:14:38		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/18:14:38		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/18:14:38		Data shape: (500, 38)
2025-04-08/18:14:38		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/18:14:38		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/18:14:38		Initial data shape: (500, 38)
2025-04-08/18:14:38		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/18:14:38		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/18:14:38		Data shape after dropping columns: (500, 24)
2025-04-08/18:14:38		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/18:14:38		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation', 'insured_relationship']
2025-04-08/18:14:38		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/18:14:38		Entered the is_null_present method of the Preprocessor class
2025-04-08/18:14:38		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/18:14:38		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-08/18:14:38		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/18:14:38		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/18:14:38		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/18:14:38		Encoding categorical columns...
2025-04-08/18:14:38		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/18:14:38		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/18:14:38		Entered the oneHotEncoding method of the Preprocessor class
2025-04-08/18:14:38		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-08/18:14:38		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/18:14:38		Scaling numerical columns...
2025-04-08/18:14:38		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/18:14:38		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/18:14:38		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-08/18:14:38		Loading KMeans model...
2025-04-08/18:14:38		Entered the load_model method of the File_Operation class
2025-04-08/18:14:38		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/18:14:38		KMeans model loaded successfully
2025-04-08/18:14:38		Columns being fed to the model Index(['policy_csl', 'insured_sex', 'insured_education_level',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_occupation_armed-forces', 'insured_occupation_craft-repair',
       'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving',
       'insured_relationship_not-in-family',
       'insured_relationship_other-relative', 'insured_relationship_own-child',
       'insured_relationship_unmarried', 'insured_relationship_wife',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'collision_type_Rear Collision',
       'collision_type_Side Collision', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'months_as_customer', 'policy_deductable', 'policy_annual_premium',
       'umbrella_limit', 'capital-gains', 'capital-loss',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'bodily_injuries', 'witnesses', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/18:14:38		Predicting clusters...
2025-04-08/18:14:38		Found clusters: [1]
2025-04-08/18:14:38		Processing cluster 1...
2025-04-08/18:14:38		Entered the find_correct_model_file method of the File_Operation class
2025-04-08/18:14:38		Exited the find_correct_model_file method of the Model_Finder class.
2025-04-08/18:14:38		Loading model: XGBoost1
2025-04-08/18:14:38		Entered the load_model method of the File_Operation class
2025-04-08/18:14:38		Model File XGBoost1 loaded. Exited the load_model method of the Model_Finder class
2025-04-08/18:14:38		Cluster 1 predictions: 500 records
2025-04-08/18:14:38		Saving prediction results...
2025-04-08/18:14:38		Predictions saved to Prediction_Output_File/Predictions.csv
2025-04-08/18:14:38		=== Prediction Completed Successfully ===
2025-04-08/18:20:19		Start of Validation on files for prediction!!
2025-04-08/18:20:19		Raw Data Validation Complete!!
2025-04-08/18:20:19		Starting Data Transforamtion!!
2025-04-08/18:20:19		DataTransformation Completed!!!
2025-04-08/18:20:19		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/18:20:21		Table creation Completed!!
2025-04-08/18:20:21		Insertion of Data into Table started!!!!
2025-04-08/18:20:43		Insertion in Table completed!!!
2025-04-08/18:20:43		Deleting Good Data Folder!!!
2025-04-08/18:20:43		Good_Data folder deleted!!!
2025-04-08/18:20:43		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/18:20:43		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/18:20:43		Validation Operation completed!!
2025-04-08/18:20:43		Extracting csv file from table
2025-04-08/18:20:43		=== Starting Prediction Process ===
2025-04-08/18:20:43		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/18:20:43		Model directory contents: ['KMeans', 'XGBoost1', 'XGBoost0']
2025-04-08/18:20:43		Loading data...
2025-04-08/18:20:43		Entered the get_data method of the Data_Getter class
2025-04-08/18:20:43		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/18:20:43		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/18:20:43		Data shape: (500, 38)
2025-04-08/18:20:43		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/18:20:43		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/18:20:43		Initial data shape: (500, 38)
2025-04-08/18:20:43		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/18:20:43		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/18:20:43		Data shape after dropping columns: (500, 24)
2025-04-08/18:20:43		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/18:20:43		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation', 'insured_relationship']
2025-04-08/18:20:43		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/18:20:43		Entered the is_null_present method of the Preprocessor class
2025-04-08/18:20:43		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/18:20:43		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-08/18:20:43		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/18:20:43		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/18:20:43		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/18:20:43		Encoding categorical columns...
2025-04-08/18:20:43		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/18:20:43		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/18:20:43		Entered the oneHotEncoding method of the Preprocessor class
2025-04-08/18:20:43		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-08/18:20:43		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/18:20:43		Scaling numerical columns...
2025-04-08/18:20:43		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/18:20:43		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/18:20:43		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-08/18:20:43		Loading KMeans model...
2025-04-08/18:20:43		Entered the load_model method of the File_Operation class
2025-04-08/18:20:43		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/18:20:43		KMeans model loaded successfully
2025-04-08/18:20:43		Columns being fed to the model Index(['policy_csl', 'insured_sex', 'insured_education_level',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_occupation_armed-forces', 'insured_occupation_craft-repair',
       'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving',
       'insured_relationship_not-in-family',
       'insured_relationship_other-relative', 'insured_relationship_own-child',
       'insured_relationship_unmarried', 'insured_relationship_wife',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'collision_type_Rear Collision',
       'collision_type_Side Collision', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'months_as_customer', 'policy_deductable', 'policy_annual_premium',
       'umbrella_limit', 'capital-gains', 'capital-loss',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'bodily_injuries', 'witnesses', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/18:20:43		Predicting clusters...
2025-04-08/18:20:43		Found clusters: [1]
2025-04-08/18:20:43		Processing cluster 1...
2025-04-08/18:20:43		Entered the find_correct_model_file method of the File_Operation class
2025-04-08/18:20:43		Exited the find_correct_model_file method of the Model_Finder class.
2025-04-08/18:20:43		Loading model: XGBoost1
2025-04-08/18:20:43		Entered the load_model method of the File_Operation class
2025-04-08/18:20:43		Model File XGBoost1 loaded. Exited the load_model method of the Model_Finder class
2025-04-08/18:20:43		Cluster 1 predictions: 500 records
2025-04-08/18:20:43		Saving prediction results...
2025-04-08/18:20:43		Predictions saved to Prediction_Output_File/Predictions.csv
2025-04-08/18:20:43		=== Prediction Completed Successfully ===
2025-04-08/18:24:08		Start of Validation on files for prediction!!
2025-04-08/18:24:09		Raw Data Validation Complete!!
2025-04-08/18:24:09		Starting Data Transforamtion!!
2025-04-08/18:24:09		DataTransformation Completed!!!
2025-04-08/18:24:09		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/18:24:10		Table creation Completed!!
2025-04-08/18:24:10		Insertion of Data into Table started!!!!
2025-04-08/18:24:32		Insertion in Table completed!!!
2025-04-08/18:24:32		Deleting Good Data Folder!!!
2025-04-08/18:24:32		Good_Data folder deleted!!!
2025-04-08/18:24:32		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/18:24:32		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/18:24:32		Validation Operation completed!!
2025-04-08/18:24:32		Extracting csv file from table
2025-04-08/18:24:33		=== Starting Prediction Process ===
2025-04-08/18:24:33		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/18:24:33		Model directory contents: ['KMeans', 'XGBoost1', 'XGBoost0']
2025-04-08/18:24:33		Loading data...
2025-04-08/18:24:33		Entered the get_data method of the Data_Getter class
2025-04-08/18:24:33		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/18:24:33		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/18:24:33		Data shape: (500, 38)
2025-04-08/18:24:33		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/18:24:33		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/18:24:33		Initial data shape: (500, 38)
2025-04-08/18:24:33		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/18:24:33		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/18:24:33		Data shape after dropping columns: (500, 24)
2025-04-08/18:24:33		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/18:24:33		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation', 'insured_relationship']
2025-04-08/18:24:33		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/18:24:33		Entered the is_null_present method of the Preprocessor class
2025-04-08/18:24:33		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/18:24:33		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-08/18:24:33		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/18:24:33		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/18:24:33		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/18:24:33		Encoding categorical columns...
2025-04-08/18:24:33		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/18:24:33		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/18:24:33		Entered the oneHotEncoding method of the Preprocessor class
2025-04-08/18:24:33		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-08/18:24:33		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/18:24:33		Scaling numerical columns...
2025-04-08/18:24:33		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/18:24:33		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/18:24:33		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-08/18:24:33		Loading KMeans model...
2025-04-08/18:24:33		Entered the load_model method of the File_Operation class
2025-04-08/18:24:33		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/18:24:33		KMeans model loaded successfully
2025-04-08/18:24:33		Columns being fed to the model Index(['policy_csl', 'insured_sex', 'insured_education_level',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_occupation_armed-forces', 'insured_occupation_craft-repair',
       'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving',
       'insured_relationship_not-in-family',
       'insured_relationship_other-relative', 'insured_relationship_own-child',
       'insured_relationship_unmarried', 'insured_relationship_wife',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'collision_type_Rear Collision',
       'collision_type_Side Collision', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'months_as_customer', 'policy_deductable', 'policy_annual_premium',
       'umbrella_limit', 'capital-gains', 'capital-loss',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'bodily_injuries', 'witnesses', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/18:24:33		Predicting clusters...
2025-04-08/18:24:33		Found clusters: [1]
2025-04-08/18:24:33		Processing cluster 1...
2025-04-08/18:24:33		Entered the find_correct_model_file method of the File_Operation class
2025-04-08/18:24:33		Exited the find_correct_model_file method of the Model_Finder class.
2025-04-08/18:24:33		Loading model: XGBoost1
2025-04-08/18:24:33		Entered the load_model method of the File_Operation class
2025-04-08/18:24:33		Model File XGBoost1 loaded. Exited the load_model method of the Model_Finder class
2025-04-08/18:24:33		Cluster 1 predictions: 500 records
2025-04-08/18:24:33		Saving prediction results...
2025-04-08/18:24:33		Predictions saved to Prediction_Output_File/Predictions.csv
2025-04-08/18:24:33		=== Prediction Completed Successfully ===
2025-04-08/18:32:36		Start of Validation on files for prediction!!
2025-04-08/18:32:36		Raw Data Validation Complete!!
2025-04-08/18:32:36		Starting Data Transforamtion!!
2025-04-08/18:32:36		DataTransformation Completed!!!
2025-04-08/18:32:36		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/18:32:38		Table creation Completed!!
2025-04-08/18:32:38		Insertion of Data into Table started!!!!
2025-04-08/18:33:00		Insertion in Table completed!!!
2025-04-08/18:33:00		Deleting Good Data Folder!!!
2025-04-08/18:33:00		Good_Data folder deleted!!!
2025-04-08/18:33:00		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/18:33:00		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/18:33:00		Validation Operation completed!!
2025-04-08/18:33:00		Extracting csv file from table
2025-04-08/18:33:00		=== Starting Prediction Process ===
2025-04-08/18:33:00		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/18:33:00		Model directory contents: ['KMeans', 'XGBoost1', 'XGBoost0']
2025-04-08/18:33:00		Loading data...
2025-04-08/18:33:00		Entered the get_data method of the Data_Getter class
2025-04-08/18:33:00		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/18:33:00		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/18:33:00		Data shape: (500, 38)
2025-04-08/18:33:00		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/18:33:00		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/18:33:00		Initial data shape: (500, 38)
2025-04-08/18:33:00		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/18:33:00		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/18:33:00		Data shape after dropping columns: (500, 24)
2025-04-08/18:33:00		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/18:33:00		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation', 'insured_relationship']
2025-04-08/18:33:00		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/18:33:00		Entered the is_null_present method of the Preprocessor class
2025-04-08/18:33:00		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/18:33:00		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-08/18:33:00		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/18:33:00		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/18:33:00		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/18:33:00		Encoding categorical columns...
2025-04-08/18:33:00		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/18:33:00		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/18:33:00		Entered the oneHotEncoding method of the Preprocessor class
2025-04-08/18:33:00		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-08/18:33:00		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/18:33:00		Scaling numerical columns...
2025-04-08/18:33:00		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/18:33:00		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/18:33:00		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-08/18:33:00		Loading KMeans model...
2025-04-08/18:33:00		Entered the load_model method of the File_Operation class
2025-04-08/18:33:00		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/18:33:00		KMeans model loaded successfully
2025-04-08/18:33:00		Columns being fed to the model Index(['policy_csl', 'insured_sex', 'insured_education_level',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_occupation_armed-forces', 'insured_occupation_craft-repair',
       'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving',
       'insured_relationship_not-in-family',
       'insured_relationship_other-relative', 'insured_relationship_own-child',
       'insured_relationship_unmarried', 'insured_relationship_wife',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'collision_type_Rear Collision',
       'collision_type_Side Collision', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'months_as_customer', 'policy_deductable', 'policy_annual_premium',
       'umbrella_limit', 'capital-gains', 'capital-loss',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'bodily_injuries', 'witnesses', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/18:33:00		Predicting clusters...
2025-04-08/18:33:00		Found clusters: [1]
2025-04-08/18:33:00		Processing cluster 1...
2025-04-08/18:33:00		Entered the find_correct_model_file method of the File_Operation class
2025-04-08/18:33:00		Exited the find_correct_model_file method of the Model_Finder class.
2025-04-08/18:33:00		Loading model: XGBoost1
2025-04-08/18:33:00		Entered the load_model method of the File_Operation class
2025-04-08/18:33:00		Model File XGBoost1 loaded. Exited the load_model method of the Model_Finder class
2025-04-08/18:33:00		Cluster 1 predictions: 500 records
2025-04-08/18:33:00		Saving prediction results...
2025-04-08/18:33:00		Predictions saved to Prediction_Output_File/Predictions.csv
2025-04-08/18:33:00		=== Prediction Completed Successfully ===
2025-04-08/18:36:18		Start of Validation on files for prediction!!
2025-04-08/18:36:18		Raw Data Validation Complete!!
2025-04-08/18:36:18		Starting Data Transforamtion!!
2025-04-08/18:36:18		DataTransformation Completed!!!
2025-04-08/18:36:18		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/18:36:20		Table creation Completed!!
2025-04-08/18:36:20		Insertion of Data into Table started!!!!
2025-04-08/18:36:42		Insertion in Table completed!!!
2025-04-08/18:36:42		Deleting Good Data Folder!!!
2025-04-08/18:36:42		Good_Data folder deleted!!!
2025-04-08/18:36:42		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/18:36:42		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/18:36:42		Validation Operation completed!!
2025-04-08/18:36:42		Extracting csv file from table
2025-04-08/18:36:42		=== Starting Prediction Process ===
2025-04-08/18:36:42		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/18:36:42		Model directory contents: ['KMeans', 'XGBoost1', 'XGBoost0']
2025-04-08/18:36:42		Loading data...
2025-04-08/18:36:42		Entered the get_data method of the Data_Getter class
2025-04-08/18:36:42		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/18:36:42		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/18:36:42		Data shape: (500, 38)
2025-04-08/18:36:42		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/18:36:42		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/18:36:42		Initial data shape: (500, 38)
2025-04-08/18:36:42		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/18:36:42		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/18:36:42		Data shape after dropping columns: (500, 24)
2025-04-08/18:36:42		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/18:36:42		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation', 'insured_relationship']
2025-04-08/18:36:42		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/18:36:42		Entered the is_null_present method of the Preprocessor class
2025-04-08/18:36:42		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/18:36:42		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-08/18:36:42		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/18:36:42		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/18:36:42		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/18:36:42		Encoding categorical columns...
2025-04-08/18:36:42		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/18:36:42		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/18:36:42		Entered the oneHotEncoding method of the Preprocessor class
2025-04-08/18:36:42		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-08/18:36:42		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/18:36:42		Scaling numerical columns...
2025-04-08/18:36:42		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/18:36:42		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/18:36:42		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-08/18:36:42		Loading KMeans model...
2025-04-08/18:36:42		Entered the load_model method of the File_Operation class
2025-04-08/18:36:42		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/18:36:42		KMeans model loaded successfully
2025-04-08/18:36:42		Columns being fed to the model Index(['policy_csl', 'insured_sex', 'insured_education_level',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_occupation_armed-forces', 'insured_occupation_craft-repair',
       'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving',
       'insured_relationship_not-in-family',
       'insured_relationship_other-relative', 'insured_relationship_own-child',
       'insured_relationship_unmarried', 'insured_relationship_wife',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'collision_type_Rear Collision',
       'collision_type_Side Collision', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'months_as_customer', 'policy_deductable', 'policy_annual_premium',
       'umbrella_limit', 'capital-gains', 'capital-loss',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'bodily_injuries', 'witnesses', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/18:36:42		Predicting clusters...
2025-04-08/18:36:42		Found clusters: [1]
2025-04-08/18:36:42		Processing cluster 1...
2025-04-08/18:36:42		Entered the find_correct_model_file method of the File_Operation class
2025-04-08/18:36:42		Exited the find_correct_model_file method of the Model_Finder class.
2025-04-08/18:36:42		Loading model: XGBoost1
2025-04-08/18:36:42		Entered the load_model method of the File_Operation class
2025-04-08/18:36:42		Model File XGBoost1 loaded. Exited the load_model method of the Model_Finder class
2025-04-08/18:36:42		Cluster 1 predictions: 500 records
2025-04-08/18:36:42		Saving prediction results...
2025-04-08/18:36:42		Predictions saved to Prediction_Output_File/Predictions.csv
2025-04-08/18:36:42		=== Prediction Completed Successfully ===
2025-04-08/18:39:21		Start of Validation on files for prediction!!
2025-04-08/18:39:21		Raw Data Validation Complete!!
2025-04-08/18:39:21		Starting Data Transforamtion!!
2025-04-08/18:39:21		DataTransformation Completed!!!
2025-04-08/18:39:21		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/18:39:23		Table creation Completed!!
2025-04-08/18:39:23		Insertion of Data into Table started!!!!
2025-04-08/18:39:45		Insertion in Table completed!!!
2025-04-08/18:39:45		Deleting Good Data Folder!!!
2025-04-08/18:39:45		Good_Data folder deleted!!!
2025-04-08/18:39:45		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/18:39:45		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/18:39:45		Validation Operation completed!!
2025-04-08/18:39:45		Extracting csv file from table
2025-04-08/18:39:45		=== Starting Prediction Process ===
2025-04-08/18:39:45		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/18:39:45		Model directory contents: ['KMeans', 'XGBoost1', 'XGBoost0']
2025-04-08/18:39:45		Loading data...
2025-04-08/18:39:45		Entered the get_data method of the Data_Getter class
2025-04-08/18:39:45		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/18:39:45		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/18:39:45		Data shape: (500, 38)
2025-04-08/18:39:45		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/18:39:45		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/18:39:45		Initial data shape: (500, 38)
2025-04-08/18:39:45		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/18:39:45		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/18:39:45		Data shape after dropping columns: (500, 24)
2025-04-08/18:39:45		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/18:39:45		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation', 'insured_relationship']
2025-04-08/18:39:45		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/18:39:45		Entered the is_null_present method of the Preprocessor class
2025-04-08/18:39:45		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/18:39:45		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-08/18:39:45		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/18:39:45		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/18:39:45		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/18:39:45		Encoding categorical columns...
2025-04-08/18:39:45		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/18:39:45		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/18:39:45		Entered the oneHotEncoding method of the Preprocessor class
2025-04-08/18:39:45		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-08/18:39:45		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/18:39:45		Scaling numerical columns...
2025-04-08/18:39:45		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/18:39:45		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/18:39:45		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-08/18:39:45		Loading KMeans model...
2025-04-08/18:39:45		Entered the load_model method of the File_Operation class
2025-04-08/18:39:45		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/18:39:45		KMeans model loaded successfully
2025-04-08/18:39:45		Columns being fed to the model Index(['policy_csl', 'insured_sex', 'insured_education_level',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_occupation_armed-forces', 'insured_occupation_craft-repair',
       'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving',
       'insured_relationship_not-in-family',
       'insured_relationship_other-relative', 'insured_relationship_own-child',
       'insured_relationship_unmarried', 'insured_relationship_wife',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'collision_type_Rear Collision',
       'collision_type_Side Collision', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'months_as_customer', 'policy_deductable', 'policy_annual_premium',
       'umbrella_limit', 'capital-gains', 'capital-loss',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'bodily_injuries', 'witnesses', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/18:39:45		Predicting clusters...
2025-04-08/18:39:45		Found clusters: [1]
2025-04-08/18:39:45		Processing cluster 1...
2025-04-08/18:39:45		Entered the find_correct_model_file method of the File_Operation class
2025-04-08/18:39:45		Exited the find_correct_model_file method of the Model_Finder class.
2025-04-08/18:39:45		Loading model: XGBoost1
2025-04-08/18:39:45		Entered the load_model method of the File_Operation class
2025-04-08/18:39:45		Model File XGBoost1 loaded. Exited the load_model method of the Model_Finder class
2025-04-08/18:39:45		Cluster 1 predictions: 500 records
2025-04-08/18:39:45		Saving prediction results...
2025-04-08/18:39:45		Predictions saved to Prediction_Output_File/Predictions.csv
2025-04-08/18:39:45		=== Prediction Completed Successfully ===
2025-04-08/18:56:10		Start of Validation on files for prediction!!
2025-04-08/18:56:10		Raw Data Validation Complete!!
2025-04-08/18:56:10		Starting Data Transforamtion!!
2025-04-08/18:56:10		DataTransformation Completed!!!
2025-04-08/18:56:10		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/18:56:12		Table creation Completed!!
2025-04-08/18:56:12		Insertion of Data into Table started!!!!
2025-04-08/18:56:34		Insertion in Table completed!!!
2025-04-08/18:56:34		Deleting Good Data Folder!!!
2025-04-08/18:56:34		Good_Data folder deleted!!!
2025-04-08/18:56:34		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/18:56:34		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/18:56:34		Validation Operation completed!!
2025-04-08/18:56:34		Extracting csv file from table
2025-04-08/18:56:34		=== Starting Prediction Process ===
2025-04-08/18:56:34		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/18:56:34		Model directory contents: ['KMeans', 'XGBoost1', 'XGBoost0']
2025-04-08/18:56:34		Loading data...
2025-04-08/18:56:34		Entered the get_data method of the Data_Getter class
2025-04-08/18:56:34		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/18:56:34		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/18:56:34		After dropping columns data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/18:56:34		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/18:56:34		Entered the is_null_present method of the Preprocessor class
2025-04-08/18:56:34		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/18:56:34		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/18:56:34		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/18:56:34		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/18:56:34		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/18:56:34		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/18:56:34		Entered the oneHotEncoding method of the Preprocessor class
2025-04-08/18:56:34		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-08/18:56:34		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/18:56:34		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/18:56:34		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/18:56:34		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-08/18:56:34		Loading the trained model...
2025-04-08/18:56:34		Error during prediction: name 'best_model_finder_tuner' is not defined
2025-04-08/19:09:39		Start of Validation on files for prediction!!
2025-04-08/19:09:40		Raw Data Validation Complete!!
2025-04-08/19:09:40		Starting Data Transforamtion!!
2025-04-08/19:09:40		DataTransformation Completed!!!
2025-04-08/19:09:40		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/19:09:41		Table creation Completed!!
2025-04-08/19:09:41		Insertion of Data into Table started!!!!
2025-04-08/19:10:03		Insertion in Table completed!!!
2025-04-08/19:10:03		Deleting Good Data Folder!!!
2025-04-08/19:10:03		Good_Data folder deleted!!!
2025-04-08/19:10:03		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/19:10:03		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/19:10:03		Validation Operation completed!!
2025-04-08/19:10:03		Extracting csv file from table
2025-04-08/19:10:03		=== Starting Prediction Process ===
2025-04-08/19:10:03		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/19:10:03		Model directory contents: ['KMeans', 'XGBoost1', 'XGBoost0']
2025-04-08/19:10:03		Loading data...
2025-04-08/19:10:03		Entered the get_data method of the Data_Getter class
2025-04-08/19:10:03		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/19:10:03		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/19:10:03		Data shape: (500, 38)
2025-04-08/19:10:03		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/19:10:03		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/19:10:03		Initial data shape: (500, 38)
2025-04-08/19:10:03		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/19:10:03		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/19:10:03		Data shape after dropping columns: (500, 24)
2025-04-08/19:10:03		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/19:10:03		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation', 'insured_relationship']
2025-04-08/19:10:03		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/19:10:03		Entered the is_null_present method of the Preprocessor class
2025-04-08/19:10:03		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/19:10:03		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-08/19:10:03		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/19:10:03		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/19:10:03		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/19:10:03		Encoding categorical columns...
2025-04-08/19:10:03		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/19:10:03		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/19:10:03		Entered the oneHotEncoding method of the Preprocessor class
2025-04-08/19:10:03		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-08/19:10:03		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/19:10:03		Scaling numerical columns...
2025-04-08/19:10:03		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/19:10:03		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/19:10:03		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-08/19:10:03		Loading KMeans model...
2025-04-08/19:10:03		Entered the load_model method of the File_Operation class
2025-04-08/19:10:03		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/19:10:03		KMeans model loaded successfully
2025-04-08/19:10:03		Columns being fed to the model Index(['policy_csl', 'insured_sex', 'insured_education_level',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_occupation_armed-forces', 'insured_occupation_craft-repair',
       'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving',
       'insured_relationship_not-in-family',
       'insured_relationship_other-relative', 'insured_relationship_own-child',
       'insured_relationship_unmarried', 'insured_relationship_wife',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'collision_type_Rear Collision',
       'collision_type_Side Collision', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'months_as_customer', 'policy_deductable', 'policy_annual_premium',
       'umbrella_limit', 'capital-gains', 'capital-loss',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'bodily_injuries', 'witnesses', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/19:10:03		Predicting clusters...
2025-04-08/19:10:03		Found clusters: [1]
2025-04-08/19:10:03		Processing cluster 1...
2025-04-08/19:10:03		Entered the find_correct_model_file method of the File_Operation class
2025-04-08/19:10:03		Exited the find_correct_model_file method of the Model_Finder class.
2025-04-08/19:10:03		Loading model: XGBoost1
2025-04-08/19:10:03		Entered the load_model method of the File_Operation class
2025-04-08/19:10:03		Model File XGBoost1 loaded. Exited the load_model method of the Model_Finder class
2025-04-08/19:10:03		Cluster 1 predictions: 500 records
2025-04-08/19:10:03		Sample probability scores: [0.11326818 0.17015229 0.1780366  0.24651518 0.24651518]
2025-04-08/19:10:03		Saving prediction results with probabilities...
2025-04-08/19:10:03		Predictions with probabilities saved to Prediction_Output_File/Predictions.csv
2025-04-08/19:10:03		=== Prediction Completed Successfully ===
2025-04-08/19:12:48		Start of Validation on files for prediction!!
2025-04-08/19:12:48		Raw Data Validation Complete!!
2025-04-08/19:12:48		Starting Data Transforamtion!!
2025-04-08/19:12:48		DataTransformation Completed!!!
2025-04-08/19:12:48		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-08/19:12:50		Table creation Completed!!
2025-04-08/19:12:50		Insertion of Data into Table started!!!!
2025-04-08/19:13:12		Insertion in Table completed!!!
2025-04-08/19:13:12		Deleting Good Data Folder!!!
2025-04-08/19:13:12		Good_Data folder deleted!!!
2025-04-08/19:13:12		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-08/19:13:12		Bad files moved to archive!! Bad folder Deleted!!
2025-04-08/19:13:12		Validation Operation completed!!
2025-04-08/19:13:12		Extracting csv file from table
2025-04-08/19:13:12		=== Starting Prediction Process ===
2025-04-08/19:13:12		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-08/19:13:12		Model directory contents: ['KMeans', 'XGBoost1', 'XGBoost0']
2025-04-08/19:13:12		Loading data...
2025-04-08/19:13:12		Entered the get_data method of the Data_Getter class
2025-04-08/19:13:12		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-08/19:13:12		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-08/19:13:12		Data shape: (500, 38)
2025-04-08/19:13:12		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-08/19:13:12		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-08/19:13:12		Initial data shape: (500, 38)
2025-04-08/19:13:12		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-08/19:13:12		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-08/19:13:12		Data shape after dropping columns: (500, 24)
2025-04-08/19:13:12		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/19:13:12		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation', 'insured_relationship']
2025-04-08/19:13:12		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/19:13:12		Entered the is_null_present method of the Preprocessor class
2025-04-08/19:13:12		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-08/19:13:12		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-08/19:13:12		Entered the impute_missing_values method of the Preprocessor class
2025-04-08/19:13:12		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-08/19:13:12		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-08/19:13:12		Encoding categorical columns...
2025-04-08/19:13:12		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-08/19:13:12		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-08/19:13:12		Entered the oneHotEncoding method of the Preprocessor class
2025-04-08/19:13:12		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-08/19:13:12		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-08/19:13:12		Scaling numerical columns...
2025-04-08/19:13:12		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-08/19:13:12		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-08/19:13:12		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-08/19:13:12		Loading KMeans model...
2025-04-08/19:13:12		Entered the load_model method of the File_Operation class
2025-04-08/19:13:12		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-08/19:13:12		KMeans model loaded successfully
2025-04-08/19:13:12		Columns being fed to the model Index(['policy_csl', 'insured_sex', 'insured_education_level',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_occupation_armed-forces', 'insured_occupation_craft-repair',
       'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving',
       'insured_relationship_not-in-family',
       'insured_relationship_other-relative', 'insured_relationship_own-child',
       'insured_relationship_unmarried', 'insured_relationship_wife',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'collision_type_Rear Collision',
       'collision_type_Side Collision', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'months_as_customer', 'policy_deductable', 'policy_annual_premium',
       'umbrella_limit', 'capital-gains', 'capital-loss',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'bodily_injuries', 'witnesses', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-08/19:13:12		Predicting clusters...
2025-04-08/19:13:12		Found clusters: [1]
2025-04-08/19:13:12		Processing cluster 1...
2025-04-08/19:13:12		Entered the find_correct_model_file method of the File_Operation class
2025-04-08/19:13:12		Exited the find_correct_model_file method of the Model_Finder class.
2025-04-08/19:13:12		Loading model: XGBoost1
2025-04-08/19:13:12		Entered the load_model method of the File_Operation class
2025-04-08/19:13:12		Model File XGBoost1 loaded. Exited the load_model method of the Model_Finder class
2025-04-08/19:13:12		Cluster 1 predictions: 500 records
2025-04-08/19:13:12		Sample probability scores: [0.11326818 0.17015229 0.1780366  0.24651518 0.24651518]
2025-04-08/19:13:12		Saving prediction results with probabilities...
2025-04-08/19:13:12		Predictions with probabilities saved to Prediction_Output_File/Predictions.csv
2025-04-08/19:13:12		=== Prediction Completed Successfully ===
2025-04-23/14:01:50		Start of Validation on files for prediction!!
2025-04-23/14:01:50		Raw Data Validation Complete!!
2025-04-23/14:01:50		Starting Data Transforamtion!!
2025-04-23/14:01:50		DataTransformation Completed!!!
2025-04-23/14:01:50		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-23/14:01:52		Table creation Completed!!
2025-04-23/14:01:52		Insertion of Data into Table started!!!!
2025-04-23/14:02:13		Insertion in Table completed!!!
2025-04-23/14:02:13		Deleting Good Data Folder!!!
2025-04-23/14:02:13		Good_Data folder deleted!!!
2025-04-23/14:02:13		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-23/14:02:14		Bad files moved to archive!! Bad folder Deleted!!
2025-04-23/14:02:14		Validation Operation completed!!
2025-04-23/14:02:14		Extracting csv file from table
2025-04-23/14:02:14		=== Starting Prediction Process ===
2025-04-23/14:02:14		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-23/14:02:14		Model directory contents: ['KMeans', 'XGBoost1', 'XGBoost0']
2025-04-23/14:02:14		Loading data...
2025-04-23/14:02:14		Entered the get_data method of the Data_Getter class
2025-04-23/14:02:14		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-23/14:02:14		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-23/14:02:14		Data shape: (500, 38)
2025-04-23/14:02:14		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-23/14:02:14		Data head:
   months_as_customer  age  policy_number  ...  auto_make auto_model auto_year
0                 328   48         521585  ...       Saab        92x      2004
1                 228   42         342868  ...   Mercedes       E400      2007
2                 134   29         687698  ...      Dodge        RAM      2007
3                 256   41         227811  ...  Chevrolet      Tahoe      2014
4                 228   44         367455  ...     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-23/14:02:14		Initial data shape: (500, 38)
2025-04-23/14:02:14		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-23/14:02:14		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-23/14:02:14		Data shape after dropping columns: (500, 24)
2025-04-23/14:02:14		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-23/14:02:14		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation', 'insured_relationship']
2025-04-23/14:02:14		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-23/14:02:14		Entered the is_null_present method of the Preprocessor class
2025-04-23/14:02:14		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-23/14:02:14		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-23/14:02:14		Entered the impute_missing_values method of the Preprocessor class
2025-04-23/14:02:14		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-23/14:02:14		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-23/14:02:14		Encoding categorical columns...
2025-04-23/14:02:14		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-23/14:02:14		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-23/14:02:14		Entered the oneHotEncoding method of the Preprocessor class
2025-04-23/14:02:14		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-23/14:02:14		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-23/14:02:14		Scaling numerical columns...
2025-04-23/14:02:14		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-23/14:02:14		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-23/14:02:14		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-23/14:02:14		Loading KMeans model...
2025-04-23/14:02:14		Entered the load_model method of the File_Operation class
2025-04-23/14:02:14		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-23/14:02:14		KMeans model loaded successfully
2025-04-23/14:02:14		Columns being fed to the model Index(['policy_csl', 'insured_sex', 'insured_education_level',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_occupation_armed-forces', 'insured_occupation_craft-repair',
       'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving',
       'insured_relationship_not-in-family',
       'insured_relationship_other-relative', 'insured_relationship_own-child',
       'insured_relationship_unmarried', 'insured_relationship_wife',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'collision_type_Rear Collision',
       'collision_type_Side Collision', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'months_as_customer', 'policy_deductable', 'policy_annual_premium',
       'umbrella_limit', 'capital-gains', 'capital-loss',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'bodily_injuries', 'witnesses', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-23/14:02:14		Predicting clusters...
2025-04-23/14:02:14		Found clusters: [1]
2025-04-23/14:02:14		Processing cluster 1...
2025-04-23/14:02:14		Entered the find_correct_model_file method of the File_Operation class
2025-04-23/14:02:14		Exited the find_correct_model_file method of the Model_Finder class.
2025-04-23/14:02:14		Loading model: XGBoost1
2025-04-23/14:02:14		Entered the load_model method of the File_Operation class
2025-04-23/14:02:14		Model File XGBoost1 loaded. Exited the load_model method of the Model_Finder class
2025-04-23/14:02:14		Cluster 1 predictions: 500 records
2025-04-23/14:02:14		Sample probability scores: [0.11326818 0.17015229 0.1780366  0.24651518 0.24651518]
2025-04-23/14:02:14		Saving prediction results with probabilities...
2025-04-23/14:02:14		Predictions with probabilities saved to Prediction_Output_File/Predictions.csv
2025-04-23/14:02:14		=== Prediction Completed Successfully ===
2025-04-23/14:12:32		Start of Validation on files for prediction!!
2025-04-23/14:12:32		Raw Data Validation Complete!!
2025-04-23/14:12:32		Starting Data Transforamtion!!
2025-04-23/14:12:32		DataTransformation Completed!!!
2025-04-23/14:12:32		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-23/14:12:34		Table creation Completed!!
2025-04-23/14:12:34		Insertion of Data into Table started!!!!
2025-04-23/14:12:57		Insertion in Table completed!!!
2025-04-23/14:12:57		Deleting Good Data Folder!!!
2025-04-23/14:12:57		Good_Data folder deleted!!!
2025-04-23/14:12:57		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-23/14:12:57		Bad files moved to archive!! Bad folder Deleted!!
2025-04-23/14:12:57		Validation Operation completed!!
2025-04-23/14:12:57		Extracting csv file from table
2025-04-23/14:12:57		=== Starting Prediction Process ===
2025-04-23/14:12:57		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-23/14:12:57		Model directory contents: ['KMeans', 'XGBoost1', 'XGBoost0']
2025-04-23/14:12:57		Loading data...
2025-04-23/14:12:57		Entered the get_data method of the Data_Getter class
2025-04-23/14:12:57		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-23/14:12:57		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-23/14:12:57		Data shape: (500, 38)
2025-04-23/14:12:57		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-23/14:12:57		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-23/14:12:57		Initial data shape: (500, 38)
2025-04-23/14:12:57		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-23/14:12:57		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-23/14:12:57		Data shape after dropping columns: (500, 24)
2025-04-23/14:12:57		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-23/14:12:57		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation', 'insured_relationship']
2025-04-23/14:12:57		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-23/14:12:57		Entered the is_null_present method of the Preprocessor class
2025-04-23/14:12:57		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-23/14:12:57		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-23/14:12:57		Entered the impute_missing_values method of the Preprocessor class
2025-04-23/14:12:57		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-23/14:12:57		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-23/14:12:57		Encoding categorical columns...
2025-04-23/14:12:57		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-23/14:12:57		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-23/14:12:57		Entered the oneHotEncoding method of the Preprocessor class
2025-04-23/14:12:57		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-23/14:12:57		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-23/14:12:57		Scaling numerical columns...
2025-04-23/14:12:57		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-23/14:12:57		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-23/14:12:57		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-23/14:12:57		Loading KMeans model...
2025-04-23/14:12:57		Entered the load_model method of the File_Operation class
2025-04-23/14:12:57		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-23/14:12:57		KMeans model loaded successfully
2025-04-23/14:12:57		Columns being fed to the model Index(['policy_csl', 'insured_sex', 'insured_education_level',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_occupation_armed-forces', 'insured_occupation_craft-repair',
       'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving',
       'insured_relationship_not-in-family',
       'insured_relationship_other-relative', 'insured_relationship_own-child',
       'insured_relationship_unmarried', 'insured_relationship_wife',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'collision_type_Rear Collision',
       'collision_type_Side Collision', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'months_as_customer', 'policy_deductable', 'policy_annual_premium',
       'umbrella_limit', 'capital-gains', 'capital-loss',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'bodily_injuries', 'witnesses', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-23/14:12:57		Predicting clusters...
2025-04-23/14:12:57		Found clusters: [1]
2025-04-23/14:12:57		Processing cluster 1...
2025-04-23/14:12:57		Entered the find_correct_model_file method of the File_Operation class
2025-04-23/14:12:57		Exited the find_correct_model_file method of the Model_Finder class.
2025-04-23/14:12:57		Loading model: XGBoost1
2025-04-23/14:12:57		Entered the load_model method of the File_Operation class
2025-04-23/14:12:57		Model File XGBoost1 loaded. Exited the load_model method of the Model_Finder class
2025-04-23/14:12:57		Cluster 1 predictions: 500 records
2025-04-23/14:12:57		Sample probability scores: [0.11326818 0.17015229 0.1780366  0.24651518 0.24651518]
2025-04-23/14:12:57		Saving prediction results with probabilities...
2025-04-23/14:12:57		Predictions with probabilities saved to Prediction_Output_File/Predictions.csv
2025-04-23/14:12:57		=== Prediction Completed Successfully ===
2025-04-23/14:20:03		Start of Validation on files for prediction!!
2025-04-23/14:20:03		Raw Data Validation Complete!!
2025-04-23/14:20:03		Starting Data Transforamtion!!
2025-04-23/14:20:03		DataTransformation Completed!!!
2025-04-23/14:20:03		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-23/14:20:04		Table creation Completed!!
2025-04-23/14:20:04		Insertion of Data into Table started!!!!
2025-04-23/14:20:27		Insertion in Table completed!!!
2025-04-23/14:20:27		Deleting Good Data Folder!!!
2025-04-23/14:20:27		Good_Data folder deleted!!!
2025-04-23/14:20:27		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-23/14:20:27		Bad files moved to archive!! Bad folder Deleted!!
2025-04-23/14:20:27		Validation Operation completed!!
2025-04-23/14:20:27		Extracting csv file from table
2025-04-23/14:20:27		=== Starting Prediction Process ===
2025-04-23/14:20:27		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-23/14:20:27		Model directory contents: ['KMeans', 'XGBoost1', 'XGBoost0']
2025-04-23/14:20:27		Loading data...
2025-04-23/14:20:27		Entered the get_data method of the Data_Getter class
2025-04-23/14:20:27		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-23/14:20:27		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-23/14:20:27		Data shape: (500, 38)
2025-04-23/14:20:27		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-23/14:20:27		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-23/14:20:27		Initial data shape: (500, 38)
2025-04-23/14:20:27		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-23/14:20:27		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-23/14:20:27		Data shape after dropping columns: (500, 24)
2025-04-23/14:20:27		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-23/14:20:27		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation', 'insured_relationship']
2025-04-23/14:20:27		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-23/14:20:27		Entered the is_null_present method of the Preprocessor class
2025-04-23/14:20:27		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-23/14:20:27		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-23/14:20:27		Entered the impute_missing_values method of the Preprocessor class
2025-04-23/14:20:27		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-23/14:20:27		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-23/14:20:27		Encoding categorical columns...
2025-04-23/14:20:27		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-23/14:20:27		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-23/14:20:27		Entered the oneHotEncoding method of the Preprocessor class
2025-04-23/14:20:27		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-23/14:20:27		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-23/14:20:27		Scaling numerical columns...
2025-04-23/14:20:27		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-23/14:20:27		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-23/14:20:27		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-23/14:20:27		Loading KMeans model...
2025-04-23/14:20:27		Entered the load_model method of the File_Operation class
2025-04-23/14:20:27		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-23/14:20:27		KMeans model loaded successfully
2025-04-23/14:20:27		Columns being fed to the model Index(['policy_csl', 'insured_sex', 'insured_education_level',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_occupation_armed-forces', 'insured_occupation_craft-repair',
       'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving',
       'insured_relationship_not-in-family',
       'insured_relationship_other-relative', 'insured_relationship_own-child',
       'insured_relationship_unmarried', 'insured_relationship_wife',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'collision_type_Rear Collision',
       'collision_type_Side Collision', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'months_as_customer', 'policy_deductable', 'policy_annual_premium',
       'umbrella_limit', 'capital-gains', 'capital-loss',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'bodily_injuries', 'witnesses', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-23/14:20:27		Predicting clusters...
2025-04-23/14:20:27		Found clusters: [1]
2025-04-23/14:20:27		Processing cluster 1...
2025-04-23/14:20:27		Entered the find_correct_model_file method of the File_Operation class
2025-04-23/14:20:27		Exited the find_correct_model_file method of the Model_Finder class.
2025-04-23/14:20:27		Loading model: XGBoost1
2025-04-23/14:20:27		Entered the load_model method of the File_Operation class
2025-04-23/14:20:27		Model File XGBoost1 loaded. Exited the load_model method of the Model_Finder class
2025-04-23/14:20:28		Cluster 1 predictions: 500 records
2025-04-23/14:20:28		Sample probability scores: [0.11326818 0.17015229 0.1780366  0.24651518 0.24651518]
2025-04-23/14:20:28		Saving prediction results with probabilities...
2025-04-23/14:20:28		Predictions with probabilities saved to Prediction_Output_File/Predictions.csv
2025-04-23/14:20:28		=== Prediction Completed Successfully ===
2025-04-23/14:23:34		Start of Validation on files for prediction!!
2025-04-23/14:23:34		Raw Data Validation Complete!!
2025-04-23/14:23:34		Starting Data Transforamtion!!
2025-04-23/14:23:34		DataTransformation Completed!!!
2025-04-23/14:23:34		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-23/14:23:36		Table creation Completed!!
2025-04-23/14:23:36		Insertion of Data into Table started!!!!
2025-04-23/14:23:58		Insertion in Table completed!!!
2025-04-23/14:23:58		Deleting Good Data Folder!!!
2025-04-23/14:23:58		Good_Data folder deleted!!!
2025-04-23/14:23:58		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-23/14:23:58		Bad files moved to archive!! Bad folder Deleted!!
2025-04-23/14:23:58		Validation Operation completed!!
2025-04-23/14:23:58		Extracting csv file from table
2025-04-23/14:23:58		=== Starting Prediction Process ===
2025-04-23/14:23:58		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-23/14:23:58		Model directory contents: ['KMeans', 'XGBoost1', 'XGBoost0']
2025-04-23/14:23:58		Loading data...
2025-04-23/14:23:58		Entered the get_data method of the Data_Getter class
2025-04-23/14:23:58		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-23/14:23:58		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-23/14:23:58		Data shape: (500, 38)
2025-04-23/14:23:58		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-23/14:23:58		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-23/14:23:58		Initial data shape: (500, 38)
2025-04-23/14:23:58		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-23/14:23:58		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-23/14:23:58		Data shape after dropping columns: (500, 24)
2025-04-23/14:23:58		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-23/14:23:58		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation', 'insured_relationship']
2025-04-23/14:23:58		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-23/14:23:58		Entered the is_null_present method of the Preprocessor class
2025-04-23/14:23:58		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-23/14:23:58		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-23/14:23:58		Entered the impute_missing_values method of the Preprocessor class
2025-04-23/14:23:58		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-23/14:23:58		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-23/14:23:58		Encoding categorical columns...
2025-04-23/14:23:58		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-23/14:23:58		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-23/14:23:58		Entered the oneHotEncoding method of the Preprocessor class
2025-04-23/14:23:58		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-23/14:23:58		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-23/14:23:58		Scaling numerical columns...
2025-04-23/14:23:58		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-23/14:23:58		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-23/14:23:58		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-23/14:23:58		Loading KMeans model...
2025-04-23/14:23:58		Entered the load_model method of the File_Operation class
2025-04-23/14:23:58		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-23/14:23:58		KMeans model loaded successfully
2025-04-23/14:23:58		Columns being fed to the model Index(['policy_csl', 'insured_sex', 'insured_education_level',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_occupation_armed-forces', 'insured_occupation_craft-repair',
       'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving',
       'insured_relationship_not-in-family',
       'insured_relationship_other-relative', 'insured_relationship_own-child',
       'insured_relationship_unmarried', 'insured_relationship_wife',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'collision_type_Rear Collision',
       'collision_type_Side Collision', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'months_as_customer', 'policy_deductable', 'policy_annual_premium',
       'umbrella_limit', 'capital-gains', 'capital-loss',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'bodily_injuries', 'witnesses', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-23/14:23:58		Predicting clusters...
2025-04-23/14:23:58		Found clusters: [1]
2025-04-23/14:23:58		Processing cluster 1...
2025-04-23/14:23:58		Entered the find_correct_model_file method of the File_Operation class
2025-04-23/14:23:58		Exited the find_correct_model_file method of the Model_Finder class.
2025-04-23/14:23:58		Loading model: XGBoost1
2025-04-23/14:23:58		Entered the load_model method of the File_Operation class
2025-04-23/14:23:58		Model File XGBoost1 loaded. Exited the load_model method of the Model_Finder class
2025-04-23/14:23:58		Cluster 1 predictions: 500 records
2025-04-23/14:23:58		Sample probability scores: [0.11326818 0.17015229 0.1780366  0.24651518 0.24651518]
2025-04-23/14:23:58		Saving prediction results with probabilities...
2025-04-23/14:23:58		Predictions with probabilities saved to Prediction_Output_File/Predictions.csv
2025-04-23/14:23:58		=== Prediction Completed Successfully ===
2025-04-24/15:11:40		Start of Validation on files for prediction!!
2025-04-24/15:11:40		Raw Data Validation Complete!!
2025-04-24/15:11:40		Starting Data Transforamtion!!
2025-04-24/15:11:41		DataTransformation Completed!!!
2025-04-24/15:11:41		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-24/15:11:43		Table creation Completed!!
2025-04-24/15:11:43		Insertion of Data into Table started!!!!
2025-04-24/15:12:05		Insertion in Table completed!!!
2025-04-24/15:12:05		Deleting Good Data Folder!!!
2025-04-24/15:12:05		Good_Data folder deleted!!!
2025-04-24/15:12:05		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-24/15:12:05		Bad files moved to archive!! Bad folder Deleted!!
2025-04-24/15:12:05		Validation Operation completed!!
2025-04-24/15:12:05		Extracting csv file from table
2025-04-24/15:12:05		=== Starting Prediction Process ===
2025-04-24/15:12:05		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-24/15:12:05		Model directory contents: ['KMeans', 'XGBoost1', 'XGBoost0']
2025-04-24/15:12:05		Loading data...
2025-04-24/15:12:05		Entered the get_data method of the Data_Getter class
2025-04-24/15:12:05		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-24/15:12:05		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-24/15:12:05		Data shape: (500, 38)
2025-04-24/15:12:05		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-24/15:12:05		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  policy_deductable  ...  total_claim_amount  injury_claim  property_claim vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500               1000  ...               71610          6510           13020         52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500               2000  ...                5070           780             780          3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300               2000  ...               34650          7700            3850         23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500               2000  ...               63400          6340            6340         50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000               1000  ...                6500          1300             650          4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-24/15:12:05		Initial data shape: (500, 38)
2025-04-24/15:12:05		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-24/15:12:05		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-24/15:12:05		Data shape after dropping columns: (500, 24)
2025-04-24/15:12:05		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-24/15:12:05		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation', 'insured_relationship']
2025-04-24/15:12:05		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-24/15:12:05		Entered the is_null_present method of the Preprocessor class
2025-04-24/15:12:05		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-24/15:12:05		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-24/15:12:05		Entered the impute_missing_values method of the Preprocessor class
2025-04-24/15:12:05		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-24/15:12:05		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-24/15:12:05		Encoding categorical columns...
2025-04-24/15:12:05		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-24/15:12:06		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-24/15:12:06		Entered the oneHotEncoding method of the Preprocessor class
2025-04-24/15:12:06		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-24/15:12:06		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-24/15:12:06		Scaling numerical columns...
2025-04-24/15:12:06		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-24/15:12:06		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-24/15:12:06		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-24/15:12:06		Loading KMeans model...
2025-04-24/15:12:06		Entered the load_model method of the File_Operation class
2025-04-24/15:12:06		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-24/15:12:06		KMeans model loaded successfully
2025-04-24/15:12:06		Columns being fed to the model Index(['policy_csl', 'insured_sex', 'insured_education_level',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_occupation_armed-forces', 'insured_occupation_craft-repair',
       'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving',
       'insured_relationship_not-in-family',
       'insured_relationship_other-relative', 'insured_relationship_own-child',
       'insured_relationship_unmarried', 'insured_relationship_wife',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'collision_type_Rear Collision',
       'collision_type_Side Collision', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'months_as_customer', 'policy_deductable', 'policy_annual_premium',
       'umbrella_limit', 'capital-gains', 'capital-loss',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'bodily_injuries', 'witnesses', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-24/15:12:06		Predicting clusters...
2025-04-24/15:12:06		Found clusters: [1]
2025-04-24/15:12:06		Processing cluster 1...
2025-04-24/15:12:06		Entered the find_correct_model_file method of the File_Operation class
2025-04-24/15:12:06		Exited the find_correct_model_file method of the Model_Finder class.
2025-04-24/15:12:06		Loading model: XGBoost1
2025-04-24/15:12:06		Entered the load_model method of the File_Operation class
2025-04-24/15:12:06		Model File XGBoost1 loaded. Exited the load_model method of the Model_Finder class
2025-04-24/15:12:06		Cluster 1 predictions: 500 records
2025-04-24/15:12:06		Sample probability scores: [0.11326818 0.17015229 0.1780366  0.24651518 0.24651518]
2025-04-24/15:12:06		Saving prediction results with probabilities...
2025-04-24/15:12:06		Predictions with probabilities saved to Prediction_Output_File/Predictions.csv
2025-04-24/15:12:06		=== Prediction Completed Successfully ===
2025-04-24/15:15:26		Start of Validation on files for prediction!!
2025-04-24/15:15:27		Raw Data Validation Complete!!
2025-04-24/15:15:27		Starting Data Transforamtion!!
2025-04-24/15:15:27		DataTransformation Completed!!!
2025-04-24/15:15:27		Creating Prediction_Database and tables on the basis of given schema!!!
2025-04-24/15:15:29		Table creation Completed!!
2025-04-24/15:15:29		Insertion of Data into Table started!!!!
2025-04-24/15:15:53		Insertion in Table completed!!!
2025-04-24/15:15:53		Deleting Good Data Folder!!!
2025-04-24/15:15:53		Good_Data folder deleted!!!
2025-04-24/15:15:53		Moving bad files to Archive and deleting Bad_Data folder!!!
2025-04-24/15:15:53		Bad files moved to archive!! Bad folder Deleted!!
2025-04-24/15:15:53		Validation Operation completed!!
2025-04-24/15:15:53		Extracting csv file from table
2025-04-24/15:15:53		=== Starting Prediction Process ===
2025-04-24/15:15:53		Current working directory: /home/ephym/Desktop/InsurancefraudDetection
2025-04-24/15:15:53		Model directory contents: ['KMeans', 'XGBoost1', 'XGBoost0']
2025-04-24/15:15:53		Loading data...
2025-04-24/15:15:53		Entered the get_data method of the Data_Getter class
2025-04-24/15:15:54		Data Load Successful.Exited the get_data method of the Data_Getter class
2025-04-24/15:15:54		Data columns are as follows: Index(['months_as_customer', 'age', 'policy_number', 'policy_bind_date',
       'policy_state', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_zip', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_hobbies',
       'insured_relationship', 'capital-gains', 'capital-loss',
       'incident_date', 'incident_type', 'collision_type', 'incident_severity',
       'authorities_contacted', 'incident_state', 'incident_city',
       'incident_location', 'incident_hour_of_the_day',
       'number_of_vehicles_involved', 'property_damage', 'bodily_injuries',
       'witnesses', 'police_report_available', 'total_claim_amount',
       'injury_claim', 'property_claim', 'vehicle_claim', 'auto_make',
       'auto_model', 'auto_year'],
      dtype='object')
2025-04-24/15:15:54		Data shape: (500, 38)
2025-04-24/15:15:54		Data types: months_as_customer               int64
age                              int64
policy_number                    int64
policy_bind_date                object
policy_state                    object
policy_csl                      object
policy_deductable                int64
policy_annual_premium          float64
umbrella_limit                   int64
insured_zip                      int64
insured_sex                     object
insured_education_level         object
insured_occupation              object
insured_hobbies                 object
insured_relationship            object
capital-gains                    int64
capital-loss                     int64
incident_date                   object
incident_type                   object
collision_type                  object
incident_severity               object
authorities_contacted           object
incident_state                  object
incident_city                   object
incident_location               object
incident_hour_of_the_day         int64
number_of_vehicles_involved      int64
property_damage                 object
bodily_injuries                  int64
witnesses                        int64
police_report_available         object
total_claim_amount               int64
injury_claim                     int64
property_claim                   int64
vehicle_claim                    int64
auto_make                       object
auto_model                      object
auto_year                        int64
dtype: object
2025-04-24/15:15:54		Data head:
   months_as_customer  age  policy_number policy_bind_date policy_state policy_csl  ...  injury_claim  property_claim  vehicle_claim  auto_make auto_model auto_year
0                 328   48         521585       10/17/2014           OH    250/500  ...          6510           13020          52080       Saab        92x      2004
1                 228   42         342868        6/27/2006           IN    250/500  ...           780             780           3510   Mercedes       E400      2007
2                 134   29         687698         9/6/2000           OH    100/300  ...          7700            3850          23100      Dodge        RAM      2007
3                 256   41         227811        5/25/1990           IL    250/500  ...          6340            6340          50720  Chevrolet      Tahoe      2014
4                 228   44         367455         6/6/2014           IL   500/1000  ...          1300             650           4550     Accura        RSX      2009

[5 rows x 38 columns]
2025-04-24/15:15:54		Initial data shape: (500, 38)
2025-04-24/15:15:54		Raw input data sample:
{
  "months_as_customer": 328,
  "age": 48,
  "policy_number": 521585,
  "policy_bind_date": "10/17/2014",
  "policy_state": "OH",
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "umbrella_limit": 0,
  "insured_zip": 466132,
  "insured_sex": "MALE",
  "insured_education_level": "MD",
  "insured_occupation": "craft-repair",
  "insured_hobbies": "sleeping",
  "insured_relationship": "husband",
  "capital-gains": 53300,
  "capital-loss": 0,
  "incident_date": "1/25/2015",
  "incident_type": "Single Vehicle Collision",
  "collision_type": "Side Collision",
  "incident_severity": "Major Damage",
  "authorities_contacted": "Police",
  "incident_state": "SC",
  "incident_city": "Columbus",
  "incident_location": "9935 4th Drive",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "property_damage": "YES",
  "bodily_injuries": 1,
  "witnesses": 2,
  "police_report_available": "YES",
  "total_claim_amount": 71610,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "auto_make": "Saab",
  "auto_model": "92x",
  "auto_year": 2004
}
2025-04-24/15:15:54		Dropping columns: ['policy_number', 'policy_bind_date', 'policy_state', 'insured_zip', 'incident_location', 'incident_date', 'incident_state', 'incident_city', 'insured_hobbies', 'auto_make', 'auto_model', 'auto_year', 'age', 'total_claim_amount']
2025-04-24/15:15:54		Data shape after dropping columns: (500, 24)
2025-04-24/15:15:54		Data columns after dropping: Index(['months_as_customer', 'policy_csl', 'policy_deductable',
       'policy_annual_premium', 'umbrella_limit', 'insured_sex',
       'insured_education_level', 'insured_occupation', 'insured_relationship',
       'capital-gains', 'capital-loss', 'incident_type', 'collision_type',
       'incident_severity', 'authorities_contacted',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'property_damage', 'bodily_injuries', 'witnesses',
       'police_report_available', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-24/15:15:54		Final data columns: ['months_as_customer', 'policy_csl', 'policy_deductable', 'policy_annual_premium', 'incident_severity', 'incident_hour_of_the_day', 'number_of_vehicles_involved', 'bodily_injuries', 'property_damage', 'police_report_available', 'insured_education_level', 'insured_sex', 'umbrella_limit', 'capital-gains', 'capital-loss', 'witnesses', 'injury_claim', 'property_claim', 'vehicle_claim', 'authorities_contacted', 'collision_type', 'incident_type', 'insured_occupation', 'insured_relationship']
2025-04-24/15:15:54		After column selection data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-24/15:15:54		Entered the is_null_present method of the Preprocessor class
2025-04-24/15:15:54		Finding missing values is a success.Data written to the null values file. Exited the is_null_present method of the Preprocessor class
2025-04-24/15:15:54		Imputing missing values in: ['property_damage', 'police_report_available', 'authorities_contacted', 'collision_type']
2025-04-24/15:15:54		Entered the impute_missing_values method of the Preprocessor class
2025-04-24/15:15:54		Imputing missing values Successful. Exited the impute_missing_values method of the Preprocessor class
2025-04-24/15:15:54		After imputation data sample:
{
  "months_as_customer": 328,
  "policy_csl": "250/500",
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_severity": "Major Damage",
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "property_damage": "YES",
  "police_report_available": "YES",
  "insured_education_level": "MD",
  "insured_sex": "MALE",
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080,
  "authorities_contacted": "Police",
  "collision_type": "Side Collision",
  "incident_type": "Single Vehicle Collision",
  "insured_occupation": "craft-repair",
  "insured_relationship": "husband"
}
2025-04-24/15:15:54		Encoding categorical columns...
2025-04-24/15:15:54		Entered the encode_categorical_columns method of the Preprocessor class
2025-04-24/15:15:54		encoding for categorical values successful. Exited the encode_categorical_columns method of the Preprocessor class
2025-04-24/15:15:54		Entered the oneHotEncoding method of the Preprocessor class
2025-04-24/15:15:54		one hot encoding for categorical values successful. Exited the oneHotEncoding method of the Preprocessor class
2025-04-24/15:15:54		After encoding data sample:
{
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "months_as_customer": 328,
  "policy_deductable": 1000,
  "policy_annual_premium": 1406.91,
  "incident_hour_of_the_day": 5,
  "number_of_vehicles_involved": 1,
  "bodily_injuries": 1,
  "umbrella_limit": 0,
  "capital-gains": 53300,
  "capital-loss": 0,
  "witnesses": 2,
  "injury_claim": 6510,
  "property_claim": 13020,
  "vehicle_claim": 52080
}
2025-04-24/15:15:54		Scaling numerical columns...
2025-04-24/15:15:54		Entered the scale_numerical_columns method of the Preprocessor class
2025-04-24/15:15:54		scaling for numerical values successful. Exited the scale_numerical_columns method of the Preprocessor class
2025-04-24/15:15:54		After scaling data sample:
{
  "months_as_customer": 1.0775867023028378,
  "policy_deductable": -0.30583732397491725,
  "umbrella_limit": -0.49904555884597734,
  "capital-gains": 1.0314271108995472,
  "capital-loss": 0.9395830568967751,
  "incident_hour_of_the_day": -1.0096514790109534,
  "number_of_vehicles_involved": -0.8405965588113357,
  "bodily_injuries": 0.01232877869092183,
  "witnesses": 0.5230029801552721,
  "injury_claim": -0.22671966382513692,
  "property_claim": 1.1144963895815958,
  "vehicle_claim": 0.7107621416428548,
  "policy_csl": 2.5,
  "incident_severity": 3,
  "property_damage": 1,
  "police_report_available": 1,
  "insured_education_level": 6,
  "insured_sex": 1,
  "authorities_contacted_Fire": false,
  "authorities_contacted_Other": false,
  "authorities_contacted_Police": true,
  "collision_type_Rear Collision": false,
  "collision_type_Side Collision": true,
  "incident_type_Parked Car": false,
  "incident_type_Single Vehicle Collision": true,
  "incident_type_Vehicle Theft": false,
  "insured_occupation_armed-forces": false,
  "insured_occupation_craft-repair": true,
  "insured_occupation_exec-managerial": false,
  "insured_occupation_farming-fishing": false,
  "insured_occupation_handlers-cleaners": false,
  "insured_occupation_machine-op-inspct": false,
  "insured_occupation_other-service": false,
  "insured_occupation_priv-house-serv": false,
  "insured_occupation_prof-specialty": false,
  "insured_occupation_protective-serv": false,
  "insured_occupation_sales": false,
  "insured_occupation_tech-support": false,
  "insured_occupation_transport-moving": false,
  "insured_relationship_not-in-family": false,
  "insured_relationship_other-relative": false,
  "insured_relationship_own-child": false,
  "insured_relationship_unmarried": false,
  "insured_relationship_wife": false,
  "policy_annual_premium": 1406.91
}
2025-04-24/15:15:54		Loading KMeans model...
2025-04-24/15:15:54		Entered the load_model method of the File_Operation class
2025-04-24/15:15:54		Model File KMeans loaded. Exited the load_model method of the Model_Finder class
2025-04-24/15:15:54		KMeans model loaded successfully
2025-04-24/15:15:54		Columns being fed to the model Index(['policy_csl', 'insured_sex', 'insured_education_level',
       'incident_severity', 'property_damage', 'police_report_available',
       'insured_occupation_armed-forces', 'insured_occupation_craft-repair',
       'insured_occupation_exec-managerial',
       'insured_occupation_farming-fishing',
       'insured_occupation_handlers-cleaners',
       'insured_occupation_machine-op-inspct',
       'insured_occupation_other-service',
       'insured_occupation_priv-house-serv',
       'insured_occupation_prof-specialty',
       'insured_occupation_protective-serv', 'insured_occupation_sales',
       'insured_occupation_tech-support',
       'insured_occupation_transport-moving',
       'insured_relationship_not-in-family',
       'insured_relationship_other-relative', 'insured_relationship_own-child',
       'insured_relationship_unmarried', 'insured_relationship_wife',
       'incident_type_Parked Car', 'incident_type_Single Vehicle Collision',
       'incident_type_Vehicle Theft', 'collision_type_Rear Collision',
       'collision_type_Side Collision', 'authorities_contacted_Fire',
       'authorities_contacted_Other', 'authorities_contacted_Police',
       'months_as_customer', 'policy_deductable', 'policy_annual_premium',
       'umbrella_limit', 'capital-gains', 'capital-loss',
       'incident_hour_of_the_day', 'number_of_vehicles_involved',
       'bodily_injuries', 'witnesses', 'injury_claim', 'property_claim',
       'vehicle_claim'],
      dtype='object')
2025-04-24/15:15:54		Predicting clusters...
2025-04-24/15:15:55		Found clusters: [1]
2025-04-24/15:15:55		Processing cluster 1...
2025-04-24/15:15:55		Entered the find_correct_model_file method of the File_Operation class
2025-04-24/15:15:55		Exited the find_correct_model_file method of the Model_Finder class.
2025-04-24/15:15:55		Loading model: XGBoost1
2025-04-24/15:15:55		Entered the load_model method of the File_Operation class
2025-04-24/15:15:55		Model File XGBoost1 loaded. Exited the load_model method of the Model_Finder class
2025-04-24/15:15:55		Cluster 1 predictions: 500 records
2025-04-24/15:15:55		Sample probability scores: [0.11326818 0.17015229 0.1780366  0.24651518 0.24651518]
2025-04-24/15:15:55		Saving prediction results with probabilities...
2025-04-24/15:15:55		Predictions with probabilities saved to Prediction_Output_File/Predictions.csv
2025-04-24/15:15:55		=== Prediction Completed Successfully ===
